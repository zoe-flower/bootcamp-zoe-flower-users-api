# Code generated by dev-tool; DO NOT EDIT.
name: helper-test-unit
on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true

jobs:
  test-unit:
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: github.com/flypay/*
      GOFLAGS: "-mod=vendor"
      GOTESTSUM_VERSION: 1.10.1
      GOLANGCI_LINT_VERSION: 1.54.2
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_SCANNER_VERSION: 5.0.1.3006
    steps:
      - uses: actions/checkout@v4.1.0
        with:
          # need this to run git branch otherwise it complains about a detached head when running git branch
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Generate Checksum
        run: |-
          # This file should not exist in the repo itself if it does this would overwrite.
          # This needs to be here as the hashFiles function only works in $GITHUB_WORKSPACE
          touch cachechecksum.txt
          echo "$GOTESTSUM_VERSION-$SONAR_SCANNER_VERSION-$GOLANGCI_LINT_VERSION" > cachechecksum.txt
      - name: restore_cache
        uses: actions/cache/restore@v3
        with:
          key: unit-setup-${{ runner.os }}-${{ runner.arch }}-v1-${{ hashFiles('cachechecksum.txt') }}
          path: "/tmp/cache"
      - name: Setup
        run: |-
          sudo mkdir -p /usr/local/go_workspace/bin
          if [ -d "/tmp/cache" ]
          then
              echo "using cache";
              sudo cp /tmp/cache/gotestsum/${GOTESTSUM_VERSION}/gotestsum /usr/local/bin/gotestsum
              mkdir -p /tmp/sonar-scanner-${SONAR_SCANNER_VERSION}-linux
              cp -r /tmp/cache/sonar-scanner/${SONAR_SCANNER_VERSION}/. /tmp/sonar-scanner-${SONAR_SCANNER_VERSION}-linux/.
              sudo cp /tmp/cache/golangci-lint/${GOLANGCI_LINT_VERSION}/golangci-lint /usr/local/go_workspace/bin/golangci-lint
          else
              echo "pulling from source";
              curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" | sudo tar -xz -C /usr/local/bin gotestsum
              wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VERSION}-linux.zip -P /tmp
              unzip /tmp/sonar-scanner-cli-${SONAR_SCANNER_VERSION}-linux.zip -d /tmp
              curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sudo sh -s -- -b /usr/local/go_workspace/bin v${GOLANGCI_LINT_VERSION}
              mkdir -p /tmp/cache/gotestsum/${GOTESTSUM_VERSION}
              mkdir -p /tmp/cache/sonar-scanner/${SONAR_SCANNER_VERSION}
              mkdir -p /tmp/cache/golangci-lint/${GOLANGCI_LINT_VERSION}
              cp /usr/local/bin/gotestsum /tmp/cache/gotestsum/${GOTESTSUM_VERSION}/gotestsum
              cp -r /tmp/sonar-scanner-${SONAR_SCANNER_VERSION}-linux/. /tmp/cache/sonar-scanner/${SONAR_SCANNER_VERSION}/.
              sudo cp /usr/local/go_workspace/bin/golangci-lint /tmp/cache/golangci-lint/${GOLANGCI_LINT_VERSION}/golangci-lint
          fi
          mkdir /tmp/test-results
          mkdir -p /tmp/artifacts
      - name: save_cache
        uses: actions/cache/save@v3
        with:
          key: unit-setup-${{ runner.os }}-${{ runner.arch }}-v1-${{ hashFiles('cachechecksum.txt') }}
          path: "/tmp/cache"
      - name: Cleanup Checksum
        run: |-
          rm cachechecksum.txt
        shell: bash
      - uses: actions/setup-go@v4
        with:
          cache: false
          go-version: '1.22'
      - name: restore_cache
        uses: actions/cache/restore@v3
        with:
          key: v2-golang-cache-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('go.sum') }}
          path: |-
            ~/.cache/go-build
            ~/.cache/golangci-lint
      - name: Go Test
        env:
          CI: true
        run: gotestsum --junitfile /tmp/test-results/unit-tests.xml ./internal/... -race -coverprofile=cov.out -coverpkg=./... --timeout 15m
        timeout-minutes: 20
      - uses: actions/upload-artifact@v3
        with:
          path: "/tmp/test-results"
      - name: Golangci Lint
        run: "/usr/local/go_workspace/bin/golangci-lint run --out-format checkstyle --issues-exit-code=0 --timeout=5m0s > report.xml"
      - uses: actions/upload-artifact@v3
        with:
          path: "report.xml"
      - name: Code Coverage HTML
        run: |-
          pushd cmd/app
          go tool cover -html=../../cov.out -o /tmp/artifacts/coverage.html
          popd
      - uses: actions/upload-artifact@v3
        with:
          path: "/tmp/artifacts"
      - name: save_cache
        uses: actions/cache/save@v3
        with:
          key: v2-golang-cache-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('go.sum') }}
          path: |-
            ~/.cache/go-build
            ~/.cache/golangci-lint
      - name: Generate Sonar Checksum
        run: |-
          # This file should not exist in the repo itself if it does this would overwrite.
          # This needs to be here as the hashFiles function only works in $GITHUB_WORKSPACE
          touch sonarchecksum.txt
          echo "$SONAR_SCANNER_VERSION" > sonarchecksum.txt
      - name: restore_cache
        uses: actions/cache/restore@v3.3.2
        with:
          key: v1-sonar-cache-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('sonarchecksum.txt') }}
          path: "~/.sonar/cache"
      - name: Analyse Code
        env:
          GITHUB_BRANCH: ${{ github.ref_name }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          REPOSITORY: ${{ github.event.repository.name }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |-
          # go-kit runs "git config remote.origin.url" which fails if this isn't set
          git config --global --add safe.directory '*'        

          default_branch=main
          pr_branch=$(git rev-parse --abbrev-ref HEAD)

          # Explicitly checkout default branch so that Sonarcloud can compare target branch
          git checkout -B $default_branch remotes/origin/$default_branch 
          git checkout $pr_branch

          if [ "${GITHUB_BRANCH}" = "main" ]; then
            /tmp/sonar-scanner-${SONAR_SCANNER_VERSION}-linux/bin/sonar-scanner -Dsonar.projectKey="flypay_${REPOSITORY}" -Dsonar.organization=flyt -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN -Dsonar.exclusions="**/*_test.go,**/vendor/**,**/testdata/*,report.xml,**/*.gen.go,**/*.js,**/fixtures/*,**/mocks/*,cmd/app/**,resources/**" -Dsonar.tests=. -Dsonar.test.inclusions="**/*_test.go" -Dsonar.test.exclusions="**/vendor/**" -Dsonar.go.coverage.reportPaths=cov.out -Dsonar.go.golangci-lint.reportPaths=report.xml -Dsonar.projectVersion=$(git rev-parse --verify HEAD);
          elif [ -n "$PR_NUMBER" ]; then
            /tmp/sonar-scanner-${SONAR_SCANNER_VERSION}-linux/bin/sonar-scanner -Dsonar.projectKey="flypay_${REPOSITORY}" -Dsonar.organization=flyt -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN -Dsonar.exclusions="**/*_test.go,**/vendor/**,**/testdata/*,report.xml,**/*.gen.go,**/*.js,**/fixtures/*,**/mocks/*,cmd/app/**,resources/**" -Dsonar.tests=. -Dsonar.test.inclusions="**/*_test.go" -Dsonar.test.exclusions="**/vendor/**" -Dsonar.go.coverage.reportPaths=cov.out -Dsonar.go.golangci-lint.reportPaths=report.xml -Dsonar.pullrequest.key="${PR_NUMBER}" -Dsonar.pullrequest.branch="${GITHUB_BRANCH}" -Dsonar.pullrequest.base=$default_branch -Dsonar.pullrequest.github.repository="${GITHUB_REPOSITORY_OWNER}/${REPOSITORY}" -Dsonar.pullrequest.provider=github;
          else
            echo "Unexpected call to analyse code"
            exit 1        
          fi
      - name: save_cache
        uses: actions/cache/save@v3.3.2
        with:
          key: v1-sonar-cache-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('sonarchecksum.txt') }}
          path: "~/.sonar/cache"
      - name: Cleanup Checksum
        run: |-
          rm sonarchecksum.txt
        shell: bash

