# Code generated by dev-tool; DO NOT EDIT.
name: release
on:
  push:
    branches:
      - main

# Only allow one of these to run per merge
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-unit:
    uses: ./.github/workflows/helper-test-unit.yml
    secrets: inherit
  create-ecr: 
    uses: flypay/actions-service-tool/.github/workflows/create-ecr.yml@v1.1.1
  tool_build-amd:
    uses: flypay/actions-service-tool/.github/workflows/build-amd.yml@v1.0.8
    needs: create-ecr
  tool_build-arm:
    uses: flypay/actions-service-tool/.github/workflows/build-arm.yml@v1.0.8
    needs: create-ecr
  tool_build-combine:
    needs:
    - tool_build-amd
    - tool_build-arm
    uses: flypay/actions-service-tool/.github/workflows/build-combine.yml@v1.0.8
  test-contract:
    uses: ./.github/workflows/helper-test-contract.yml
    secrets: inherit
  pact-contract-upload:
    runs-on: ubuntu-latest
    needs:
    - test-contract
    - test-unit
    env:
      PACT_API_TOKEN: ${{ secrets.PACT_API_TOKEN }}
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: actions/download-artifact@v3.0.2
      with:
        path: "./test/contracts/consumer/pacts/"
    - uses: "./.github/actions/pactinstall"
    - name: Pact contract upload
      env:
        SHA: ${{ github.sha }}
      run: |-
        export PATH=$PATH:/opt/pact/bin
        if [ -d ./test/contracts/consumer/pacts ]; then cd ./test/contracts/consumer/pacts/ && shopt -s nullglob && for j in *.json; do pact-broker publish --consumer-app-version $SHA --broker-base-url https://flytio.pactflow.io --broker-token $PACT_API_TOKEN $j --tag master; done; fi
  can-i-deploy:
    runs-on: ubuntu-latest
    needs:
    - pact-contract-upload
    env:
      PACT_API_TOKEN: ${{ secrets.PACT_API_TOKEN }}
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/pactinstall"
    - name: Can I Deploy
      env:
        REPOSITORY: ${{ github.event.repository.name }}
        SHA: ${{ github.sha }}
      run: |-
        export PATH=$PATH:/opt/pact/bin
        if [ -d ./test/contracts/consumer ] || [ -d ./test/contracts/provider ]; then pact-broker can-i-deploy --broker-base-url https://flytio.pactflow.io --broker-token $PACT_API_TOKEN --pacticipant $REPOSITORY --version $SHA --to production --retry-while-unknown 20; fi
  tag-pact-production:
    runs-on: ubuntu-latest
    needs:
    - can-i-deploy
    env:
      PACT_API_TOKEN: ${{ secrets.PACT_API_TOKEN }}
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/pactinstall"
    - name: Tag Pact Production
      env:
        REPOSITORY: ${{ github.event.repository.name }}
        SHA: ${{ github.sha }}
      run: |-
        export PATH=$PATH:/opt/pact/bin
        if [ -d ./test/contracts/consumer ] || [ -d ./test/contracts/provider ]; then pact-broker create-version-tag --broker-base-url https://flytio.pactflow.io --broker-token $PACT_API_TOKEN --pacticipant $REPOSITORY --version $SHA --tag production; fi
  monorepo-tests:
    uses: ./.github/workflows/helper-monorepo-tests.yml
    secrets: inherit
  tool_resource-creation-staging:
    needs:
    - tool_build-combine
    - test-unit
    - can-i-deploy
    - monorepo-tests
    uses: flypay/actions-service-tool/.github/workflows/resource-creation.yml@v1.0.8
    with:
      gha_deploy_role: ${{ vars.STAGING_GHA_DEPLOY_ROLE }}
      team: "jetc-tooling"
      projections: '{}'
      composite_projections: '{}'
      datastore_resource_names: '[]'
      datastore_composite_resource_names: '{}'
      object_store_resource_names: '["large-messages"]'
      object_store_expire_days: '[14]'
      assets_resource_names: '[]'
      assets_expire_days: '[]'
      consume_event_names: '{}'
      consume_queues: '[]'
      consume_event_receive_count: '{}'
      consume_event_hashed: true
      gateway_http_type: 'api'
      gateway_rate_limit_second: '5'
      gateway_allowed_payload_size: '1'
    secrets:
      ASSETS_ACM_ARN: ${{ secrets.STAGING_ASSETS_ACM_ARN }}
      ASSETS_ZONE_ID: ${{ secrets.STAGING_ASSETS_ZONE_ID }}
      EVENT_BUS_KMS_ARN: ${{ secrets.STAGING_EVENT_BUS_KMS_ARN }}
      GATEWAY_WEB_ALB_DNS_NAME: ${{ secrets.STAGING_GATEWAY_WEB_ALB_DNS_NAME }}
      OPENID_CONNECT_ARN: ${{ secrets.STAGING_OPENID_CONNECT_ARN }}
      OPENID_CONNECT_URL: ${{ secrets.STAGING_OPENID_CONNECT_URL }}
      PLATFORM_ENVIRONMENT: ${{ secrets.STAGING_PLATFORM_ENVIRONMENT }}
      RESOURCES_ASSETS_DOMAIN: ${{ secrets.STAGING_RESOURCES_ASSETS_DOMAIN }}
  tool_deploy-staging:
    needs:
    - tool_resource-creation-staging
    uses: flypay/actions-service-tool/.github/workflows/deploy.yml@v1.0.8
    with:
      gha_deploy_role: ${{ vars.STAGING_GHA_DEPLOY_ROLE }}
      platform_environment: "staging"
      account_id: "364123201955"
      service_chart_version: "0.15.3"
    secrets:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      OPSGENIE_API_KEY: ${{ secrets.STAGING_OPSGENIE_API_KEY }}
  tool_resource-creation-production:
    needs:
    - tool_deploy-staging
    uses: flypay/actions-service-tool/.github/workflows/resource-creation.yml@v1.0.8
    with:
      gha_deploy_role: ${{ vars.PRODUCTION_GHA_DEPLOY_ROLE }}
      team: "jetc-tooling"
      projections: '{}'
      composite_projections: '{}'
      datastore_resource_names: '[]'
      datastore_composite_resource_names: '{}'
      object_store_resource_names: '["large-messages"]'
      object_store_expire_days: '[14]'
      assets_resource_names: '[]'
      assets_expire_days: '[]'
      consume_event_names: '{}'
      consume_queues: '[]'
      consume_event_receive_count: '{}'
      consume_event_hashed: true
      gateway_http_type: 'api'
      gateway_rate_limit_second: '5'
      gateway_allowed_payload_size: '1'
    secrets:
      ASSETS_ACM_ARN: ${{ secrets.PRODUCTION_ASSETS_ACM_ARN }}
      ASSETS_ZONE_ID: ${{ secrets.PRODUCTION_ASSETS_ZONE_ID }}
      EVENT_BUS_KMS_ARN: ${{ secrets.PRODUCTION_EVENT_BUS_KMS_ARN }}
      GATEWAY_WEB_ALB_DNS_NAME: ${{ secrets.PRODUCTION_GATEWAY_WEB_ALB_DNS_NAME }}
      OPENID_CONNECT_ARN: ${{ secrets.PRODUCTION_OPENID_CONNECT_ARN }}
      OPENID_CONNECT_URL: ${{ secrets.PRODUCTION_OPENID_CONNECT_URL }}
      PLATFORM_ENVIRONMENT: ${{ secrets.PRODUCTION_PLATFORM_ENVIRONMENT }}
      RESOURCES_ASSETS_DOMAIN: ${{ secrets.PRODUCTION_RESOURCES_ASSETS_DOMAIN }}
  tool_deploy-production:
    needs:
    - tool_resource-creation-production
    uses: flypay/actions-service-tool/.github/workflows/deploy.yml@v1.0.8
    with:
      gha_deploy_role: ${{ vars.PRODUCTION_GHA_DEPLOY_ROLE }}
      platform_environment: "production"
      account_id: "470025225193"
      service_chart_version: "0.15.3"
    secrets:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      OPSGENIE_API_KEY: ${{ secrets.PRODUCTION_OPSGENIE_API_KEY }}
