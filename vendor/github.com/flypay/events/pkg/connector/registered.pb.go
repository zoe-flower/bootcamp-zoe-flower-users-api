// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: connector/registered.proto

package connector

import (
	_ "github.com/flypay/events/pkg/flyt"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Registered is raised when a new connector is created and available to choose on the platform
type Registered struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The connector that was registered
	Connector *Connector `protobuf:"bytes,1,opt,name=connector,proto3" json:"connector,omitempty"`
}

func (x *Registered) Reset() {
	*x = Registered{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connector_registered_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Registered) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registered) ProtoMessage() {}

func (x *Registered) ProtoReflect() protoreflect.Message {
	mi := &file_connector_registered_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registered.ProtoReflect.Descriptor instead.
func (*Registered) Descriptor() ([]byte, []int) {
	return file_connector_registered_proto_rawDescGZIP(), []int{0}
}

func (x *Registered) GetConnector() *Connector {
	if x != nil {
		return x.Connector
	}
	return nil
}

// Connector is not an event you can emit. It is a container that describes an entity.
//
// The connector definition. Aside from basic details, it explicitly describes all
// the configuration fields a connector has and for what features they pertain to
type Connector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A unique identifier for the connector
	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// The name of the connector, from the service / resource being connected e.g. "SkipTheDishes", "LCBO"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The URL of the logo image for this connector
	LogoUrl string `protobuf:"bytes,3,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	// What capability features this connector supports (MENU_SOURCE, ORDER_DESTINATION)
	//
	// Deprecated: Do not use.
	Features    []string  `protobuf:"bytes,4,rep,name=features,proto3" json:"features,omitempty"`
	FeatureList []Feature `protobuf:"varint,6,rep,packed,name=feature_list,json=featureList,proto3,enum=connector.Feature" json:"feature_list,omitempty"`
	// The list of configurable fields for this connector
	ConfigSchema []*ConnectorConfigField `protobuf:"bytes,5,rep,name=config_schema,json=configSchema,proto3" json:"config_schema,omitempty"`
	// Indicates whether this connector uses the monolith flow for ordering (TypeScript integration and GRPC)
	MonolithIntegration bool `protobuf:"varint,7,opt,name=monolith_integration,json=monolithIntegration,proto3" json:"monolith_integration,omitempty"`
	// Indicates whether this connector uses the monolith flow for menus (TypeScript integration and GRPC)
	MonolithMenuIntegration bool `protobuf:"varint,8,opt,name=monolith_menu_integration,json=monolithMenuIntegration,proto3" json:"monolith_menu_integration,omitempty"`
}

func (x *Connector) Reset() {
	*x = Connector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connector_registered_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connector) ProtoMessage() {}

func (x *Connector) ProtoReflect() protoreflect.Message {
	mi := &file_connector_registered_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connector.ProtoReflect.Descriptor instead.
func (*Connector) Descriptor() ([]byte, []int) {
	return file_connector_registered_proto_rawDescGZIP(), []int{1}
}

func (x *Connector) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *Connector) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Connector) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

// Deprecated: Do not use.
func (x *Connector) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *Connector) GetFeatureList() []Feature {
	if x != nil {
		return x.FeatureList
	}
	return nil
}

func (x *Connector) GetConfigSchema() []*ConnectorConfigField {
	if x != nil {
		return x.ConfigSchema
	}
	return nil
}

func (x *Connector) GetMonolithIntegration() bool {
	if x != nil {
		return x.MonolithIntegration
	}
	return false
}

func (x *Connector) GetMonolithMenuIntegration() bool {
	if x != nil {
		return x.MonolithMenuIntegration
	}
	return false
}

// ConnectorConfigField is not an event you can emit. It is a container that describes a configuration field of a connector
//
// Contains all the attributes necessary to describe a configurable field
type ConnectorConfigField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// How this field's name will be represented on the front-end
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// How this field's name will be represented in JSON
	JsonName string `protobuf:"bytes,2,opt,name=json_name,json=jsonName,proto3" json:"json_name,omitempty"`
	// Description of the field to appear on the front-end
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Whether this field is optional or not
	Required bool `protobuf:"varint,4,opt,name=required,proto3" json:"required,omitempty"`
	// Data type (NUMBER, STRING, BOOL, ARRAY)
	// Type may now also include "OBJECT" in which case the schema property is expected to be populated
	Type string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	// Whether this field is shared across all restaurants using this connector,
	// or has to be uniquely provided for each restaurant (BRAND, RESTAURANT)
	Scope string `protobuf:"bytes,6,opt,name=scope,proto3" json:"scope,omitempty"`
	// The capabilities this field belongs to (MENU, ORDER, ITEM_AVAILABILITY)
	//
	// Deprecated: Do not use.
	Capabilities   []string     `protobuf:"bytes,7,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	CapabilityList []Capability `protobuf:"varint,8,rep,packed,name=capability_list,json=capabilityList,proto3,enum=connector.Capability" json:"capability_list,omitempty"`
	//repeated attributes necessary to describe a child object
	Schema  []*ConnectorConfigField `protobuf:"bytes,9,rep,name=schema,proto3" json:"schema,omitempty"`
	IsArray bool                    `protobuf:"varint,10,opt,name=is_array,json=isArray,proto3" json:"is_array,omitempty"`
}

func (x *ConnectorConfigField) Reset() {
	*x = ConnectorConfigField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connector_registered_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectorConfigField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorConfigField) ProtoMessage() {}

func (x *ConnectorConfigField) ProtoReflect() protoreflect.Message {
	mi := &file_connector_registered_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorConfigField.ProtoReflect.Descriptor instead.
func (*ConnectorConfigField) Descriptor() ([]byte, []int) {
	return file_connector_registered_proto_rawDescGZIP(), []int{2}
}

func (x *ConnectorConfigField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConnectorConfigField) GetJsonName() string {
	if x != nil {
		return x.JsonName
	}
	return ""
}

func (x *ConnectorConfigField) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ConnectorConfigField) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *ConnectorConfigField) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ConnectorConfigField) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

// Deprecated: Do not use.
func (x *ConnectorConfigField) GetCapabilities() []string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *ConnectorConfigField) GetCapabilityList() []Capability {
	if x != nil {
		return x.CapabilityList
	}
	return nil
}

func (x *ConnectorConfigField) GetSchema() []*ConnectorConfigField {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *ConnectorConfigField) GetIsArray() bool {
	if x != nil {
		return x.IsArray
	}
	return false
}

var File_connector_registered_proto protoreflect.FileDescriptor

var file_connector_registered_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x15, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15,
	0x66, 0x6c, 0x79, 0x74, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x3a, 0x18, 0x82, 0xb5, 0x18, 0x14, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65,
	0x64, 0x22, 0xe6, 0x02, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1e,
	0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x42, 0x02, 0x18, 0x01, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x35,
	0x0a, 0x0c, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x31, 0x0a, 0x14, 0x6d,
	0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c,
	0x69, 0x74, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a,
	0x0a, 0x19, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x17, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x6e, 0x75, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xeb, 0x02, 0x0a, 0x14, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0c,
	0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x52, 0x0e, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x73, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x42, 0x8c, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x0f, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x26, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x79, 0x70, 0x61, 0x79,
	0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x09, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0xca, 0x02, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0xe2, 0x02, 0x15, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x09, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_connector_registered_proto_rawDescOnce sync.Once
	file_connector_registered_proto_rawDescData = file_connector_registered_proto_rawDesc
)

func file_connector_registered_proto_rawDescGZIP() []byte {
	file_connector_registered_proto_rawDescOnce.Do(func() {
		file_connector_registered_proto_rawDescData = protoimpl.X.CompressGZIP(file_connector_registered_proto_rawDescData)
	})
	return file_connector_registered_proto_rawDescData
}

var file_connector_registered_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_connector_registered_proto_goTypes = []interface{}{
	(*Registered)(nil),           // 0: connector.Registered
	(*Connector)(nil),            // 1: connector.Connector
	(*ConnectorConfigField)(nil), // 2: connector.ConnectorConfigField
	(Feature)(0),                 // 3: connector.Feature
	(Capability)(0),              // 4: connector.Capability
}
var file_connector_registered_proto_depIdxs = []int32{
	1, // 0: connector.Registered.connector:type_name -> connector.Connector
	3, // 1: connector.Connector.feature_list:type_name -> connector.Feature
	2, // 2: connector.Connector.config_schema:type_name -> connector.ConnectorConfigField
	4, // 3: connector.ConnectorConfigField.capability_list:type_name -> connector.Capability
	2, // 4: connector.ConnectorConfigField.schema:type_name -> connector.ConnectorConfigField
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_connector_registered_proto_init() }
func file_connector_registered_proto_init() {
	if File_connector_registered_proto != nil {
		return
	}
	file_connector_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_connector_registered_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Registered); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connector_registered_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connector_registered_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectorConfigField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_connector_registered_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_connector_registered_proto_goTypes,
		DependencyIndexes: file_connector_registered_proto_depIdxs,
		MessageInfos:      file_connector_registered_proto_msgTypes,
	}.Build()
	File_connector_registered_proto = out.File
	file_connector_registered_proto_rawDesc = nil
	file_connector_registered_proto_goTypes = nil
	file_connector_registered_proto_depIdxs = nil
}
