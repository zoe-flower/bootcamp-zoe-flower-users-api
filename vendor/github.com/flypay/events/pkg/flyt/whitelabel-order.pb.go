// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: flyt/whitelabel-order.proto

package flyt

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Deprecated: Do not use.
type WhitelabelOrderCustomerPhoneNumberDiscovered struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The order ID that comes back from the Just Eat partner API
	// https://justeat.github.io/partnerapi-docs/#/paths/~1orders/post
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// The customer phone number associated with the order.
	// This is used in conjunction with the whitelabel.order events
	CustomerNumber string           `protobuf:"bytes,2,opt,name=customer_number,json=customerNumber,proto3" json:"customer_number,omitempty"`
	Restaurant     *RestaurantIdent `protobuf:"bytes,3,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
}

func (x *WhitelabelOrderCustomerPhoneNumberDiscovered) Reset() {
	*x = WhitelabelOrderCustomerPhoneNumberDiscovered{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_whitelabel_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhitelabelOrderCustomerPhoneNumberDiscovered) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelabelOrderCustomerPhoneNumberDiscovered) ProtoMessage() {}

func (x *WhitelabelOrderCustomerPhoneNumberDiscovered) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_whitelabel_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelabelOrderCustomerPhoneNumberDiscovered.ProtoReflect.Descriptor instead.
func (*WhitelabelOrderCustomerPhoneNumberDiscovered) Descriptor() ([]byte, []int) {
	return file_flyt_whitelabel_order_proto_rawDescGZIP(), []int{0}
}

func (x *WhitelabelOrderCustomerPhoneNumberDiscovered) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *WhitelabelOrderCustomerPhoneNumberDiscovered) GetCustomerNumber() string {
	if x != nil {
		return x.CustomerNumber
	}
	return ""
}

func (x *WhitelabelOrderCustomerPhoneNumberDiscovered) GetRestaurant() *RestaurantIdent {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

type WhitelabelOrderDiscovered struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The order ID that comes back from the Just Eat partner API
	// https://justeat.github.io/partnerapi-docs/#/paths/~1orders/post
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// Used in email notifications.
	RestaurantName string `protobuf:"bytes,2,opt,name=restaurant_name,json=restaurantName,proto3" json:"restaurant_name,omitempty"`
	// The ID is used in email notifications.
	Restaurant *RestaurantIdent `protobuf:"bytes,3,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
	// The time the delivery is expected.
	DeliveryTime string `protobuf:"bytes,4,opt,name=delivery_time,json=deliveryTime,proto3" json:"delivery_time,omitempty"`
	// Self explanatory
	DeliveryNote string `protobuf:"bytes,5,opt,name=delivery_note,json=deliveryNote,proto3" json:"delivery_note,omitempty"`
	// Address for the order
	Address *Address `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	// The date time the order was created
	CreatedAt string `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Pricing information
	Subtotal float64 `protobuf:"fixed64,8,opt,name=subtotal,proto3" json:"subtotal,omitempty"`
	Total    float64 `protobuf:"fixed64,9,opt,name=total,proto3" json:"total,omitempty"`
	// The items on the order.
	Items []*WhitelabelOrderDiscovered_Item `protobuf:"bytes,10,rep,name=items,proto3" json:"items,omitempty"`
	// Extras are things like delivery po plastic charges.
	Extras []*WhitelabelOrderDiscovered_Extra `protobuf:"bytes,11,rep,name=extras,proto3" json:"extras,omitempty"`
	// The customer details are used for sending SMS and emails.
	Customer *WhitelabelOrderDiscovered_Customer `protobuf:"bytes,12,opt,name=customer,proto3" json:"customer,omitempty"`
}

func (x *WhitelabelOrderDiscovered) Reset() {
	*x = WhitelabelOrderDiscovered{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_whitelabel_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhitelabelOrderDiscovered) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelabelOrderDiscovered) ProtoMessage() {}

func (x *WhitelabelOrderDiscovered) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_whitelabel_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelabelOrderDiscovered.ProtoReflect.Descriptor instead.
func (*WhitelabelOrderDiscovered) Descriptor() ([]byte, []int) {
	return file_flyt_whitelabel_order_proto_rawDescGZIP(), []int{1}
}

func (x *WhitelabelOrderDiscovered) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *WhitelabelOrderDiscovered) GetRestaurantName() string {
	if x != nil {
		return x.RestaurantName
	}
	return ""
}

func (x *WhitelabelOrderDiscovered) GetRestaurant() *RestaurantIdent {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

func (x *WhitelabelOrderDiscovered) GetDeliveryTime() string {
	if x != nil {
		return x.DeliveryTime
	}
	return ""
}

func (x *WhitelabelOrderDiscovered) GetDeliveryNote() string {
	if x != nil {
		return x.DeliveryNote
	}
	return ""
}

func (x *WhitelabelOrderDiscovered) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *WhitelabelOrderDiscovered) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *WhitelabelOrderDiscovered) GetSubtotal() float64 {
	if x != nil {
		return x.Subtotal
	}
	return 0
}

func (x *WhitelabelOrderDiscovered) GetTotal() float64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *WhitelabelOrderDiscovered) GetItems() []*WhitelabelOrderDiscovered_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *WhitelabelOrderDiscovered) GetExtras() []*WhitelabelOrderDiscovered_Extra {
	if x != nil {
		return x.Extras
	}
	return nil
}

func (x *WhitelabelOrderDiscovered) GetCustomer() *WhitelabelOrderDiscovered_Customer {
	if x != nil {
		return x.Customer
	}
	return nil
}

type WhitelabelOrderConfirmed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Define your proto fields here
	// The order ID that comes back from the Just Eat partner API
	// https://justeat.github.io/partnerapi-docs/#/paths/~1orders/post
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *WhitelabelOrderConfirmed) Reset() {
	*x = WhitelabelOrderConfirmed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_whitelabel_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhitelabelOrderConfirmed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelabelOrderConfirmed) ProtoMessage() {}

func (x *WhitelabelOrderConfirmed) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_whitelabel_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelabelOrderConfirmed.ProtoReflect.Descriptor instead.
func (*WhitelabelOrderConfirmed) Descriptor() ([]byte, []int) {
	return file_flyt_whitelabel_order_proto_rawDescGZIP(), []int{2}
}

func (x *WhitelabelOrderConfirmed) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type WhitelabelOrderRejected struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The order ID that comes back from the Just Eat partner API
	// https://justeat.github.io/partnerapi-docs/#/paths/~1orders/post
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// Deprecated: Do not use.
	Restaurant *RestaurantIdent `protobuf:"bytes,2,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
}

func (x *WhitelabelOrderRejected) Reset() {
	*x = WhitelabelOrderRejected{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_whitelabel_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhitelabelOrderRejected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelabelOrderRejected) ProtoMessage() {}

func (x *WhitelabelOrderRejected) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_whitelabel_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelabelOrderRejected.ProtoReflect.Descriptor instead.
func (*WhitelabelOrderRejected) Descriptor() ([]byte, []int) {
	return file_flyt_whitelabel_order_proto_rawDescGZIP(), []int{3}
}

func (x *WhitelabelOrderRejected) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

// Deprecated: Do not use.
func (x *WhitelabelOrderRejected) GetRestaurant() *RestaurantIdent {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

type WhitelabelOrderCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The order ID that comes back from the Just Eat partner API
	// https://justeat.github.io/partnerapi-docs/#/paths/~1orders/post
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *WhitelabelOrderCreated) Reset() {
	*x = WhitelabelOrderCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_whitelabel_order_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhitelabelOrderCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelabelOrderCreated) ProtoMessage() {}

func (x *WhitelabelOrderCreated) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_whitelabel_order_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelabelOrderCreated.ProtoReflect.Descriptor instead.
func (*WhitelabelOrderCreated) Descriptor() ([]byte, []int) {
	return file_flyt_whitelabel_order_proto_rawDescGZIP(), []int{4}
}

func (x *WhitelabelOrderCreated) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type WhitelabelOrderAcceptedByRestaurant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The order ID that comes back from the Just Eat partner API
	// https://justeat.github.io/partnerapi-docs/#/paths/~1orders/post
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *WhitelabelOrderAcceptedByRestaurant) Reset() {
	*x = WhitelabelOrderAcceptedByRestaurant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_whitelabel_order_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhitelabelOrderAcceptedByRestaurant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelabelOrderAcceptedByRestaurant) ProtoMessage() {}

func (x *WhitelabelOrderAcceptedByRestaurant) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_whitelabel_order_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelabelOrderAcceptedByRestaurant.ProtoReflect.Descriptor instead.
func (*WhitelabelOrderAcceptedByRestaurant) Descriptor() ([]byte, []int) {
	return file_flyt_whitelabel_order_proto_rawDescGZIP(), []int{5}
}

func (x *WhitelabelOrderAcceptedByRestaurant) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type WhitelabelOrderRejectedByRestaurant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The order ID that comes back from the Just Eat partner API
	// https://justeat.github.io/partnerapi-docs/#/paths/~1orders/post
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *WhitelabelOrderRejectedByRestaurant) Reset() {
	*x = WhitelabelOrderRejectedByRestaurant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_whitelabel_order_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhitelabelOrderRejectedByRestaurant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelabelOrderRejectedByRestaurant) ProtoMessage() {}

func (x *WhitelabelOrderRejectedByRestaurant) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_whitelabel_order_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelabelOrderRejectedByRestaurant.ProtoReflect.Descriptor instead.
func (*WhitelabelOrderRejectedByRestaurant) Descriptor() ([]byte, []int) {
	return file_flyt_whitelabel_order_proto_rawDescGZIP(), []int{6}
}

func (x *WhitelabelOrderRejectedByRestaurant) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type WhitelabelOrderIgnored struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The order ID that comes back from the Just Eat partner API
	// https://justeat.github.io/partnerapi-docs/#/paths/~1orders/post
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *WhitelabelOrderIgnored) Reset() {
	*x = WhitelabelOrderIgnored{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_whitelabel_order_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhitelabelOrderIgnored) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelabelOrderIgnored) ProtoMessage() {}

func (x *WhitelabelOrderIgnored) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_whitelabel_order_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelabelOrderIgnored.ProtoReflect.Descriptor instead.
func (*WhitelabelOrderIgnored) Descriptor() ([]byte, []int) {
	return file_flyt_whitelabel_order_proto_rawDescGZIP(), []int{7}
}

func (x *WhitelabelOrderIgnored) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type WhitelabelOrderPaid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The order ID that comes back from the Just Eat partner API
	// https://justeat.github.io/partnerapi-docs/#/paths/~1orders/post
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *WhitelabelOrderPaid) Reset() {
	*x = WhitelabelOrderPaid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_whitelabel_order_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhitelabelOrderPaid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelabelOrderPaid) ProtoMessage() {}

func (x *WhitelabelOrderPaid) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_whitelabel_order_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelabelOrderPaid.ProtoReflect.Descriptor instead.
func (*WhitelabelOrderPaid) Descriptor() ([]byte, []int) {
	return file_flyt_whitelabel_order_proto_rawDescGZIP(), []int{8}
}

func (x *WhitelabelOrderPaid) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

// Deprecated: Do not use.
type WhitelabelOrderDriverAssigned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The order ID that comes back from the Just Eat partner API
	// https://justeat.github.io/partnerapi-docs/#/paths/~1orders/post
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *WhitelabelOrderDriverAssigned) Reset() {
	*x = WhitelabelOrderDriverAssigned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_whitelabel_order_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhitelabelOrderDriverAssigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelabelOrderDriverAssigned) ProtoMessage() {}

func (x *WhitelabelOrderDriverAssigned) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_whitelabel_order_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelabelOrderDriverAssigned.ProtoReflect.Descriptor instead.
func (*WhitelabelOrderDriverAssigned) Descriptor() ([]byte, []int) {
	return file_flyt_whitelabel_order_proto_rawDescGZIP(), []int{9}
}

func (x *WhitelabelOrderDriverAssigned) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

// Deprecated: Do not use.
type WhitelabelOrderDriverAtRestaurant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The order ID that comes back from the Just Eat partner API
	// https://justeat.github.io/partnerapi-docs/#/paths/~1orders/post
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *WhitelabelOrderDriverAtRestaurant) Reset() {
	*x = WhitelabelOrderDriverAtRestaurant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_whitelabel_order_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhitelabelOrderDriverAtRestaurant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelabelOrderDriverAtRestaurant) ProtoMessage() {}

func (x *WhitelabelOrderDriverAtRestaurant) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_whitelabel_order_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelabelOrderDriverAtRestaurant.ProtoReflect.Descriptor instead.
func (*WhitelabelOrderDriverAtRestaurant) Descriptor() ([]byte, []int) {
	return file_flyt_whitelabel_order_proto_rawDescGZIP(), []int{10}
}

func (x *WhitelabelOrderDriverAtRestaurant) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

// Deprecated: Do not use.
type WhitelabelOrderOnItsWay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The order ID that comes back from the Just Eat partner API
	// https://justeat.github.io/partnerapi-docs/#/paths/~1orders/post
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// Deprecated: Do not use.
	Restaurant *RestaurantIdent `protobuf:"bytes,2,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
}

func (x *WhitelabelOrderOnItsWay) Reset() {
	*x = WhitelabelOrderOnItsWay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_whitelabel_order_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhitelabelOrderOnItsWay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelabelOrderOnItsWay) ProtoMessage() {}

func (x *WhitelabelOrderOnItsWay) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_whitelabel_order_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelabelOrderOnItsWay.ProtoReflect.Descriptor instead.
func (*WhitelabelOrderOnItsWay) Descriptor() ([]byte, []int) {
	return file_flyt_whitelabel_order_proto_rawDescGZIP(), []int{11}
}

func (x *WhitelabelOrderOnItsWay) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

// Deprecated: Do not use.
func (x *WhitelabelOrderOnItsWay) GetRestaurant() *RestaurantIdent {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

// Deprecated: Do not use.
type WhitelabelOrderAtDeliveryAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The order ID that comes back from the Just Eat partner API
	// https://justeat.github.io/partnerapi-docs/#/paths/~1orders/post
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *WhitelabelOrderAtDeliveryAddress) Reset() {
	*x = WhitelabelOrderAtDeliveryAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_whitelabel_order_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhitelabelOrderAtDeliveryAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelabelOrderAtDeliveryAddress) ProtoMessage() {}

func (x *WhitelabelOrderAtDeliveryAddress) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_whitelabel_order_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelabelOrderAtDeliveryAddress.ProtoReflect.Descriptor instead.
func (*WhitelabelOrderAtDeliveryAddress) Descriptor() ([]byte, []int) {
	return file_flyt_whitelabel_order_proto_rawDescGZIP(), []int{12}
}

func (x *WhitelabelOrderAtDeliveryAddress) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

// Deprecated: Do not use.
type WhitelabelOrderDelivered struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The order ID that comes back from the Just Eat partner API
	// https://justeat.github.io/partnerapi-docs/#/paths/~1orders/post
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *WhitelabelOrderDelivered) Reset() {
	*x = WhitelabelOrderDelivered{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_whitelabel_order_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhitelabelOrderDelivered) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelabelOrderDelivered) ProtoMessage() {}

func (x *WhitelabelOrderDelivered) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_whitelabel_order_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelabelOrderDelivered.ProtoReflect.Descriptor instead.
func (*WhitelabelOrderDelivered) Descriptor() ([]byte, []int) {
	return file_flyt_whitelabel_order_proto_rawDescGZIP(), []int{13}
}

func (x *WhitelabelOrderDelivered) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type WhitelabelOrderDiscovered_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                                       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string                                       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Price       float64                                      `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	Ingredients []*WhitelabelOrderDiscovered_Item_Ingredient `protobuf:"bytes,4,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
}

func (x *WhitelabelOrderDiscovered_Item) Reset() {
	*x = WhitelabelOrderDiscovered_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_whitelabel_order_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhitelabelOrderDiscovered_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelabelOrderDiscovered_Item) ProtoMessage() {}

func (x *WhitelabelOrderDiscovered_Item) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_whitelabel_order_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelabelOrderDiscovered_Item.ProtoReflect.Descriptor instead.
func (*WhitelabelOrderDiscovered_Item) Descriptor() ([]byte, []int) {
	return file_flyt_whitelabel_order_proto_rawDescGZIP(), []int{1, 0}
}

func (x *WhitelabelOrderDiscovered_Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WhitelabelOrderDiscovered_Item) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WhitelabelOrderDiscovered_Item) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *WhitelabelOrderDiscovered_Item) GetIngredients() []*WhitelabelOrderDiscovered_Item_Ingredient {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

type WhitelabelOrderDiscovered_Extra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Price float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *WhitelabelOrderDiscovered_Extra) Reset() {
	*x = WhitelabelOrderDiscovered_Extra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_whitelabel_order_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhitelabelOrderDiscovered_Extra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelabelOrderDiscovered_Extra) ProtoMessage() {}

func (x *WhitelabelOrderDiscovered_Extra) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_whitelabel_order_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelabelOrderDiscovered_Extra.ProtoReflect.Descriptor instead.
func (*WhitelabelOrderDiscovered_Extra) Descriptor() ([]byte, []int) {
	return file_flyt_whitelabel_order_proto_rawDescGZIP(), []int{1, 1}
}

func (x *WhitelabelOrderDiscovered_Extra) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WhitelabelOrderDiscovered_Extra) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type WhitelabelOrderDiscovered_Customer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumber string `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Email       string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *WhitelabelOrderDiscovered_Customer) Reset() {
	*x = WhitelabelOrderDiscovered_Customer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_whitelabel_order_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhitelabelOrderDiscovered_Customer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelabelOrderDiscovered_Customer) ProtoMessage() {}

func (x *WhitelabelOrderDiscovered_Customer) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_whitelabel_order_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelabelOrderDiscovered_Customer.ProtoReflect.Descriptor instead.
func (*WhitelabelOrderDiscovered_Customer) Descriptor() ([]byte, []int) {
	return file_flyt_whitelabel_order_proto_rawDescGZIP(), []int{1, 2}
}

func (x *WhitelabelOrderDiscovered_Customer) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *WhitelabelOrderDiscovered_Customer) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type WhitelabelOrderDiscovered_Item_Ingredient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                                       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Removed     bool                                         `protobuf:"varint,2,opt,name=removed,proto3" json:"removed,omitempty"`
	Ingredients []*WhitelabelOrderDiscovered_Item_Ingredient `protobuf:"bytes,3,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
}

func (x *WhitelabelOrderDiscovered_Item_Ingredient) Reset() {
	*x = WhitelabelOrderDiscovered_Item_Ingredient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_whitelabel_order_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhitelabelOrderDiscovered_Item_Ingredient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelabelOrderDiscovered_Item_Ingredient) ProtoMessage() {}

func (x *WhitelabelOrderDiscovered_Item_Ingredient) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_whitelabel_order_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelabelOrderDiscovered_Item_Ingredient.ProtoReflect.Descriptor instead.
func (*WhitelabelOrderDiscovered_Item_Ingredient) Descriptor() ([]byte, []int) {
	return file_flyt_whitelabel_order_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *WhitelabelOrderDiscovered_Item_Ingredient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WhitelabelOrderDiscovered_Item_Ingredient) GetRemoved() bool {
	if x != nil {
		return x.Removed
	}
	return false
}

func (x *WhitelabelOrderDiscovered_Item_Ingredient) GetIngredients() []*WhitelabelOrderDiscovered_Item_Ingredient {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

var File_flyt_whitelabel_order_proto protoreflect.FileDescriptor

var file_flyt_whitelabel_order_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x66, 0x6c, 0x79, 0x74, 0x2f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x66,
	0x6c, 0x79, 0x74, 0x1a, 0x15, 0x66, 0x6c, 0x79, 0x74, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x66, 0x6c, 0x79, 0x74,
	0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x66, 0x6c, 0x79, 0x74, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe2, 0x01, 0x0a, 0x2c,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x35, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x3a, 0x37, 0x18, 0x01, 0x82, 0xb5, 0x18, 0x31, 0x77,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2d, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2d, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64,
	0x22, 0xec, 0x07, 0x0a, 0x19, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4e,
	0x6f, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73,
	0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3a, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66,
	0x6c, 0x79, 0x74, 0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3d, 0x0a, 0x06, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x6c, 0x79, 0x74,
	0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x52, 0x06, 0x65, 0x78, 0x74, 0x72, 0x61, 0x73, 0x12, 0x44, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x66, 0x6c, 0x79,
	0x74, 0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x1a, 0xb5,
	0x02, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x8d, 0x01, 0x0a, 0x0a, 0x49, 0x6e, 0x67, 0x72, 0x65,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x64, 0x12, 0x51, 0x0a, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x31, 0x0a, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x1a, 0x43, 0x0a, 0x08, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x3a, 0x1f,
	0x82, 0xb5, 0x18, 0x1b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x22,
	0x55, 0x0a, 0x18, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x3a, 0x1e, 0x82, 0xb5, 0x18, 0x1a, 0x77, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x17, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0a, 0x72, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x3a, 0x1d, 0x82, 0xb5, 0x18, 0x19, 0x77, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x72,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0x51, 0x0a, 0x16, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x3a, 0x1c, 0x82, 0xb5,
	0x18, 0x18, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x6d, 0x0a, 0x23, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x65, 0x64, 0x42, 0x79, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x3a, 0x2b, 0x82, 0xb5,
	0x18, 0x27, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x2d, 0x62, 0x79, 0x2d, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x22, 0x6d, 0x0a, 0x23, 0x57, 0x68, 0x69,
	0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x3a, 0x2b, 0x82, 0xb5, 0x18,
	0x27, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x2d, 0x62, 0x79, 0x2d, 0x72, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x22, 0x51, 0x0a, 0x16, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x3a, 0x1c, 0x82,
	0xb5, 0x18, 0x18, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x22, 0x4b, 0x0a, 0x13, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x3a, 0x19, 0x82,
	0xb5, 0x18, 0x15, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x1d, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x3a, 0x26, 0x18, 0x01, 0x82, 0xb5, 0x18, 0x20, 0x77, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x2d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x22, 0x6b, 0x0a, 0x21,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x41, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x3a, 0x2b, 0x18, 0x01,
	0x82, 0xb5, 0x18, 0x25, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2d, 0x61, 0x74, 0x2d, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x17, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x6e, 0x49,
	0x74, 0x73, 0x57, 0x61, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x39, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x3a, 0x21, 0x18, 0x01, 0x82,
	0xb5, 0x18, 0x1b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x6f, 0x6e, 0x2d, 0x69, 0x74, 0x73, 0x2d, 0x77, 0x61, 0x79, 0x22, 0x69,
	0x0a, 0x20, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x41, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x3a, 0x2a, 0x18,
	0x01, 0x82, 0xb5, 0x18, 0x24, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x61, 0x74, 0x2d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x2d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x57, 0x0a, 0x18, 0x57, 0x68, 0x69,
	0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x3a, 0x20, 0x18, 0x01, 0x82, 0xb5, 0x18, 0x1a, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x65, 0x64, 0x42, 0x73, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x42, 0x14,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0xa2, 0x02, 0x03, 0x46, 0x58, 0x58, 0xaa,
	0x02, 0x04, 0x46, 0x6c, 0x79, 0x74, 0xca, 0x02, 0x04, 0x46, 0x6c, 0x79, 0x74, 0xe2, 0x02, 0x10,
	0x46, 0x6c, 0x79, 0x74, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x04, 0x46, 0x6c, 0x79, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flyt_whitelabel_order_proto_rawDescOnce sync.Once
	file_flyt_whitelabel_order_proto_rawDescData = file_flyt_whitelabel_order_proto_rawDesc
)

func file_flyt_whitelabel_order_proto_rawDescGZIP() []byte {
	file_flyt_whitelabel_order_proto_rawDescOnce.Do(func() {
		file_flyt_whitelabel_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_flyt_whitelabel_order_proto_rawDescData)
	})
	return file_flyt_whitelabel_order_proto_rawDescData
}

var file_flyt_whitelabel_order_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_flyt_whitelabel_order_proto_goTypes = []interface{}{
	(*WhitelabelOrderCustomerPhoneNumberDiscovered)(nil), // 0: flyt.WhitelabelOrderCustomerPhoneNumberDiscovered
	(*WhitelabelOrderDiscovered)(nil),                    // 1: flyt.WhitelabelOrderDiscovered
	(*WhitelabelOrderConfirmed)(nil),                     // 2: flyt.WhitelabelOrderConfirmed
	(*WhitelabelOrderRejected)(nil),                      // 3: flyt.WhitelabelOrderRejected
	(*WhitelabelOrderCreated)(nil),                       // 4: flyt.WhitelabelOrderCreated
	(*WhitelabelOrderAcceptedByRestaurant)(nil),          // 5: flyt.WhitelabelOrderAcceptedByRestaurant
	(*WhitelabelOrderRejectedByRestaurant)(nil),          // 6: flyt.WhitelabelOrderRejectedByRestaurant
	(*WhitelabelOrderIgnored)(nil),                       // 7: flyt.WhitelabelOrderIgnored
	(*WhitelabelOrderPaid)(nil),                          // 8: flyt.WhitelabelOrderPaid
	(*WhitelabelOrderDriverAssigned)(nil),                // 9: flyt.WhitelabelOrderDriverAssigned
	(*WhitelabelOrderDriverAtRestaurant)(nil),            // 10: flyt.WhitelabelOrderDriverAtRestaurant
	(*WhitelabelOrderOnItsWay)(nil),                      // 11: flyt.WhitelabelOrderOnItsWay
	(*WhitelabelOrderAtDeliveryAddress)(nil),             // 12: flyt.WhitelabelOrderAtDeliveryAddress
	(*WhitelabelOrderDelivered)(nil),                     // 13: flyt.WhitelabelOrderDelivered
	(*WhitelabelOrderDiscovered_Item)(nil),               // 14: flyt.WhitelabelOrderDiscovered.Item
	(*WhitelabelOrderDiscovered_Extra)(nil),              // 15: flyt.WhitelabelOrderDiscovered.Extra
	(*WhitelabelOrderDiscovered_Customer)(nil),           // 16: flyt.WhitelabelOrderDiscovered.Customer
	(*WhitelabelOrderDiscovered_Item_Ingredient)(nil),    // 17: flyt.WhitelabelOrderDiscovered.Item.Ingredient
	(*RestaurantIdent)(nil),                              // 18: flyt.RestaurantIdent
	(*Address)(nil),                                      // 19: flyt.Address
}
var file_flyt_whitelabel_order_proto_depIdxs = []int32{
	18, // 0: flyt.WhitelabelOrderCustomerPhoneNumberDiscovered.restaurant:type_name -> flyt.RestaurantIdent
	18, // 1: flyt.WhitelabelOrderDiscovered.restaurant:type_name -> flyt.RestaurantIdent
	19, // 2: flyt.WhitelabelOrderDiscovered.address:type_name -> flyt.Address
	14, // 3: flyt.WhitelabelOrderDiscovered.items:type_name -> flyt.WhitelabelOrderDiscovered.Item
	15, // 4: flyt.WhitelabelOrderDiscovered.extras:type_name -> flyt.WhitelabelOrderDiscovered.Extra
	16, // 5: flyt.WhitelabelOrderDiscovered.customer:type_name -> flyt.WhitelabelOrderDiscovered.Customer
	18, // 6: flyt.WhitelabelOrderRejected.restaurant:type_name -> flyt.RestaurantIdent
	18, // 7: flyt.WhitelabelOrderOnItsWay.restaurant:type_name -> flyt.RestaurantIdent
	17, // 8: flyt.WhitelabelOrderDiscovered.Item.ingredients:type_name -> flyt.WhitelabelOrderDiscovered.Item.Ingredient
	17, // 9: flyt.WhitelabelOrderDiscovered.Item.Ingredient.ingredients:type_name -> flyt.WhitelabelOrderDiscovered.Item.Ingredient
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_flyt_whitelabel_order_proto_init() }
func file_flyt_whitelabel_order_proto_init() {
	if File_flyt_whitelabel_order_proto != nil {
		return
	}
	file_flyt_descriptor_proto_init()
	file_flyt_order_created_proto_init()
	file_flyt_restaurant_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_flyt_whitelabel_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhitelabelOrderCustomerPhoneNumberDiscovered); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_whitelabel_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhitelabelOrderDiscovered); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_whitelabel_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhitelabelOrderConfirmed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_whitelabel_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhitelabelOrderRejected); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_whitelabel_order_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhitelabelOrderCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_whitelabel_order_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhitelabelOrderAcceptedByRestaurant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_whitelabel_order_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhitelabelOrderRejectedByRestaurant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_whitelabel_order_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhitelabelOrderIgnored); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_whitelabel_order_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhitelabelOrderPaid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_whitelabel_order_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhitelabelOrderDriverAssigned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_whitelabel_order_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhitelabelOrderDriverAtRestaurant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_whitelabel_order_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhitelabelOrderOnItsWay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_whitelabel_order_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhitelabelOrderAtDeliveryAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_whitelabel_order_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhitelabelOrderDelivered); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_whitelabel_order_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhitelabelOrderDiscovered_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_whitelabel_order_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhitelabelOrderDiscovered_Extra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_whitelabel_order_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhitelabelOrderDiscovered_Customer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_whitelabel_order_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhitelabelOrderDiscovered_Item_Ingredient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flyt_whitelabel_order_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_flyt_whitelabel_order_proto_goTypes,
		DependencyIndexes: file_flyt_whitelabel_order_proto_depIdxs,
		MessageInfos:      file_flyt_whitelabel_order_proto_msgTypes,
	}.Build()
	File_flyt_whitelabel_order_proto = out.File
	file_flyt_whitelabel_order_proto_rawDesc = nil
	file_flyt_whitelabel_order_proto_goTypes = nil
	file_flyt_whitelabel_order_proto_depIdxs = nil
}
