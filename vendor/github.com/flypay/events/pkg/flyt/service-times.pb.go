// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: flyt/service-times.proto

package flyt

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServiceTimes_OpeningType int32

const (
	ServiceTimes_DELIVERY   ServiceTimes_OpeningType = 0
	ServiceTimes_COLLECTION ServiceTimes_OpeningType = 1
)

// Enum value maps for ServiceTimes_OpeningType.
var (
	ServiceTimes_OpeningType_name = map[int32]string{
		0: "DELIVERY",
		1: "COLLECTION",
	}
	ServiceTimes_OpeningType_value = map[string]int32{
		"DELIVERY":   0,
		"COLLECTION": 1,
	}
)

func (x ServiceTimes_OpeningType) Enum() *ServiceTimes_OpeningType {
	p := new(ServiceTimes_OpeningType)
	*p = x
	return p
}

func (x ServiceTimes_OpeningType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceTimes_OpeningType) Descriptor() protoreflect.EnumDescriptor {
	return file_flyt_service_times_proto_enumTypes[0].Descriptor()
}

func (ServiceTimes_OpeningType) Type() protoreflect.EnumType {
	return &file_flyt_service_times_proto_enumTypes[0]
}

func (x ServiceTimes_OpeningType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceTimes_OpeningType.Descriptor instead.
func (ServiceTimes_OpeningType) EnumDescriptor() ([]byte, []int) {
	return file_flyt_service_times_proto_rawDescGZIP(), []int{1, 0}
}

type OpeningTimesUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Restaurant   *Ident          `protobuf:"bytes,1,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
	ServiceTimes []*ServiceTimes `protobuf:"bytes,2,rep,name=service_times,json=serviceTimes,proto3" json:"service_times,omitempty"`
	Timezone     string          `protobuf:"bytes,3,opt,name=timezone,proto3" json:"timezone,omitempty"`
}

func (x *OpeningTimesUpdated) Reset() {
	*x = OpeningTimesUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_service_times_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpeningTimesUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpeningTimesUpdated) ProtoMessage() {}

func (x *OpeningTimesUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_service_times_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpeningTimesUpdated.ProtoReflect.Descriptor instead.
func (*OpeningTimesUpdated) Descriptor() ([]byte, []int) {
	return file_flyt_service_times_proto_rawDescGZIP(), []int{0}
}

func (x *OpeningTimesUpdated) GetRestaurant() *Ident {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

func (x *OpeningTimesUpdated) GetServiceTimes() []*ServiceTimes {
	if x != nil {
		return x.ServiceTimes
	}
	return nil
}

func (x *OpeningTimesUpdated) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

type ServiceTimes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service ServiceTimes_OpeningType  `protobuf:"varint,1,opt,name=service,proto3,enum=flyt.ServiceTimes_OpeningType" json:"service,omitempty"`
	Times   *ServiceTimes_TimesWeekly `protobuf:"bytes,2,opt,name=times,proto3" json:"times,omitempty"`
}

func (x *ServiceTimes) Reset() {
	*x = ServiceTimes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_service_times_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceTimes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceTimes) ProtoMessage() {}

func (x *ServiceTimes) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_service_times_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceTimes.ProtoReflect.Descriptor instead.
func (*ServiceTimes) Descriptor() ([]byte, []int) {
	return file_flyt_service_times_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceTimes) GetService() ServiceTimes_OpeningType {
	if x != nil {
		return x.Service
	}
	return ServiceTimes_DELIVERY
}

func (x *ServiceTimes) GetTimes() *ServiceTimes_TimesWeekly {
	if x != nil {
		return x.Times
	}
	return nil
}

type ServiceTimes_TimesWeekly struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Monday    []*ServiceTimes_TimesWeekly_TimesDaily `protobuf:"bytes,1,rep,name=monday,proto3" json:"monday,omitempty"`
	Tuesday   []*ServiceTimes_TimesWeekly_TimesDaily `protobuf:"bytes,2,rep,name=tuesday,proto3" json:"tuesday,omitempty"`
	Wednesday []*ServiceTimes_TimesWeekly_TimesDaily `protobuf:"bytes,3,rep,name=wednesday,proto3" json:"wednesday,omitempty"`
	Thursday  []*ServiceTimes_TimesWeekly_TimesDaily `protobuf:"bytes,4,rep,name=thursday,proto3" json:"thursday,omitempty"`
	Friday    []*ServiceTimes_TimesWeekly_TimesDaily `protobuf:"bytes,5,rep,name=friday,proto3" json:"friday,omitempty"`
	Saturday  []*ServiceTimes_TimesWeekly_TimesDaily `protobuf:"bytes,6,rep,name=saturday,proto3" json:"saturday,omitempty"`
	Sunday    []*ServiceTimes_TimesWeekly_TimesDaily `protobuf:"bytes,7,rep,name=sunday,proto3" json:"sunday,omitempty"`
}

func (x *ServiceTimes_TimesWeekly) Reset() {
	*x = ServiceTimes_TimesWeekly{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_service_times_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceTimes_TimesWeekly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceTimes_TimesWeekly) ProtoMessage() {}

func (x *ServiceTimes_TimesWeekly) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_service_times_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceTimes_TimesWeekly.ProtoReflect.Descriptor instead.
func (*ServiceTimes_TimesWeekly) Descriptor() ([]byte, []int) {
	return file_flyt_service_times_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ServiceTimes_TimesWeekly) GetMonday() []*ServiceTimes_TimesWeekly_TimesDaily {
	if x != nil {
		return x.Monday
	}
	return nil
}

func (x *ServiceTimes_TimesWeekly) GetTuesday() []*ServiceTimes_TimesWeekly_TimesDaily {
	if x != nil {
		return x.Tuesday
	}
	return nil
}

func (x *ServiceTimes_TimesWeekly) GetWednesday() []*ServiceTimes_TimesWeekly_TimesDaily {
	if x != nil {
		return x.Wednesday
	}
	return nil
}

func (x *ServiceTimes_TimesWeekly) GetThursday() []*ServiceTimes_TimesWeekly_TimesDaily {
	if x != nil {
		return x.Thursday
	}
	return nil
}

func (x *ServiceTimes_TimesWeekly) GetFriday() []*ServiceTimes_TimesWeekly_TimesDaily {
	if x != nil {
		return x.Friday
	}
	return nil
}

func (x *ServiceTimes_TimesWeekly) GetSaturday() []*ServiceTimes_TimesWeekly_TimesDaily {
	if x != nil {
		return x.Saturday
	}
	return nil
}

func (x *ServiceTimes_TimesWeekly) GetSunday() []*ServiceTimes_TimesWeekly_TimesDaily {
	if x != nil {
		return x.Sunday
	}
	return nil
}

type ServiceTimes_TimesWeekly_TimesDaily struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpeningTime string `protobuf:"bytes,1,opt,name=opening_time,json=openingTime,proto3" json:"opening_time,omitempty"`
	ClosingTime string `protobuf:"bytes,2,opt,name=closing_time,json=closingTime,proto3" json:"closing_time,omitempty"`
}

func (x *ServiceTimes_TimesWeekly_TimesDaily) Reset() {
	*x = ServiceTimes_TimesWeekly_TimesDaily{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_service_times_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceTimes_TimesWeekly_TimesDaily) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceTimes_TimesWeekly_TimesDaily) ProtoMessage() {}

func (x *ServiceTimes_TimesWeekly_TimesDaily) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_service_times_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceTimes_TimesWeekly_TimesDaily.ProtoReflect.Descriptor instead.
func (*ServiceTimes_TimesWeekly_TimesDaily) Descriptor() ([]byte, []int) {
	return file_flyt_service_times_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *ServiceTimes_TimesWeekly_TimesDaily) GetOpeningTime() string {
	if x != nil {
		return x.OpeningTime
	}
	return ""
}

func (x *ServiceTimes_TimesWeekly_TimesDaily) GetClosingTime() string {
	if x != nil {
		return x.ClosingTime
	}
	return ""
}

var File_flyt_service_times_proto protoreflect.FileDescriptor

var file_flyt_service_times_proto_rawDesc = []byte{
	0x0a, 0x18, 0x66, 0x6c, 0x79, 0x74, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x66, 0x6c, 0x79, 0x74,
	0x1a, 0x15, 0x66, 0x6c, 0x79, 0x74, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x66, 0x6c, 0x79, 0x74, 0x2f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb2, 0x01, 0x0a, 0x13, 0x4f, 0x70,
	0x65, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x2b, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x37,
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a,
	0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a,
	0x6f, 0x6e, 0x65, 0x3a, 0x19, 0x82, 0xb5, 0x18, 0x15, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xf4,
	0x05, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12,
	0x38, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x1a,
	0xc6, 0x04, 0x0a, 0x0b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x12,
	0x41, 0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x64,
	0x61, 0x79, 0x12, 0x43, 0x0a, 0x07, 0x74, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x57, 0x65, 0x65,
	0x6b, 0x6c, 0x79, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x07,
	0x74, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x12, 0x47, 0x0a, 0x09, 0x77, 0x65, 0x64, 0x6e, 0x65,
	0x73, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x66, 0x6c, 0x79,
	0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x09, 0x77, 0x65, 0x64, 0x6e, 0x65, 0x73, 0x64, 0x61, 0x79,
	0x12, 0x45, 0x0a, 0x08, 0x74, 0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x57, 0x65, 0x65, 0x6b,
	0x6c, 0x79, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x08, 0x74,
	0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79, 0x12, 0x41, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x64, 0x61,
	0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x52, 0x06, 0x66, 0x72, 0x69, 0x64, 0x61, 0x79, 0x12, 0x45, 0x0a, 0x08, 0x73, 0x61,
	0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x66,
	0x6c, 0x79, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x08, 0x73, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61,
	0x79, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x57, 0x65, 0x65, 0x6b, 0x6c,
	0x79, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x06, 0x73, 0x75,
	0x6e, 0x64, 0x61, 0x79, 0x1a, 0x52, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x6f,
	0x73, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x6e,
	0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x45, 0x4c, 0x49, 0x56,
	0x45, 0x52, 0x59, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x01, 0x42, 0x70, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x79,
	0x74, 0x42, 0x11, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0xa2, 0x02, 0x03, 0x46, 0x58, 0x58, 0xaa,
	0x02, 0x04, 0x46, 0x6c, 0x79, 0x74, 0xca, 0x02, 0x04, 0x46, 0x6c, 0x79, 0x74, 0xe2, 0x02, 0x10,
	0x46, 0x6c, 0x79, 0x74, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x04, 0x46, 0x6c, 0x79, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flyt_service_times_proto_rawDescOnce sync.Once
	file_flyt_service_times_proto_rawDescData = file_flyt_service_times_proto_rawDesc
)

func file_flyt_service_times_proto_rawDescGZIP() []byte {
	file_flyt_service_times_proto_rawDescOnce.Do(func() {
		file_flyt_service_times_proto_rawDescData = protoimpl.X.CompressGZIP(file_flyt_service_times_proto_rawDescData)
	})
	return file_flyt_service_times_proto_rawDescData
}

var file_flyt_service_times_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_flyt_service_times_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_flyt_service_times_proto_goTypes = []interface{}{
	(ServiceTimes_OpeningType)(0),               // 0: flyt.ServiceTimes.OpeningType
	(*OpeningTimesUpdated)(nil),                 // 1: flyt.OpeningTimesUpdated
	(*ServiceTimes)(nil),                        // 2: flyt.ServiceTimes
	(*ServiceTimes_TimesWeekly)(nil),            // 3: flyt.ServiceTimes.TimesWeekly
	(*ServiceTimes_TimesWeekly_TimesDaily)(nil), // 4: flyt.ServiceTimes.TimesWeekly.TimesDaily
	(*Ident)(nil),                               // 5: flyt.Ident
}
var file_flyt_service_times_proto_depIdxs = []int32{
	5,  // 0: flyt.OpeningTimesUpdated.restaurant:type_name -> flyt.Ident
	2,  // 1: flyt.OpeningTimesUpdated.service_times:type_name -> flyt.ServiceTimes
	0,  // 2: flyt.ServiceTimes.service:type_name -> flyt.ServiceTimes.OpeningType
	3,  // 3: flyt.ServiceTimes.times:type_name -> flyt.ServiceTimes.TimesWeekly
	4,  // 4: flyt.ServiceTimes.TimesWeekly.monday:type_name -> flyt.ServiceTimes.TimesWeekly.TimesDaily
	4,  // 5: flyt.ServiceTimes.TimesWeekly.tuesday:type_name -> flyt.ServiceTimes.TimesWeekly.TimesDaily
	4,  // 6: flyt.ServiceTimes.TimesWeekly.wednesday:type_name -> flyt.ServiceTimes.TimesWeekly.TimesDaily
	4,  // 7: flyt.ServiceTimes.TimesWeekly.thursday:type_name -> flyt.ServiceTimes.TimesWeekly.TimesDaily
	4,  // 8: flyt.ServiceTimes.TimesWeekly.friday:type_name -> flyt.ServiceTimes.TimesWeekly.TimesDaily
	4,  // 9: flyt.ServiceTimes.TimesWeekly.saturday:type_name -> flyt.ServiceTimes.TimesWeekly.TimesDaily
	4,  // 10: flyt.ServiceTimes.TimesWeekly.sunday:type_name -> flyt.ServiceTimes.TimesWeekly.TimesDaily
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_flyt_service_times_proto_init() }
func file_flyt_service_times_proto_init() {
	if File_flyt_service_times_proto != nil {
		return
	}
	file_flyt_descriptor_proto_init()
	file_flyt_ident_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_flyt_service_times_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpeningTimesUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_service_times_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceTimes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_service_times_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceTimes_TimesWeekly); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_service_times_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceTimes_TimesWeekly_TimesDaily); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flyt_service_times_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_flyt_service_times_proto_goTypes,
		DependencyIndexes: file_flyt_service_times_proto_depIdxs,
		EnumInfos:         file_flyt_service_times_proto_enumTypes,
		MessageInfos:      file_flyt_service_times_proto_msgTypes,
	}.Build()
	File_flyt_service_times_proto = out.File
	file_flyt_service_times_proto_rawDesc = nil
	file_flyt_service_times_proto_goTypes = nil
	file_flyt_service_times_proto_depIdxs = nil
}
