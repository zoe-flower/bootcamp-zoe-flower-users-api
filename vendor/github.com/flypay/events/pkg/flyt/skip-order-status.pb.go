// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: flyt/skip-order-status.proto

package flyt

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Find the exact error codes and messages here
// https://developers.flyt.io/ordering/sending-to-pos/#error-codes
type SkipIntegrationError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SkipIntegrationError) Reset() {
	*x = SkipIntegrationError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_skip_order_status_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkipIntegrationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkipIntegrationError) ProtoMessage() {}

func (x *SkipIntegrationError) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_skip_order_status_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkipIntegrationError.ProtoReflect.Descriptor instead.
func (*SkipIntegrationError) Descriptor() ([]byte, []int) {
	return file_flyt_skip_order_status_proto_rawDescGZIP(), []int{0}
}

func (x *SkipIntegrationError) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SkipIntegrationError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SkipResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId string                `protobuf:"bytes,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	OrderId    string                `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	ChannelId  string                `protobuf:"bytes,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Error      *SkipIntegrationError `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SkipResponseData) Reset() {
	*x = SkipResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_skip_order_status_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkipResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkipResponseData) ProtoMessage() {}

func (x *SkipResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_skip_order_status_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkipResponseData.ProtoReflect.Descriptor instead.
func (*SkipResponseData) Descriptor() ([]byte, []int) {
	return file_flyt_skip_order_status_proto_rawDescGZIP(), []int{1}
}

func (x *SkipResponseData) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *SkipResponseData) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *SkipResponseData) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *SkipResponseData) GetError() *SkipIntegrationError {
	if x != nil {
		return x.Error
	}
	return nil
}

type SkipOrderSucceeded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp string            `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Data      *SkipResponseData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SkipOrderSucceeded) Reset() {
	*x = SkipOrderSucceeded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_skip_order_status_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkipOrderSucceeded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkipOrderSucceeded) ProtoMessage() {}

func (x *SkipOrderSucceeded) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_skip_order_status_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkipOrderSucceeded.ProtoReflect.Descriptor instead.
func (*SkipOrderSucceeded) Descriptor() ([]byte, []int) {
	return file_flyt_skip_order_status_proto_rawDescGZIP(), []int{2}
}

func (x *SkipOrderSucceeded) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *SkipOrderSucceeded) GetData() *SkipResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type SkipOrderFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp string            `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Data      *SkipResponseData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SkipOrderFailed) Reset() {
	*x = SkipOrderFailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_skip_order_status_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkipOrderFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkipOrderFailed) ProtoMessage() {}

func (x *SkipOrderFailed) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_skip_order_status_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkipOrderFailed.ProtoReflect.Descriptor instead.
func (*SkipOrderFailed) Descriptor() ([]byte, []int) {
	return file_flyt_skip_order_status_proto_rawDescGZIP(), []int{3}
}

func (x *SkipOrderFailed) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *SkipOrderFailed) GetData() *SkipResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

var file_flyt_skip_order_status_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50001,
		Name:          "flyt.type",
		Tag:           "bytes,50001,opt,name=type",
		Filename:      "flyt/skip-order-status.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional string type = 50001;
	E_Type = &file_flyt_skip_order_status_proto_extTypes[0]
)

var File_flyt_skip_order_status_proto protoreflect.FileDescriptor

var file_flyt_skip_order_status_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x66, 0x6c, 0x79, 0x74, 0x2f, 0x73, 0x6b, 0x69, 0x70, 0x2d, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04,
	0x66, 0x6c, 0x79, 0x74, 0x1a, 0x15, 0x66, 0x6c, 0x79, 0x74, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x44, 0x0a,
	0x14, 0x53, 0x6b, 0x69, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x10, 0x53, 0x6b, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x53, 0x6b, 0x69, 0x70, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x87, 0x01, 0x0a, 0x12, 0x53, 0x6b, 0x69, 0x70, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e,
	0x53, 0x6b, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x27, 0x82, 0xb5, 0x18, 0x14, 0x73, 0x6b, 0x69, 0x70,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64,
	0x8a, 0xb5, 0x18, 0x0b, 0x53, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x4f, 0x5f, 0x50, 0x4f, 0x53, 0x22,
	0x8b, 0x01, 0x0a, 0x0f, 0x53, 0x6b, 0x69, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x53, 0x6b, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x2e, 0x82,
	0xb5, 0x18, 0x11, 0x73, 0x6b, 0x69, 0x70, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x66, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x8a, 0xb5, 0x18, 0x15, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54,
	0x4f, 0x5f, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x50, 0x4f, 0x53, 0x3a, 0x35, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd1, 0x86, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x42, 0x73, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x79, 0x74,
	0x42, 0x14, 0x53, 0x6b, 0x69, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0xa2, 0x02, 0x03, 0x46, 0x58,
	0x58, 0xaa, 0x02, 0x04, 0x46, 0x6c, 0x79, 0x74, 0xca, 0x02, 0x04, 0x46, 0x6c, 0x79, 0x74, 0xe2,
	0x02, 0x10, 0x46, 0x6c, 0x79, 0x74, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x04, 0x46, 0x6c, 0x79, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_flyt_skip_order_status_proto_rawDescOnce sync.Once
	file_flyt_skip_order_status_proto_rawDescData = file_flyt_skip_order_status_proto_rawDesc
)

func file_flyt_skip_order_status_proto_rawDescGZIP() []byte {
	file_flyt_skip_order_status_proto_rawDescOnce.Do(func() {
		file_flyt_skip_order_status_proto_rawDescData = protoimpl.X.CompressGZIP(file_flyt_skip_order_status_proto_rawDescData)
	})
	return file_flyt_skip_order_status_proto_rawDescData
}

var file_flyt_skip_order_status_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_flyt_skip_order_status_proto_goTypes = []interface{}{
	(*SkipIntegrationError)(nil),        // 0: flyt.SkipIntegrationError
	(*SkipResponseData)(nil),            // 1: flyt.SkipResponseData
	(*SkipOrderSucceeded)(nil),          // 2: flyt.SkipOrderSucceeded
	(*SkipOrderFailed)(nil),             // 3: flyt.SkipOrderFailed
	(*descriptorpb.MessageOptions)(nil), // 4: google.protobuf.MessageOptions
}
var file_flyt_skip_order_status_proto_depIdxs = []int32{
	0, // 0: flyt.SkipResponseData.error:type_name -> flyt.SkipIntegrationError
	1, // 1: flyt.SkipOrderSucceeded.data:type_name -> flyt.SkipResponseData
	1, // 2: flyt.SkipOrderFailed.data:type_name -> flyt.SkipResponseData
	4, // 3: flyt.type:extendee -> google.protobuf.MessageOptions
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	3, // [3:4] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_flyt_skip_order_status_proto_init() }
func file_flyt_skip_order_status_proto_init() {
	if File_flyt_skip_order_status_proto != nil {
		return
	}
	file_flyt_descriptor_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_flyt_skip_order_status_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkipIntegrationError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_skip_order_status_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkipResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_skip_order_status_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkipOrderSucceeded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_skip_order_status_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkipOrderFailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flyt_skip_order_status_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_flyt_skip_order_status_proto_goTypes,
		DependencyIndexes: file_flyt_skip_order_status_proto_depIdxs,
		MessageInfos:      file_flyt_skip_order_status_proto_msgTypes,
		ExtensionInfos:    file_flyt_skip_order_status_proto_extTypes,
	}.Build()
	File_flyt_skip_order_status_proto = out.File
	file_flyt_skip_order_status_proto_rawDesc = nil
	file_flyt_skip_order_status_proto_goTypes = nil
	file_flyt_skip_order_status_proto_depIdxs = nil
}
