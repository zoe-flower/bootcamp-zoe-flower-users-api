// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: flyt/booking.proto

package flyt

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BookingReservationFailureCodes int32

const (
	// Default error code. To be used when error is not explicitly listed below.
	// Please add next enum values when they will be valuable.
	// Currently, we apply this when we can't reach the TMS, there's an HTTP error, etc.
	BookingReservationFailureCodes_UNCLASSIFIED BookingReservationFailureCodes = 0
	// No tables bookable for given criteria
	BookingReservationFailureCodes_NO_TABLE BookingReservationFailureCodes = 1
)

// Enum value maps for BookingReservationFailureCodes.
var (
	BookingReservationFailureCodes_name = map[int32]string{
		0: "UNCLASSIFIED",
		1: "NO_TABLE",
	}
	BookingReservationFailureCodes_value = map[string]int32{
		"UNCLASSIFIED": 0,
		"NO_TABLE":     1,
	}
)

func (x BookingReservationFailureCodes) Enum() *BookingReservationFailureCodes {
	p := new(BookingReservationFailureCodes)
	*p = x
	return p
}

func (x BookingReservationFailureCodes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BookingReservationFailureCodes) Descriptor() protoreflect.EnumDescriptor {
	return file_flyt_booking_proto_enumTypes[0].Descriptor()
}

func (BookingReservationFailureCodes) Type() protoreflect.EnumType {
	return &file_flyt_booking_proto_enumTypes[0]
}

func (x BookingReservationFailureCodes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BookingReservationFailureCodes.Descriptor instead.
func (BookingReservationFailureCodes) EnumDescriptor() ([]byte, []int) {
	return file_flyt_booking_proto_rawDescGZIP(), []int{0}
}

type BookingRestaurantConnected struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Restaurant *Ident             `protobuf:"bytes,1,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
	Connection *BookingConnection `protobuf:"bytes,2,opt,name=connection,proto3" json:"connection,omitempty"`
}

func (x *BookingRestaurantConnected) Reset() {
	*x = BookingRestaurantConnected{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_booking_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingRestaurantConnected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingRestaurantConnected) ProtoMessage() {}

func (x *BookingRestaurantConnected) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_booking_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingRestaurantConnected.ProtoReflect.Descriptor instead.
func (*BookingRestaurantConnected) Descriptor() ([]byte, []int) {
	return file_flyt_booking_proto_rawDescGZIP(), []int{0}
}

func (x *BookingRestaurantConnected) GetRestaurant() *Ident {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

func (x *BookingRestaurantConnected) GetConnection() *BookingConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

type BookingRestaurantDisconnected struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Restaurant    *Ident                `protobuf:"bytes,1,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
	Disconnection *BookingDisconnection `protobuf:"bytes,2,opt,name=disconnection,proto3" json:"disconnection,omitempty"`
}

func (x *BookingRestaurantDisconnected) Reset() {
	*x = BookingRestaurantDisconnected{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_booking_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingRestaurantDisconnected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingRestaurantDisconnected) ProtoMessage() {}

func (x *BookingRestaurantDisconnected) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_booking_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingRestaurantDisconnected.ProtoReflect.Descriptor instead.
func (*BookingRestaurantDisconnected) Descriptor() ([]byte, []int) {
	return file_flyt_booking_proto_rawDescGZIP(), []int{1}
}

func (x *BookingRestaurantDisconnected) GetRestaurant() *Ident {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

func (x *BookingRestaurantDisconnected) GetDisconnection() *BookingDisconnection {
	if x != nil {
		return x.Disconnection
	}
	return nil
}

// Message to communicate that restaurant data needs syncing with restaurant data providers
type BookingRestaurantOutdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Lists restaurant data providers, like OrderHub
	DataProviders []string `protobuf:"bytes,1,rep,name=data_providers,json=dataProviders,proto3" json:"data_providers,omitempty"`
}

func (x *BookingRestaurantOutdated) Reset() {
	*x = BookingRestaurantOutdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_booking_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingRestaurantOutdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingRestaurantOutdated) ProtoMessage() {}

func (x *BookingRestaurantOutdated) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_booking_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingRestaurantOutdated.ProtoReflect.Descriptor instead.
func (*BookingRestaurantOutdated) Descriptor() ([]byte, []int) {
	return file_flyt_booking_proto_rawDescGZIP(), []int{2}
}

func (x *BookingRestaurantOutdated) GetDataProviders() []string {
	if x != nil {
		return x.DataProviders
	}
	return nil
}

// Message to communicate that restaurant availability needs syncing with availability data providers.
// When no restaurant is specified, this is a generic message to communicate that all restaurants'
// availability needs syncing.
type BookingAvailabilityOutdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Lists availability data providers, like CBORMS
	DataProviders []string `protobuf:"bytes,1,rep,name=data_providers,json=dataProviders,proto3" json:"data_providers,omitempty"`
	// Specifies date for which availability needs to be synced
	Date string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	// Identifier of the restaurant
	Restaurant *Ident `protobuf:"bytes,3,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
}

func (x *BookingAvailabilityOutdated) Reset() {
	*x = BookingAvailabilityOutdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_booking_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingAvailabilityOutdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingAvailabilityOutdated) ProtoMessage() {}

func (x *BookingAvailabilityOutdated) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_booking_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingAvailabilityOutdated.ProtoReflect.Descriptor instead.
func (*BookingAvailabilityOutdated) Descriptor() ([]byte, []int) {
	return file_flyt_booking_proto_rawDescGZIP(), []int{3}
}

func (x *BookingAvailabilityOutdated) GetDataProviders() []string {
	if x != nil {
		return x.DataProviders
	}
	return nil
}

func (x *BookingAvailabilityOutdated) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *BookingAvailabilityOutdated) GetRestaurant() *Ident {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

// Message to communicate that availability of specific restaurant on specific date has changed
type BookingAvailabilityChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier of the restaurant
	Restaurant *Ident `protobuf:"bytes,1,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
	// Specifies date for which availability changed
	Date string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	// Path to access shared resource - the saved availability
	// see https://github.com/flypay/dev-tool/tree/master/docs/resources#accessing-other-services-files
	AvailabilityPath string `protobuf:"bytes,3,opt,name=availability_path,json=availabilityPath,proto3" json:"availability_path,omitempty"`
}

func (x *BookingAvailabilityChanged) Reset() {
	*x = BookingAvailabilityChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_booking_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingAvailabilityChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingAvailabilityChanged) ProtoMessage() {}

func (x *BookingAvailabilityChanged) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_booking_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingAvailabilityChanged.ProtoReflect.Descriptor instead.
func (*BookingAvailabilityChanged) Descriptor() ([]byte, []int) {
	return file_flyt_booking_proto_rawDescGZIP(), []int{4}
}

func (x *BookingAvailabilityChanged) GetRestaurant() *Ident {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

func (x *BookingAvailabilityChanged) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *BookingAvailabilityChanged) GetAvailabilityPath() string {
	if x != nil {
		return x.AvailabilityPath
	}
	return ""
}

// Message to communicate that reservations need syncing with reservations data providers
type BookingReservationsOutdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Lists reservations data providers, like OpenTable
	DataProviders []string `protobuf:"bytes,1,rep,name=data_providers,json=dataProviders,proto3" json:"data_providers,omitempty"`
	// Specifies the restaurant
	Restaurant *Ident `protobuf:"bytes,2,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
}

func (x *BookingReservationsOutdated) Reset() {
	*x = BookingReservationsOutdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_booking_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingReservationsOutdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingReservationsOutdated) ProtoMessage() {}

func (x *BookingReservationsOutdated) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_booking_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingReservationsOutdated.ProtoReflect.Descriptor instead.
func (*BookingReservationsOutdated) Descriptor() ([]byte, []int) {
	return file_flyt_booking_proto_rawDescGZIP(), []int{5}
}

func (x *BookingReservationsOutdated) GetDataProviders() []string {
	if x != nil {
		return x.DataProviders
	}
	return nil
}

func (x *BookingReservationsOutdated) GetRestaurant() *Ident {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

// Message to communicate that a new reservation has been requested
type BookingReservationRequested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *Ident        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DateTime     string        `protobuf:"bytes,2,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	PartySize    int32         `protobuf:"varint,3,opt,name=party_size,json=partySize,proto3" json:"party_size,omitempty"`
	Notes        string        `protobuf:"bytes,4,opt,name=notes,proto3" json:"notes,omitempty"`
	Guest        *BookingGuest `protobuf:"bytes,5,opt,name=guest,proto3" json:"guest,omitempty"`
	RestaurantId *Ident        `protobuf:"bytes,6,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
}

func (x *BookingReservationRequested) Reset() {
	*x = BookingReservationRequested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_booking_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingReservationRequested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingReservationRequested) ProtoMessage() {}

func (x *BookingReservationRequested) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_booking_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingReservationRequested.ProtoReflect.Descriptor instead.
func (*BookingReservationRequested) Descriptor() ([]byte, []int) {
	return file_flyt_booking_proto_rawDescGZIP(), []int{6}
}

func (x *BookingReservationRequested) GetId() *Ident {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BookingReservationRequested) GetDateTime() string {
	if x != nil {
		return x.DateTime
	}
	return ""
}

func (x *BookingReservationRequested) GetPartySize() int32 {
	if x != nil {
		return x.PartySize
	}
	return 0
}

func (x *BookingReservationRequested) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *BookingReservationRequested) GetGuest() *BookingGuest {
	if x != nil {
		return x.Guest
	}
	return nil
}

func (x *BookingReservationRequested) GetRestaurantId() *Ident {
	if x != nil {
		return x.RestaurantId
	}
	return nil
}

// Message to communicate that a reservation was successfuly injected into the restaurant's table management system
type BookingReservationSucceeded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *Ident `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Reservation confirmation id - for correlation with the underlying table management system, like iZonal.
	ConfirmationId string `protobuf:"bytes,2,opt,name=confirmation_id,json=confirmationId,proto3" json:"confirmation_id,omitempty"`
}

func (x *BookingReservationSucceeded) Reset() {
	*x = BookingReservationSucceeded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_booking_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingReservationSucceeded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingReservationSucceeded) ProtoMessage() {}

func (x *BookingReservationSucceeded) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_booking_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingReservationSucceeded.ProtoReflect.Descriptor instead.
func (*BookingReservationSucceeded) Descriptor() ([]byte, []int) {
	return file_flyt_booking_proto_rawDescGZIP(), []int{7}
}

func (x *BookingReservationSucceeded) GetId() *Ident {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BookingReservationSucceeded) GetConfirmationId() string {
	if x != nil {
		return x.ConfirmationId
	}
	return ""
}

// Reservation failed to be injected into restaurant table management system
type BookingReservationFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *Ident        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DateTime     string        `protobuf:"bytes,2,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	PartySize    int32         `protobuf:"varint,3,opt,name=party_size,json=partySize,proto3" json:"party_size,omitempty"`
	Notes        string        `protobuf:"bytes,4,opt,name=notes,proto3" json:"notes,omitempty"`
	Guest        *BookingGuest `protobuf:"bytes,5,opt,name=guest,proto3" json:"guest,omitempty"`
	RestaurantId *Ident        `protobuf:"bytes,6,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	// This field communicates the failure reason, e.g., booking not possible or TMS is down
	FailureCode  BookingReservationFailureCodes `protobuf:"varint,7,opt,name=failure_code,json=failureCode,proto3,enum=flyt.BookingReservationFailureCodes" json:"failure_code,omitempty"`
	FailureEmail string                         `protobuf:"bytes,8,opt,name=failure_email,json=failureEmail,proto3" json:"failure_email,omitempty"`
}

func (x *BookingReservationFailed) Reset() {
	*x = BookingReservationFailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_booking_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingReservationFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingReservationFailed) ProtoMessage() {}

func (x *BookingReservationFailed) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_booking_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingReservationFailed.ProtoReflect.Descriptor instead.
func (*BookingReservationFailed) Descriptor() ([]byte, []int) {
	return file_flyt_booking_proto_rawDescGZIP(), []int{8}
}

func (x *BookingReservationFailed) GetId() *Ident {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BookingReservationFailed) GetDateTime() string {
	if x != nil {
		return x.DateTime
	}
	return ""
}

func (x *BookingReservationFailed) GetPartySize() int32 {
	if x != nil {
		return x.PartySize
	}
	return 0
}

func (x *BookingReservationFailed) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *BookingReservationFailed) GetGuest() *BookingGuest {
	if x != nil {
		return x.Guest
	}
	return nil
}

func (x *BookingReservationFailed) GetRestaurantId() *Ident {
	if x != nil {
		return x.RestaurantId
	}
	return nil
}

func (x *BookingReservationFailed) GetFailureCode() BookingReservationFailureCodes {
	if x != nil {
		return x.FailureCode
	}
	return BookingReservationFailureCodes_UNCLASSIFIED
}

func (x *BookingReservationFailed) GetFailureEmail() string {
	if x != nil {
		return x.FailureEmail
	}
	return ""
}

type BookingGuest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName  string `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName   string `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Email      string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	EmailOptIn bool   `protobuf:"varint,4,opt,name=email_opt_in,json=emailOptIn,proto3" json:"email_opt_in,omitempty"`
	Phone      string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *BookingGuest) Reset() {
	*x = BookingGuest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_booking_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingGuest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingGuest) ProtoMessage() {}

func (x *BookingGuest) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_booking_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingGuest.ProtoReflect.Descriptor instead.
func (*BookingGuest) Descriptor() ([]byte, []int) {
	return file_flyt_booking_proto_rawDescGZIP(), []int{9}
}

func (x *BookingGuest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *BookingGuest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *BookingGuest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *BookingGuest) GetEmailOptIn() bool {
	if x != nil {
		return x.EmailOptIn
	}
	return false
}

func (x *BookingGuest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type BookingConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Booking providers or aggregators (like Quandoo and OpenTable) connected to the restaurant
	Providers       []*BookingProvider      `protobuf:"bytes,1,rep,name=providers,proto3" json:"providers,omitempty"`
	TableManagement *BookingTableManagement `protobuf:"bytes,2,opt,name=table_management,json=tableManagement,proto3" json:"table_management,omitempty"`
}

func (x *BookingConnection) Reset() {
	*x = BookingConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_booking_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingConnection) ProtoMessage() {}

func (x *BookingConnection) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_booking_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingConnection.ProtoReflect.Descriptor instead.
func (*BookingConnection) Descriptor() ([]byte, []int) {
	return file_flyt_booking_proto_rawDescGZIP(), []int{10}
}

func (x *BookingConnection) GetProviders() []*BookingProvider {
	if x != nil {
		return x.Providers
	}
	return nil
}

func (x *BookingConnection) GetTableManagement() *BookingTableManagement {
	if x != nil {
		return x.TableManagement
	}
	return nil
}

type BookingDisconnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Booking providers or aggregators (like Quandoo and OpenTable) disconnected from the restaurant
	Providers []string `protobuf:"bytes,1,rep,name=providers,proto3" json:"providers,omitempty"`
}

func (x *BookingDisconnection) Reset() {
	*x = BookingDisconnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_booking_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingDisconnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingDisconnection) ProtoMessage() {}

func (x *BookingDisconnection) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_booking_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingDisconnection.ProtoReflect.Descriptor instead.
func (*BookingDisconnection) Descriptor() ([]byte, []int) {
	return file_flyt_booking_proto_rawDescGZIP(), []int{11}
}

func (x *BookingDisconnection) GetProviders() []string {
	if x != nil {
		return x.Providers
	}
	return nil
}

// The back-end API of the restaurant's Table Management System
type BookingTableManagement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Parameters map[string]string `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BookingTableManagement) Reset() {
	*x = BookingTableManagement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_booking_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingTableManagement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingTableManagement) ProtoMessage() {}

func (x *BookingTableManagement) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_booking_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingTableManagement.ProtoReflect.Descriptor instead.
func (*BookingTableManagement) Descriptor() ([]byte, []int) {
	return file_flyt_booking_proto_rawDescGZIP(), []int{12}
}

func (x *BookingTableManagement) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BookingTableManagement) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// Entity representing a booking provider
type BookingProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Parameters map[string]string `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BookingProvider) Reset() {
	*x = BookingProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyt_booking_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingProvider) ProtoMessage() {}

func (x *BookingProvider) ProtoReflect() protoreflect.Message {
	mi := &file_flyt_booking_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingProvider.ProtoReflect.Descriptor instead.
func (*BookingProvider) Descriptor() ([]byte, []int) {
	return file_flyt_booking_proto_rawDescGZIP(), []int{13}
}

func (x *BookingProvider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BookingProvider) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

var File_flyt_booking_proto protoreflect.FileDescriptor

var file_flyt_booking_proto_rawDesc = []byte{
	0x0a, 0x12, 0x66, 0x6c, 0x79, 0x74, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x66, 0x6c, 0x79, 0x74, 0x1a, 0x15, 0x66, 0x6c, 0x79, 0x74,
	0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x10, 0x66, 0x6c, 0x79, 0x74, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xa4, 0x01, 0x0a, 0x1a, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x12, 0x2b, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x12,
	0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x82, 0xb5, 0x18, 0x1c, 0x62, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x1d, 0x42,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x0a,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x23, 0x82, 0xb5, 0x18,
	0x1f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x22, 0x63, 0x0a, 0x19, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x3a, 0x1f, 0x82, 0xb5, 0x18, 0x1b, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x6f, 0x75, 0x74,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xa8, 0x01, 0x0a, 0x1b, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4f, 0x75, 0x74,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x64,
	0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x2b, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x3a, 0x21, 0x82,
	0xb5, 0x18, 0x1d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x6f, 0x75, 0x74, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x22, 0xac, 0x01, 0x0a, 0x1a, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12,
	0x2b, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x61, 0x74, 0x68, 0x3a, 0x20, 0x82,
	0xb5, 0x18, 0x1c, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x22,
	0x94, 0x01, 0x0a, 0x1b, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2b, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x6c, 0x79,
	0x74, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x3a, 0x21, 0x82, 0xb5, 0x18, 0x1d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6f, 0x75,
	0x74, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x8b, 0x02, 0x0a, 0x1b, 0x42, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x05, 0x67, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x42, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x47, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x67, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x30, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x3a, 0x21, 0x82, 0xb5, 0x18, 0x1d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x1b, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x65, 0x64, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x3a, 0x21, 0x82, 0xb5, 0x18, 0x1d,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x22, 0xf3, 0x02,
	0x0a, 0x18, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x05, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e,
	0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x47, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x6c, 0x79,
	0x74, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x66, 0x6c,
	0x79, 0x74, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x52, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x3a, 0x1e, 0x82, 0xb5, 0x18, 0x1a, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x66, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x0c, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x6f, 0x70, 0x74, 0x5f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x91,
	0x01, 0x0a, 0x11, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x42,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x47, 0x0a, 0x10, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x34, 0x0a, 0x14, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x22, 0xb9, 0x01, 0x0a, 0x16, 0x42, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x66, 0x6c,
	0x79, 0x74, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xab, 0x01, 0x0a, 0x0f, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x0a,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x2a, 0x40, 0x0a, 0x1e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x5f, 0x54, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x42, 0x6b, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x79, 0x74,
	0x42, 0x0c, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x79,
	0x70, 0x61, 0x79, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x66,
	0x6c, 0x79, 0x74, 0xa2, 0x02, 0x03, 0x46, 0x58, 0x58, 0xaa, 0x02, 0x04, 0x46, 0x6c, 0x79, 0x74,
	0xca, 0x02, 0x04, 0x46, 0x6c, 0x79, 0x74, 0xe2, 0x02, 0x10, 0x46, 0x6c, 0x79, 0x74, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x04, 0x46, 0x6c, 0x79,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flyt_booking_proto_rawDescOnce sync.Once
	file_flyt_booking_proto_rawDescData = file_flyt_booking_proto_rawDesc
)

func file_flyt_booking_proto_rawDescGZIP() []byte {
	file_flyt_booking_proto_rawDescOnce.Do(func() {
		file_flyt_booking_proto_rawDescData = protoimpl.X.CompressGZIP(file_flyt_booking_proto_rawDescData)
	})
	return file_flyt_booking_proto_rawDescData
}

var file_flyt_booking_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_flyt_booking_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_flyt_booking_proto_goTypes = []interface{}{
	(BookingReservationFailureCodes)(0),   // 0: flyt.BookingReservationFailureCodes
	(*BookingRestaurantConnected)(nil),    // 1: flyt.BookingRestaurantConnected
	(*BookingRestaurantDisconnected)(nil), // 2: flyt.BookingRestaurantDisconnected
	(*BookingRestaurantOutdated)(nil),     // 3: flyt.BookingRestaurantOutdated
	(*BookingAvailabilityOutdated)(nil),   // 4: flyt.BookingAvailabilityOutdated
	(*BookingAvailabilityChanged)(nil),    // 5: flyt.BookingAvailabilityChanged
	(*BookingReservationsOutdated)(nil),   // 6: flyt.BookingReservationsOutdated
	(*BookingReservationRequested)(nil),   // 7: flyt.BookingReservationRequested
	(*BookingReservationSucceeded)(nil),   // 8: flyt.BookingReservationSucceeded
	(*BookingReservationFailed)(nil),      // 9: flyt.BookingReservationFailed
	(*BookingGuest)(nil),                  // 10: flyt.BookingGuest
	(*BookingConnection)(nil),             // 11: flyt.BookingConnection
	(*BookingDisconnection)(nil),          // 12: flyt.BookingDisconnection
	(*BookingTableManagement)(nil),        // 13: flyt.BookingTableManagement
	(*BookingProvider)(nil),               // 14: flyt.BookingProvider
	nil,                                   // 15: flyt.BookingTableManagement.ParametersEntry
	nil,                                   // 16: flyt.BookingProvider.ParametersEntry
	(*Ident)(nil),                         // 17: flyt.Ident
}
var file_flyt_booking_proto_depIdxs = []int32{
	17, // 0: flyt.BookingRestaurantConnected.restaurant:type_name -> flyt.Ident
	11, // 1: flyt.BookingRestaurantConnected.connection:type_name -> flyt.BookingConnection
	17, // 2: flyt.BookingRestaurantDisconnected.restaurant:type_name -> flyt.Ident
	12, // 3: flyt.BookingRestaurantDisconnected.disconnection:type_name -> flyt.BookingDisconnection
	17, // 4: flyt.BookingAvailabilityOutdated.restaurant:type_name -> flyt.Ident
	17, // 5: flyt.BookingAvailabilityChanged.restaurant:type_name -> flyt.Ident
	17, // 6: flyt.BookingReservationsOutdated.restaurant:type_name -> flyt.Ident
	17, // 7: flyt.BookingReservationRequested.id:type_name -> flyt.Ident
	10, // 8: flyt.BookingReservationRequested.guest:type_name -> flyt.BookingGuest
	17, // 9: flyt.BookingReservationRequested.restaurant_id:type_name -> flyt.Ident
	17, // 10: flyt.BookingReservationSucceeded.id:type_name -> flyt.Ident
	17, // 11: flyt.BookingReservationFailed.id:type_name -> flyt.Ident
	10, // 12: flyt.BookingReservationFailed.guest:type_name -> flyt.BookingGuest
	17, // 13: flyt.BookingReservationFailed.restaurant_id:type_name -> flyt.Ident
	0,  // 14: flyt.BookingReservationFailed.failure_code:type_name -> flyt.BookingReservationFailureCodes
	14, // 15: flyt.BookingConnection.providers:type_name -> flyt.BookingProvider
	13, // 16: flyt.BookingConnection.table_management:type_name -> flyt.BookingTableManagement
	15, // 17: flyt.BookingTableManagement.parameters:type_name -> flyt.BookingTableManagement.ParametersEntry
	16, // 18: flyt.BookingProvider.parameters:type_name -> flyt.BookingProvider.ParametersEntry
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_flyt_booking_proto_init() }
func file_flyt_booking_proto_init() {
	if File_flyt_booking_proto != nil {
		return
	}
	file_flyt_descriptor_proto_init()
	file_flyt_ident_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_flyt_booking_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingRestaurantConnected); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_booking_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingRestaurantDisconnected); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_booking_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingRestaurantOutdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_booking_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingAvailabilityOutdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_booking_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingAvailabilityChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_booking_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingReservationsOutdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_booking_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingReservationRequested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_booking_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingReservationSucceeded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_booking_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingReservationFailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_booking_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingGuest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_booking_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_booking_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingDisconnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_booking_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingTableManagement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyt_booking_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flyt_booking_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_flyt_booking_proto_goTypes,
		DependencyIndexes: file_flyt_booking_proto_depIdxs,
		EnumInfos:         file_flyt_booking_proto_enumTypes,
		MessageInfos:      file_flyt_booking_proto_msgTypes,
	}.Build()
	File_flyt_booking_proto = out.File
	file_flyt_booking_proto_rawDesc = nil
	file_flyt_booking_proto_goTypes = nil
	file_flyt_booking_proto_depIdxs = nil
}
