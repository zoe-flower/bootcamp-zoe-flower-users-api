// DO NOT EDIT. This was copied manually from https://github.com/flypay/protos/blob/master/ordering/ordering.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: monolith/ordering/ordering.proto

package ordering

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PaymentMethod int32

const (
	PaymentMethod_CARD PaymentMethod = 0
	PaymentMethod_CASH PaymentMethod = 1
)

// Enum value maps for PaymentMethod.
var (
	PaymentMethod_name = map[int32]string{
		0: "CARD",
		1: "CASH",
	}
	PaymentMethod_value = map[string]int32{
		"CARD": 0,
		"CASH": 1,
	}
)

func (x PaymentMethod) Enum() *PaymentMethod {
	p := new(PaymentMethod)
	*p = x
	return p
}

func (x PaymentMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_monolith_ordering_ordering_proto_enumTypes[0].Descriptor()
}

func (PaymentMethod) Type() protoreflect.EnumType {
	return &file_monolith_ordering_ordering_proto_enumTypes[0]
}

func (x PaymentMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentMethod.Descriptor instead.
func (PaymentMethod) EnumDescriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{0}
}

type ErrorCode int32

const (
	ErrorCode_UNKNOWN            ErrorCode = 0
	ErrorCode_INACTIVE           ErrorCode = 1
	ErrorCode_INCORRECT_SETUP    ErrorCode = 2
	ErrorCode_IN_USE             ErrorCode = 3
	ErrorCode_NOT_SURE           ErrorCode = 4 // We don't know if the order went through or not
	ErrorCode_NOT_SUPPORTED      ErrorCode = 5
	ErrorCode_MENU_ERROR         ErrorCode = 6
	ErrorCode_MALFORMED_REQUEST  ErrorCode = 7
	ErrorCode_AUTH_FAILED        ErrorCode = 8
	ErrorCode_STORE_CLOSED       ErrorCode = 9
	ErrorCode_TENDER_ERROR       ErrorCode = 10
	ErrorCode_CONNECTIVITY_ISSUE ErrorCode = 11
	ErrorCode_ITEM_UNAVAILABLE   ErrorCode = 12
	ErrorCode_MENU_UNAVAILABLE   ErrorCode = 13
	ErrorCode_ITEM_NOT_VALID     ErrorCode = 14
	ErrorCode_TIMEOUT            ErrorCode = 15
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "INACTIVE",
		2:  "INCORRECT_SETUP",
		3:  "IN_USE",
		4:  "NOT_SURE",
		5:  "NOT_SUPPORTED",
		6:  "MENU_ERROR",
		7:  "MALFORMED_REQUEST",
		8:  "AUTH_FAILED",
		9:  "STORE_CLOSED",
		10: "TENDER_ERROR",
		11: "CONNECTIVITY_ISSUE",
		12: "ITEM_UNAVAILABLE",
		13: "MENU_UNAVAILABLE",
		14: "ITEM_NOT_VALID",
		15: "TIMEOUT",
	}
	ErrorCode_value = map[string]int32{
		"UNKNOWN":            0,
		"INACTIVE":           1,
		"INCORRECT_SETUP":    2,
		"IN_USE":             3,
		"NOT_SURE":           4,
		"NOT_SUPPORTED":      5,
		"MENU_ERROR":         6,
		"MALFORMED_REQUEST":  7,
		"AUTH_FAILED":        8,
		"STORE_CLOSED":       9,
		"TENDER_ERROR":       10,
		"CONNECTIVITY_ISSUE": 11,
		"ITEM_UNAVAILABLE":   12,
		"MENU_UNAVAILABLE":   13,
		"ITEM_NOT_VALID":     14,
		"TIMEOUT":            15,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_monolith_ordering_ordering_proto_enumTypes[1].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_monolith_ordering_ordering_proto_enumTypes[1]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{1}
}

type ReleaseOrderResponse_Status int32

const (
	ReleaseOrderResponse_REJECTED ReleaseOrderResponse_Status = 0
	ReleaseOrderResponse_ACCEPTED ReleaseOrderResponse_Status = 1
)

// Enum value maps for ReleaseOrderResponse_Status.
var (
	ReleaseOrderResponse_Status_name = map[int32]string{
		0: "REJECTED",
		1: "ACCEPTED",
	}
	ReleaseOrderResponse_Status_value = map[string]int32{
		"REJECTED": 0,
		"ACCEPTED": 1,
	}
)

func (x ReleaseOrderResponse_Status) Enum() *ReleaseOrderResponse_Status {
	p := new(ReleaseOrderResponse_Status)
	*p = x
	return p
}

func (x ReleaseOrderResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReleaseOrderResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_monolith_ordering_ordering_proto_enumTypes[2].Descriptor()
}

func (ReleaseOrderResponse_Status) Type() protoreflect.EnumType {
	return &file_monolith_ordering_ordering_proto_enumTypes[2]
}

func (x ReleaseOrderResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReleaseOrderResponse_Status.Descriptor instead.
func (ReleaseOrderResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{1, 0}
}

type ReleaseOrderResponse_Error_ErrorCode int32

const (
	ReleaseOrderResponse_Error_ERROR_UNKNOWN      ReleaseOrderResponse_Error_ErrorCode = 0
	ReleaseOrderResponse_Error_CONNECTION_FAILED  ReleaseOrderResponse_Error_ErrorCode = 1
	ReleaseOrderResponse_Error_NOT_SUPPORTED      ReleaseOrderResponse_Error_ErrorCode = 2
	ReleaseOrderResponse_Error_MALFORMED_REQUEST  ReleaseOrderResponse_Error_ErrorCode = 3
	ReleaseOrderResponse_Error_AUTH_FAILED        ReleaseOrderResponse_Error_ErrorCode = 4
	ReleaseOrderResponse_Error_ORDER_DOESNT_EXIST ReleaseOrderResponse_Error_ErrorCode = 5
)

// Enum value maps for ReleaseOrderResponse_Error_ErrorCode.
var (
	ReleaseOrderResponse_Error_ErrorCode_name = map[int32]string{
		0: "ERROR_UNKNOWN",
		1: "CONNECTION_FAILED",
		2: "NOT_SUPPORTED",
		3: "MALFORMED_REQUEST",
		4: "AUTH_FAILED",
		5: "ORDER_DOESNT_EXIST",
	}
	ReleaseOrderResponse_Error_ErrorCode_value = map[string]int32{
		"ERROR_UNKNOWN":      0,
		"CONNECTION_FAILED":  1,
		"NOT_SUPPORTED":      2,
		"MALFORMED_REQUEST":  3,
		"AUTH_FAILED":        4,
		"ORDER_DOESNT_EXIST": 5,
	}
)

func (x ReleaseOrderResponse_Error_ErrorCode) Enum() *ReleaseOrderResponse_Error_ErrorCode {
	p := new(ReleaseOrderResponse_Error_ErrorCode)
	*p = x
	return p
}

func (x ReleaseOrderResponse_Error_ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReleaseOrderResponse_Error_ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_monolith_ordering_ordering_proto_enumTypes[3].Descriptor()
}

func (ReleaseOrderResponse_Error_ErrorCode) Type() protoreflect.EnumType {
	return &file_monolith_ordering_ordering_proto_enumTypes[3]
}

func (x ReleaseOrderResponse_Error_ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReleaseOrderResponse_Error_ErrorCode.Descriptor instead.
func (ReleaseOrderResponse_Error_ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{1, 0, 0}
}

type Promotions_Type int32

const (
	Promotions_FREE_ITEM_MIN_BASKET Promotions_Type = 0
	Promotions_FREE_ITEM            Promotions_Type = 1
	Promotions_BUY_ONE_GET_ONE_FREE Promotions_Type = 2
	Promotions_PERCENTAGE_DISCOUNT  Promotions_Type = 3
	Promotions_STAMP_CARD           Promotions_Type = 4
	Promotions_OTHER                Promotions_Type = 5
	Promotions_NOTIFICATION         Promotions_Type = 6
	Promotions_ITEM_LEVEL_DISCOUNT  Promotions_Type = 7
)

// Enum value maps for Promotions_Type.
var (
	Promotions_Type_name = map[int32]string{
		0: "FREE_ITEM_MIN_BASKET",
		1: "FREE_ITEM",
		2: "BUY_ONE_GET_ONE_FREE",
		3: "PERCENTAGE_DISCOUNT",
		4: "STAMP_CARD",
		5: "OTHER",
		6: "NOTIFICATION",
		7: "ITEM_LEVEL_DISCOUNT",
	}
	Promotions_Type_value = map[string]int32{
		"FREE_ITEM_MIN_BASKET": 0,
		"FREE_ITEM":            1,
		"BUY_ONE_GET_ONE_FREE": 2,
		"PERCENTAGE_DISCOUNT":  3,
		"STAMP_CARD":           4,
		"OTHER":                5,
		"NOTIFICATION":         6,
		"ITEM_LEVEL_DISCOUNT":  7,
	}
)

func (x Promotions_Type) Enum() *Promotions_Type {
	p := new(Promotions_Type)
	*p = x
	return p
}

func (x Promotions_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Promotions_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_monolith_ordering_ordering_proto_enumTypes[4].Descriptor()
}

func (Promotions_Type) Type() protoreflect.EnumType {
	return &file_monolith_ordering_ordering_proto_enumTypes[4]
}

func (x Promotions_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Promotions_Type.Descriptor instead.
func (Promotions_Type) EnumDescriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{5, 0}
}

type OrderResponse_Status int32

const (
	OrderResponse_REJECTED OrderResponse_Status = 0
	OrderResponse_ACCEPTED OrderResponse_Status = 1
	OrderResponse_PENDING  OrderResponse_Status = 2
)

// Enum value maps for OrderResponse_Status.
var (
	OrderResponse_Status_name = map[int32]string{
		0: "REJECTED",
		1: "ACCEPTED",
		2: "PENDING",
	}
	OrderResponse_Status_value = map[string]int32{
		"REJECTED": 0,
		"ACCEPTED": 1,
		"PENDING":  2,
	}
)

func (x OrderResponse_Status) Enum() *OrderResponse_Status {
	p := new(OrderResponse_Status)
	*p = x
	return p
}

func (x OrderResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_monolith_ordering_ordering_proto_enumTypes[5].Descriptor()
}

func (OrderResponse_Status) Type() protoreflect.EnumType {
	return &file_monolith_ordering_ordering_proto_enumTypes[5]
}

func (x OrderResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderResponse_Status.Descriptor instead.
func (OrderResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{9, 0}
}

type HealthResponse_HealthStatus int32

const (
	HealthResponse_UNHEALTHY HealthResponse_HealthStatus = 0
	HealthResponse_OK        HealthResponse_HealthStatus = 1
)

// Enum value maps for HealthResponse_HealthStatus.
var (
	HealthResponse_HealthStatus_name = map[int32]string{
		0: "UNHEALTHY",
		1: "OK",
	}
	HealthResponse_HealthStatus_value = map[string]int32{
		"UNHEALTHY": 0,
		"OK":        1,
	}
)

func (x HealthResponse_HealthStatus) Enum() *HealthResponse_HealthStatus {
	p := new(HealthResponse_HealthStatus)
	*p = x
	return p
}

func (x HealthResponse_HealthStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthResponse_HealthStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_monolith_ordering_ordering_proto_enumTypes[6].Descriptor()
}

func (HealthResponse_HealthStatus) Type() protoreflect.EnumType {
	return &file_monolith_ordering_ordering_proto_enumTypes[6]
}

func (x HealthResponse_HealthStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthResponse_HealthStatus.Descriptor instead.
func (HealthResponse_HealthStatus) EnumDescriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{24, 0}
}

type CalculateRequest_FulfillmentType int32

const (
	CalculateRequest_DELIVERY_BY_PARTNER  CalculateRequest_FulfillmentType = 0
	CalculateRequest_DELIVERY_BY_OPERATOR CalculateRequest_FulfillmentType = 1
	CalculateRequest_COLLECTION           CalculateRequest_FulfillmentType = 2
)

// Enum value maps for CalculateRequest_FulfillmentType.
var (
	CalculateRequest_FulfillmentType_name = map[int32]string{
		0: "DELIVERY_BY_PARTNER",
		1: "DELIVERY_BY_OPERATOR",
		2: "COLLECTION",
	}
	CalculateRequest_FulfillmentType_value = map[string]int32{
		"DELIVERY_BY_PARTNER":  0,
		"DELIVERY_BY_OPERATOR": 1,
		"COLLECTION":           2,
	}
)

func (x CalculateRequest_FulfillmentType) Enum() *CalculateRequest_FulfillmentType {
	p := new(CalculateRequest_FulfillmentType)
	*p = x
	return p
}

func (x CalculateRequest_FulfillmentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CalculateRequest_FulfillmentType) Descriptor() protoreflect.EnumDescriptor {
	return file_monolith_ordering_ordering_proto_enumTypes[7].Descriptor()
}

func (CalculateRequest_FulfillmentType) Type() protoreflect.EnumType {
	return &file_monolith_ordering_ordering_proto_enumTypes[7]
}

func (x CalculateRequest_FulfillmentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CalculateRequest_FulfillmentType.Descriptor instead.
func (CalculateRequest_FulfillmentType) EnumDescriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{25, 0}
}

type BasketException_BasketExceptionReason int32

const (
	BasketException_UNKNOWN    BasketException_BasketExceptionReason = 0
	BasketException_STOCK      BasketException_BasketExceptionReason = 1
	BasketException_CONNECTION BasketException_BasketExceptionReason = 2
	BasketException_OFFLINE    BasketException_BasketExceptionReason = 3
)

// Enum value maps for BasketException_BasketExceptionReason.
var (
	BasketException_BasketExceptionReason_name = map[int32]string{
		0: "UNKNOWN",
		1: "STOCK",
		2: "CONNECTION",
		3: "OFFLINE",
	}
	BasketException_BasketExceptionReason_value = map[string]int32{
		"UNKNOWN":    0,
		"STOCK":      1,
		"CONNECTION": 2,
		"OFFLINE":    3,
	}
)

func (x BasketException_BasketExceptionReason) Enum() *BasketException_BasketExceptionReason {
	p := new(BasketException_BasketExceptionReason)
	*p = x
	return p
}

func (x BasketException_BasketExceptionReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BasketException_BasketExceptionReason) Descriptor() protoreflect.EnumDescriptor {
	return file_monolith_ordering_ordering_proto_enumTypes[8].Descriptor()
}

func (BasketException_BasketExceptionReason) Type() protoreflect.EnumType {
	return &file_monolith_ordering_ordering_proto_enumTypes[8]
}

func (x BasketException_BasketExceptionReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BasketException_BasketExceptionReason.Descriptor instead.
func (BasketException_BasketExceptionReason) EnumDescriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{27, 0}
}

type CalculateResponse_Status int32

const (
	CalculateResponse_REJECTED CalculateResponse_Status = 0
	CalculateResponse_OK       CalculateResponse_Status = 1
)

// Enum value maps for CalculateResponse_Status.
var (
	CalculateResponse_Status_name = map[int32]string{
		0: "REJECTED",
		1: "OK",
	}
	CalculateResponse_Status_value = map[string]int32{
		"REJECTED": 0,
		"OK":       1,
	}
)

func (x CalculateResponse_Status) Enum() *CalculateResponse_Status {
	p := new(CalculateResponse_Status)
	*p = x
	return p
}

func (x CalculateResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CalculateResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_monolith_ordering_ordering_proto_enumTypes[9].Descriptor()
}

func (CalculateResponse_Status) Type() protoreflect.EnumType {
	return &file_monolith_ordering_ordering_proto_enumTypes[9]
}

func (x CalculateResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CalculateResponse_Status.Descriptor instead.
func (CalculateResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{28, 0}
}

type ReleaseOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId                  string             `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	ThirdPartyOrderReference string             `protobuf:"bytes,2,opt,name=third_party_order_reference,json=thirdPartyOrderReference,proto3" json:"third_party_order_reference,omitempty"`
	Config                   *IntegrationConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *ReleaseOrderRequest) Reset() {
	*x = ReleaseOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseOrderRequest) ProtoMessage() {}

func (x *ReleaseOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseOrderRequest.ProtoReflect.Descriptor instead.
func (*ReleaseOrderRequest) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{0}
}

func (x *ReleaseOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ReleaseOrderRequest) GetThirdPartyOrderReference() string {
	if x != nil {
		return x.ThirdPartyOrderReference
	}
	return ""
}

func (x *ReleaseOrderRequest) GetConfig() *IntegrationConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type ReleaseOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     ReleaseOrderResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ordering.ReleaseOrderResponse_Status" json:"status,omitempty"`
	Error      *ReleaseOrderResponse_Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	HappenedAt int64                       `protobuf:"varint,3,opt,name=happened_at,json=happenedAt,proto3" json:"happened_at,omitempty"` // When the response happened.
}

func (x *ReleaseOrderResponse) Reset() {
	*x = ReleaseOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseOrderResponse) ProtoMessage() {}

func (x *ReleaseOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseOrderResponse.ProtoReflect.Descriptor instead.
func (*ReleaseOrderResponse) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{1}
}

func (x *ReleaseOrderResponse) GetStatus() ReleaseOrderResponse_Status {
	if x != nil {
		return x.Status
	}
	return ReleaseOrderResponse_REJECTED
}

func (x *ReleaseOrderResponse) GetError() *ReleaseOrderResponse_Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ReleaseOrderResponse) GetHappenedAt() int64 {
	if x != nil {
		return x.HappenedAt
	}
	return 0
}

type PaymentInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemsInCart *PriceDetails      `protobuf:"bytes,1,opt,name=items_in_cart,json=itemsInCart,proto3" json:"items_in_cart,omitempty"`
	Adjustments []*PriceAdjustment `protobuf:"bytes,2,rep,name=adjustments,proto3" json:"adjustments,omitempty"`
	Final       *PriceDetails      `protobuf:"bytes,3,opt,name=final,proto3" json:"final,omitempty"`
}

func (x *PaymentInformation) Reset() {
	*x = PaymentInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentInformation) ProtoMessage() {}

func (x *PaymentInformation) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentInformation.ProtoReflect.Descriptor instead.
func (*PaymentInformation) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{2}
}

func (x *PaymentInformation) GetItemsInCart() *PriceDetails {
	if x != nil {
		return x.ItemsInCart
	}
	return nil
}

func (x *PaymentInformation) GetAdjustments() []*PriceAdjustment {
	if x != nil {
		return x.Adjustments
	}
	return nil
}

func (x *PaymentInformation) GetFinal() *PriceDetails {
	if x != nil {
		return x.Final
	}
	return nil
}

type PriceAdjustment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Price *PriceDetails `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *PriceAdjustment) Reset() {
	*x = PriceAdjustment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceAdjustment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceAdjustment) ProtoMessage() {}

func (x *PriceAdjustment) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceAdjustment.ProtoReflect.Descriptor instead.
func (*PriceAdjustment) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{3}
}

func (x *PriceAdjustment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PriceAdjustment) GetPrice() *PriceDetails {
	if x != nil {
		return x.Price
	}
	return nil
}

type PriceDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncTax int32 `protobuf:"varint,1,opt,name=inc_tax,json=incTax,proto3" json:"inc_tax,omitempty"`
	Tax    int32 `protobuf:"varint,2,opt,name=tax,proto3" json:"tax,omitempty"`
}

func (x *PriceDetails) Reset() {
	*x = PriceDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceDetails) ProtoMessage() {}

func (x *PriceDetails) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceDetails.ProtoReflect.Descriptor instead.
func (*PriceDetails) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{4}
}

func (x *PriceDetails) GetIncTax() int32 {
	if x != nil {
		return x.IncTax
	}
	return 0
}

func (x *PriceDetails) GetTax() int32 {
	if x != nil {
		return x.Tax
	}
	return 0
}

type Promotions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          Promotions_Type `protobuf:"varint,2,opt,name=type,proto3,enum=ordering.Promotions_Type" json:"type,omitempty"`
	Items         []*Item         `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	PromotionId   string          `protobuf:"bytes,4,opt,name=promotion_id,json=promotionId,proto3" json:"promotion_id,omitempty"`
	DiscountValue int32           `protobuf:"varint,5,opt,name=discount_value,json=discountValue,proto3" json:"discount_value,omitempty"`
}

func (x *Promotions) Reset() {
	*x = Promotions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Promotions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Promotions) ProtoMessage() {}

func (x *Promotions) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Promotions.ProtoReflect.Descriptor instead.
func (*Promotions) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{5}
}

func (x *Promotions) GetType() Promotions_Type {
	if x != nil {
		return x.Type
	}
	return Promotions_FREE_ITEM_MIN_BASKET
}

func (x *Promotions) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Promotions) GetPromotionId() string {
	if x != nil {
		return x.PromotionId
	}
	return ""
}

func (x *Promotions) GetDiscountValue() int32 {
	if x != nil {
		return x.DiscountValue
	}
	return 0
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // Flyt's location id
	Timezone string `protobuf:"bytes,2,opt,name=timezone,proto3" json:"timezone,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{6}
}

func (x *Location) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Location) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

type Channel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Channel) Reset() {
	*x = Channel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Channel) ProtoMessage() {}

func (x *Channel) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Channel.ProtoReflect.Descriptor instead.
func (*Channel) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{7}
}

func (x *Channel) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Channel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description                 string  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Plu                         string  `protobuf:"bytes,3,opt,name=plu,proto3" json:"plu,omitempty"` // unique identifier
	Children                    []*Item `protobuf:"bytes,4,rep,name=children,proto3" json:"children,omitempty"`
	Price                       int32   `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
	Notes                       string  `protobuf:"bytes,6,opt,name=notes,proto3" json:"notes,omitempty"`
	Deposit                     int32   `protobuf:"varint,7,opt,name=deposit,proto3" json:"deposit,omitempty"`
	DepositIncludedInTotalPrice bool    `protobuf:"varint,8,opt,name=deposit_included_in_total_price,json=depositIncludedInTotalPrice,proto3" json:"deposit_included_in_total_price,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{8}
}

func (x *Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Item) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Item) GetPlu() string {
	if x != nil {
		return x.Plu
	}
	return ""
}

func (x *Item) GetChildren() []*Item {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *Item) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Item) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *Item) GetDeposit() int32 {
	if x != nil {
		return x.Deposit
	}
	return 0
}

func (x *Item) GetDepositIncludedInTotalPrice() bool {
	if x != nil {
		return x.DepositIncludedInTotalPrice
	}
	return false
}

type OrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     OrderResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ordering.OrderResponse_Status" json:"status,omitempty"` // Define order's status.
	Error      *Error               `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`                                       // If status is not accepted there will be an error defined or pending.
	HappenedAt int64                `protobuf:"varint,3,opt,name=happened_at,json=happenedAt,proto3" json:"happened_at,omitempty"`          // When the response happened.
	CanRetry   bool                 `protobuf:"varint,4,opt,name=can_retry,json=canRetry,proto3" json:"can_retry,omitempty"`                // Use to indicate whether the failure is retryable
}

func (x *OrderResponse) Reset() {
	*x = OrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderResponse) ProtoMessage() {}

func (x *OrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderResponse.ProtoReflect.Descriptor instead.
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{9}
}

func (x *OrderResponse) GetStatus() OrderResponse_Status {
	if x != nil {
		return x.Status
	}
	return OrderResponse_REJECTED
}

func (x *OrderResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *OrderResponse) GetHappenedAt() int64 {
	if x != nil {
		return x.HappenedAt
	}
	return 0
}

func (x *OrderResponse) GetCanRetry() bool {
	if x != nil {
		return x.CanRetry
	}
	return false
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=ordering.ErrorCode" json:"code,omitempty"` // Define error's type
	Message string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                    // Description of the error
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{10}
}

func (x *Error) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_UNKNOWN
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeliveryByOperatorOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order  *DeliveryByOperatorOrder `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	Config *IntegrationConfig       `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *DeliveryByOperatorOrderRequest) Reset() {
	*x = DeliveryByOperatorOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryByOperatorOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryByOperatorOrderRequest) ProtoMessage() {}

func (x *DeliveryByOperatorOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryByOperatorOrderRequest.ProtoReflect.Descriptor instead.
func (*DeliveryByOperatorOrderRequest) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{11}
}

func (x *DeliveryByOperatorOrderRequest) GetOrder() *DeliveryByOperatorOrder {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *DeliveryByOperatorOrderRequest) GetConfig() *IntegrationConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type DeliveryByOperatorOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Order uuid
	Location                 *Location           `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Delivery                 *DeliveryDetail     `protobuf:"bytes,3,opt,name=delivery,proto3" json:"delivery,omitempty"`                     // The operator themselves have a delivery driver and will be doing the delivery to the final customer
	Items                    []*Item             `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`                           // Collection of elements that customer has ordered
	CreatedAt                int64               `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // Timestamp when order was created.
	Channel                  *Channel            `protobuf:"bytes,6,opt,name=channel,proto3" json:"channel,omitempty"`
	DeliverAt                int64               `protobuf:"varint,7,opt,name=deliver_at,json=deliverAt,proto3" json:"deliver_at,omitempty"`            // Timestamp when the eater wants their food delivered.
	DeliveryNotes            string              `protobuf:"bytes,8,opt,name=delivery_notes,json=deliveryNotes,proto3" json:"delivery_notes,omitempty"` // Notes left by the customer for the delivery driver.
	KitchenNotes             string              `protobuf:"bytes,9,opt,name=kitchen_notes,json=kitchenNotes,proto3" json:"kitchen_notes,omitempty"`    // Notes specified by the customer for the kitchen
	Total                    int32               `protobuf:"varint,10,opt,name=total,proto3" json:"total,omitempty"`                                    // Total price for the order
	PaymentMethod            PaymentMethod       `protobuf:"varint,11,opt,name=payment_method,json=paymentMethod,proto3,enum=ordering.PaymentMethod" json:"payment_method,omitempty"`
	TenderType               string              `protobuf:"bytes,12,opt,name=tender_type,json=tenderType,proto3" json:"tender_type,omitempty"`          // An identifier for the tender that the POS should use for the order.
	MenuReference            string              `protobuf:"bytes,14,opt,name=menu_reference,json=menuReference,proto3" json:"menu_reference,omitempty"` // It is the POS identifier for menu from which we're ordering items
	Payment                  *PaymentInformation `protobuf:"bytes,15,opt,name=payment,proto3" json:"payment,omitempty"`
	ThirdPartyOrderReference string              `protobuf:"bytes,16,opt,name=third_party_order_reference,json=thirdPartyOrderReference,proto3" json:"third_party_order_reference,omitempty"` // It is an identifier that 3rd parties use to identify orders.
	Extras                   map[string]string   `protobuf:"bytes,17,rep,name=extras,proto3" json:"extras,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Promotions               []*Promotions       `protobuf:"bytes,18,rep,name=promotions,proto3" json:"promotions,omitempty"`
	ServiceFee               float64             `protobuf:"fixed64,19,opt,name=service_fee,json=serviceFee,proto3" json:"service_fee,omitempty"`
}

func (x *DeliveryByOperatorOrder) Reset() {
	*x = DeliveryByOperatorOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryByOperatorOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryByOperatorOrder) ProtoMessage() {}

func (x *DeliveryByOperatorOrder) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryByOperatorOrder.ProtoReflect.Descriptor instead.
func (*DeliveryByOperatorOrder) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{12}
}

func (x *DeliveryByOperatorOrder) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeliveryByOperatorOrder) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *DeliveryByOperatorOrder) GetDelivery() *DeliveryDetail {
	if x != nil {
		return x.Delivery
	}
	return nil
}

func (x *DeliveryByOperatorOrder) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *DeliveryByOperatorOrder) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *DeliveryByOperatorOrder) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *DeliveryByOperatorOrder) GetDeliverAt() int64 {
	if x != nil {
		return x.DeliverAt
	}
	return 0
}

func (x *DeliveryByOperatorOrder) GetDeliveryNotes() string {
	if x != nil {
		return x.DeliveryNotes
	}
	return ""
}

func (x *DeliveryByOperatorOrder) GetKitchenNotes() string {
	if x != nil {
		return x.KitchenNotes
	}
	return ""
}

func (x *DeliveryByOperatorOrder) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DeliveryByOperatorOrder) GetPaymentMethod() PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return PaymentMethod_CARD
}

func (x *DeliveryByOperatorOrder) GetTenderType() string {
	if x != nil {
		return x.TenderType
	}
	return ""
}

func (x *DeliveryByOperatorOrder) GetMenuReference() string {
	if x != nil {
		return x.MenuReference
	}
	return ""
}

func (x *DeliveryByOperatorOrder) GetPayment() *PaymentInformation {
	if x != nil {
		return x.Payment
	}
	return nil
}

func (x *DeliveryByOperatorOrder) GetThirdPartyOrderReference() string {
	if x != nil {
		return x.ThirdPartyOrderReference
	}
	return ""
}

func (x *DeliveryByOperatorOrder) GetExtras() map[string]string {
	if x != nil {
		return x.Extras
	}
	return nil
}

func (x *DeliveryByOperatorOrder) GetPromotions() []*Promotions {
	if x != nil {
		return x.Promotions
	}
	return nil
}

func (x *DeliveryByOperatorOrder) GetServiceFee() float64 {
	if x != nil {
		return x.ServiceFee
	}
	return 0
}

type DeliveryDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName        string       `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`       // Customer's name
	LastName         string       `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`          // Customer's last name
	PhoneNumber      string       `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"` // Phone number of the customer
	LineOne          string       `protobuf:"bytes,4,opt,name=line_one,json=lineOne,proto3" json:"line_one,omitempty"`             // First line of the customer delivery address
	LineTwo          string       `protobuf:"bytes,5,opt,name=line_two,json=lineTwo,proto3" json:"line_two,omitempty"`             // Second line of the customer delivery address
	City             string       `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`                                  // City the customer lives in
	Postcode         string       `protobuf:"bytes,7,opt,name=postcode,proto3" json:"postcode,omitempty"`                          // The post code for the customer delivery address
	Email            string       `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	Coordinates      *Coordinates `protobuf:"bytes,9,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	PhoneMaskingCode string       `protobuf:"bytes,10,opt,name=phone_masking_code,json=phoneMaskingCode,proto3" json:"phone_masking_code,omitempty"` // Code to unmask customer phone number
	CompanyName      string       `protobuf:"bytes,11,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	TaxId            string       `protobuf:"bytes,12,opt,name=tax_id,json=taxId,proto3" json:"tax_id,omitempty"` // Customer's tax id (optional)
	StreetNumber     string       `protobuf:"bytes,13,opt,name=street_number,json=streetNumber,proto3" json:"street_number,omitempty"`
	Street           string       `protobuf:"bytes,14,opt,name=street,proto3" json:"street,omitempty"`
}

func (x *DeliveryDetail) Reset() {
	*x = DeliveryDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryDetail) ProtoMessage() {}

func (x *DeliveryDetail) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryDetail.ProtoReflect.Descriptor instead.
func (*DeliveryDetail) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{13}
}

func (x *DeliveryDetail) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *DeliveryDetail) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *DeliveryDetail) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *DeliveryDetail) GetLineOne() string {
	if x != nil {
		return x.LineOne
	}
	return ""
}

func (x *DeliveryDetail) GetLineTwo() string {
	if x != nil {
		return x.LineTwo
	}
	return ""
}

func (x *DeliveryDetail) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *DeliveryDetail) GetPostcode() string {
	if x != nil {
		return x.Postcode
	}
	return ""
}

func (x *DeliveryDetail) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DeliveryDetail) GetCoordinates() *Coordinates {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *DeliveryDetail) GetPhoneMaskingCode() string {
	if x != nil {
		return x.PhoneMaskingCode
	}
	return ""
}

func (x *DeliveryDetail) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *DeliveryDetail) GetTaxId() string {
	if x != nil {
		return x.TaxId
	}
	return ""
}

func (x *DeliveryDetail) GetStreetNumber() string {
	if x != nil {
		return x.StreetNumber
	}
	return ""
}

func (x *DeliveryDetail) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

type Coordinates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Longitude float32 `protobuf:"fixed32,1,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude  float32 `protobuf:"fixed32,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// There's string representations of the coordinates because if you pass a value like
	// 5.12345 into a float32, it gets expanded out into 5.12345678910 ... This sometimes
	// fails to get sent to the POS correctly. The original values should be deprecated.
	LongitudeAsString string `protobuf:"bytes,3,opt,name=longitude_as_string,json=longitudeAsString,proto3" json:"longitude_as_string,omitempty"`
	LatitudeAsString  string `protobuf:"bytes,4,opt,name=latitude_as_string,json=latitudeAsString,proto3" json:"latitude_as_string,omitempty"`
}

func (x *Coordinates) Reset() {
	*x = Coordinates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coordinates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coordinates) ProtoMessage() {}

func (x *Coordinates) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coordinates.ProtoReflect.Descriptor instead.
func (*Coordinates) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{14}
}

func (x *Coordinates) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Coordinates) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Coordinates) GetLongitudeAsString() string {
	if x != nil {
		return x.LongitudeAsString
	}
	return ""
}

func (x *Coordinates) GetLatitudeAsString() string {
	if x != nil {
		return x.LatitudeAsString
	}
	return ""
}

type DeliveryByDeliveryPartnerOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order  *DeliveryByDeliveryPartnerOrder `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	Config *IntegrationConfig              `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *DeliveryByDeliveryPartnerOrderRequest) Reset() {
	*x = DeliveryByDeliveryPartnerOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryByDeliveryPartnerOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryByDeliveryPartnerOrderRequest) ProtoMessage() {}

func (x *DeliveryByDeliveryPartnerOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryByDeliveryPartnerOrderRequest.ProtoReflect.Descriptor instead.
func (*DeliveryByDeliveryPartnerOrderRequest) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{15}
}

func (x *DeliveryByDeliveryPartnerOrderRequest) GetOrder() *DeliveryByDeliveryPartnerOrder {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *DeliveryByDeliveryPartnerOrderRequest) GetConfig() *IntegrationConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type DeliveryByDeliveryPartnerOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Location                 *Location           `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Driver                   *DriverDetail       `protobuf:"bytes,3,opt,name=driver,proto3" json:"driver,omitempty"` // Information about driver that will pick the order.
	Items                    []*Item             `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
	CreatedAt                int64               `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Channel                  *Channel            `protobuf:"bytes,6,opt,name=channel,proto3" json:"channel,omitempty"`
	CollectAt                int64               `protobuf:"varint,7,opt,name=collect_at,json=collectAt,proto3" json:"collect_at,omitempty"`
	CollectionNotes          string              `protobuf:"bytes,8,opt,name=collection_notes,json=collectionNotes,proto3" json:"collection_notes,omitempty"`
	KitchenNotes             string              `protobuf:"bytes,9,opt,name=kitchen_notes,json=kitchenNotes,proto3" json:"kitchen_notes,omitempty"`
	ThirdPartyOrderReference string              `protobuf:"bytes,10,opt,name=third_party_order_reference,json=thirdPartyOrderReference,proto3" json:"third_party_order_reference,omitempty"` // It is an identifier that 3rd parties use to identify orders.
	Total                    int32               `protobuf:"varint,11,opt,name=total,proto3" json:"total,omitempty"`
	PaymentMethod            PaymentMethod       `protobuf:"varint,12,opt,name=payment_method,json=paymentMethod,proto3,enum=ordering.PaymentMethod" json:"payment_method,omitempty"`
	TenderType               string              `protobuf:"bytes,13,opt,name=tender_type,json=tenderType,proto3" json:"tender_type,omitempty"` // An identifier for the tender that the POS should use for the order.
	MenuReference            string              `protobuf:"bytes,14,opt,name=menu_reference,json=menuReference,proto3" json:"menu_reference,omitempty"`
	Payment                  *PaymentInformation `protobuf:"bytes,15,opt,name=payment,proto3" json:"payment,omitempty"`
	Delivery                 *DeliveryDetail     `protobuf:"bytes,16,opt,name=delivery,proto3" json:"delivery,omitempty"` // The customer data associated with the delivery
	Extras                   map[string]string   `protobuf:"bytes,17,rep,name=extras,proto3" json:"extras,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Promotions               []*Promotions       `protobuf:"bytes,18,rep,name=promotions,proto3" json:"promotions,omitempty"`
	ServiceFee               float64             `protobuf:"fixed64,19,opt,name=service_fee,json=serviceFee,proto3" json:"service_fee,omitempty"`
}

func (x *DeliveryByDeliveryPartnerOrder) Reset() {
	*x = DeliveryByDeliveryPartnerOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryByDeliveryPartnerOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryByDeliveryPartnerOrder) ProtoMessage() {}

func (x *DeliveryByDeliveryPartnerOrder) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryByDeliveryPartnerOrder.ProtoReflect.Descriptor instead.
func (*DeliveryByDeliveryPartnerOrder) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{16}
}

func (x *DeliveryByDeliveryPartnerOrder) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeliveryByDeliveryPartnerOrder) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *DeliveryByDeliveryPartnerOrder) GetDriver() *DriverDetail {
	if x != nil {
		return x.Driver
	}
	return nil
}

func (x *DeliveryByDeliveryPartnerOrder) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *DeliveryByDeliveryPartnerOrder) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *DeliveryByDeliveryPartnerOrder) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *DeliveryByDeliveryPartnerOrder) GetCollectAt() int64 {
	if x != nil {
		return x.CollectAt
	}
	return 0
}

func (x *DeliveryByDeliveryPartnerOrder) GetCollectionNotes() string {
	if x != nil {
		return x.CollectionNotes
	}
	return ""
}

func (x *DeliveryByDeliveryPartnerOrder) GetKitchenNotes() string {
	if x != nil {
		return x.KitchenNotes
	}
	return ""
}

func (x *DeliveryByDeliveryPartnerOrder) GetThirdPartyOrderReference() string {
	if x != nil {
		return x.ThirdPartyOrderReference
	}
	return ""
}

func (x *DeliveryByDeliveryPartnerOrder) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DeliveryByDeliveryPartnerOrder) GetPaymentMethod() PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return PaymentMethod_CARD
}

func (x *DeliveryByDeliveryPartnerOrder) GetTenderType() string {
	if x != nil {
		return x.TenderType
	}
	return ""
}

func (x *DeliveryByDeliveryPartnerOrder) GetMenuReference() string {
	if x != nil {
		return x.MenuReference
	}
	return ""
}

func (x *DeliveryByDeliveryPartnerOrder) GetPayment() *PaymentInformation {
	if x != nil {
		return x.Payment
	}
	return nil
}

func (x *DeliveryByDeliveryPartnerOrder) GetDelivery() *DeliveryDetail {
	if x != nil {
		return x.Delivery
	}
	return nil
}

func (x *DeliveryByDeliveryPartnerOrder) GetExtras() map[string]string {
	if x != nil {
		return x.Extras
	}
	return nil
}

func (x *DeliveryByDeliveryPartnerOrder) GetPromotions() []*Promotions {
	if x != nil {
		return x.Promotions
	}
	return nil
}

func (x *DeliveryByDeliveryPartnerOrder) GetServiceFee() float64 {
	if x != nil {
		return x.ServiceFee
	}
	return 0
}

type DriverDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName   string `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName    string `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	PhoneNumber string `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
}

func (x *DriverDetail) Reset() {
	*x = DriverDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverDetail) ProtoMessage() {}

func (x *DriverDetail) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverDetail.ProtoReflect.Descriptor instead.
func (*DriverDetail) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{17}
}

func (x *DriverDetail) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *DriverDetail) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *DriverDetail) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type CollectionOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order  *CollectionOrder   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	Config *IntegrationConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *CollectionOrderRequest) Reset() {
	*x = CollectionOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionOrderRequest) ProtoMessage() {}

func (x *CollectionOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionOrderRequest.ProtoReflect.Descriptor instead.
func (*CollectionOrderRequest) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{18}
}

func (x *CollectionOrderRequest) GetOrder() *CollectionOrder {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *CollectionOrderRequest) GetConfig() *IntegrationConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type CollectionOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Location                 *Location           `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Collector                *CollectorDetail    `protobuf:"bytes,3,opt,name=collector,proto3" json:"collector,omitempty"`
	Items                    []*Item             `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
	CreatedAt                int64               `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Channel                  *Channel            `protobuf:"bytes,6,opt,name=channel,proto3" json:"channel,omitempty"`
	CollectAt                int64               `protobuf:"varint,7,opt,name=collect_at,json=collectAt,proto3" json:"collect_at,omitempty"`
	CollectionNotes          string              `protobuf:"bytes,8,opt,name=collection_notes,json=collectionNotes,proto3" json:"collection_notes,omitempty"`
	KitchenNotes             string              `protobuf:"bytes,9,opt,name=kitchen_notes,json=kitchenNotes,proto3" json:"kitchen_notes,omitempty"`
	ThirdPartyOrderReference string              `protobuf:"bytes,10,opt,name=third_party_order_reference,json=thirdPartyOrderReference,proto3" json:"third_party_order_reference,omitempty"` // It is an identifier that 3rd parties use to identify orders.
	Total                    int32               `protobuf:"varint,11,opt,name=total,proto3" json:"total,omitempty"`
	PaymentMethod            PaymentMethod       `protobuf:"varint,12,opt,name=payment_method,json=paymentMethod,proto3,enum=ordering.PaymentMethod" json:"payment_method,omitempty"`
	TenderType               string              `protobuf:"bytes,13,opt,name=tender_type,json=tenderType,proto3" json:"tender_type,omitempty"` // An identifier for the tender that the POS should use for the order.
	MenuReference            string              `protobuf:"bytes,14,opt,name=menu_reference,json=menuReference,proto3" json:"menu_reference,omitempty"`
	Payment                  *PaymentInformation `protobuf:"bytes,15,opt,name=payment,proto3" json:"payment,omitempty"`
	Extras                   map[string]string   `protobuf:"bytes,16,rep,name=extras,proto3" json:"extras,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Promotions               []*Promotions       `protobuf:"bytes,17,rep,name=promotions,proto3" json:"promotions,omitempty"`
	ServiceFee               float64             `protobuf:"fixed64,18,opt,name=service_fee,json=serviceFee,proto3" json:"service_fee,omitempty"`
}

func (x *CollectionOrder) Reset() {
	*x = CollectionOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionOrder) ProtoMessage() {}

func (x *CollectionOrder) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionOrder.ProtoReflect.Descriptor instead.
func (*CollectionOrder) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{19}
}

func (x *CollectionOrder) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CollectionOrder) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *CollectionOrder) GetCollector() *CollectorDetail {
	if x != nil {
		return x.Collector
	}
	return nil
}

func (x *CollectionOrder) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CollectionOrder) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CollectionOrder) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *CollectionOrder) GetCollectAt() int64 {
	if x != nil {
		return x.CollectAt
	}
	return 0
}

func (x *CollectionOrder) GetCollectionNotes() string {
	if x != nil {
		return x.CollectionNotes
	}
	return ""
}

func (x *CollectionOrder) GetKitchenNotes() string {
	if x != nil {
		return x.KitchenNotes
	}
	return ""
}

func (x *CollectionOrder) GetThirdPartyOrderReference() string {
	if x != nil {
		return x.ThirdPartyOrderReference
	}
	return ""
}

func (x *CollectionOrder) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CollectionOrder) GetPaymentMethod() PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return PaymentMethod_CARD
}

func (x *CollectionOrder) GetTenderType() string {
	if x != nil {
		return x.TenderType
	}
	return ""
}

func (x *CollectionOrder) GetMenuReference() string {
	if x != nil {
		return x.MenuReference
	}
	return ""
}

func (x *CollectionOrder) GetPayment() *PaymentInformation {
	if x != nil {
		return x.Payment
	}
	return nil
}

func (x *CollectionOrder) GetExtras() map[string]string {
	if x != nil {
		return x.Extras
	}
	return nil
}

func (x *CollectionOrder) GetPromotions() []*Promotions {
	if x != nil {
		return x.Promotions
	}
	return nil
}

func (x *CollectionOrder) GetServiceFee() float64 {
	if x != nil {
		return x.ServiceFee
	}
	return 0
}

type CollectorDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName        string `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName         string `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	PhoneNumber      string `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneMaskingCode string `protobuf:"bytes,4,opt,name=phone_masking_code,json=phoneMaskingCode,proto3" json:"phone_masking_code,omitempty"` // Code to unmask customer phone number
	TaxId            string `protobuf:"bytes,5,opt,name=tax_id,json=taxId,proto3" json:"tax_id,omitempty"`                                    // Customer's tax id (optional)
}

func (x *CollectorDetail) Reset() {
	*x = CollectorDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectorDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectorDetail) ProtoMessage() {}

func (x *CollectorDetail) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectorDetail.ProtoReflect.Descriptor instead.
func (*CollectorDetail) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{20}
}

func (x *CollectorDetail) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CollectorDetail) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *CollectorDetail) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *CollectorDetail) GetPhoneMaskingCode() string {
	if x != nil {
		return x.PhoneMaskingCode
	}
	return ""
}

func (x *CollectorDetail) GetTaxId() string {
	if x != nil {
		return x.TaxId
	}
	return ""
}

type IntegrationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parameters map[string]string `protobuf:"bytes,1,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *IntegrationConfig) Reset() {
	*x = IntegrationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationConfig) ProtoMessage() {}

func (x *IntegrationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationConfig.ProtoReflect.Descriptor instead.
func (*IntegrationConfig) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{21}
}

func (x *IntegrationConfig) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type HealthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *IntegrationConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{22}
}

func (x *HealthRequest) GetConfig() *IntegrationConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type HealthError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string    `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    ErrorCode `protobuf:"varint,2,opt,name=code,proto3,enum=ordering.ErrorCode" json:"code,omitempty"`
}

func (x *HealthError) Reset() {
	*x = HealthError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthError) ProtoMessage() {}

func (x *HealthError) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthError.ProtoReflect.Descriptor instead.
func (*HealthError) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{23}
}

func (x *HealthError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthError) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_UNKNOWN
}

type HealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status HealthResponse_HealthStatus `protobuf:"varint,1,opt,name=status,proto3,enum=ordering.HealthResponse_HealthStatus" json:"status,omitempty"`
	Error  *HealthError                `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{24}
}

func (x *HealthResponse) GetStatus() HealthResponse_HealthStatus {
	if x != nil {
		return x.Status
	}
	return HealthResponse_UNHEALTHY
}

func (x *HealthResponse) GetError() *HealthError {
	if x != nil {
		return x.Error
	}
	return nil
}

// A request to calculate the cost of the given items
type CalculateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// A unique code to identify the ordering session
	CalculationIdentifier string                           `protobuf:"bytes,2,opt,name=calculation_identifier,json=calculationIdentifier,proto3" json:"calculation_identifier,omitempty"`
	Config                *IntegrationConfig               `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	FulfillmentType       CalculateRequest_FulfillmentType `protobuf:"varint,4,opt,name=fulfillment_type,json=fulfillmentType,proto3,enum=ordering.CalculateRequest_FulfillmentType" json:"fulfillment_type,omitempty"`
}

func (x *CalculateRequest) Reset() {
	*x = CalculateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateRequest) ProtoMessage() {}

func (x *CalculateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateRequest.ProtoReflect.Descriptor instead.
func (*CalculateRequest) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{25}
}

func (x *CalculateRequest) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CalculateRequest) GetCalculationIdentifier() string {
	if x != nil {
		return x.CalculationIdentifier
	}
	return ""
}

func (x *CalculateRequest) GetConfig() *IntegrationConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CalculateRequest) GetFulfillmentType() CalculateRequest_FulfillmentType {
	if x != nil {
		return x.FulfillmentType
	}
	return CalculateRequest_DELIVERY_BY_PARTNER
}

type OrderCalculation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Totals  *OrderCalculation_Totals   `protobuf:"bytes,1,opt,name=totals,proto3" json:"totals,omitempty"`
	Taxes   []*OrderCalculation_Tax    `protobuf:"bytes,2,rep,name=taxes,proto3" json:"taxes,omitempty"`
	Savings []*OrderCalculation_Saving `protobuf:"bytes,3,rep,name=savings,proto3" json:"savings,omitempty"`
}

func (x *OrderCalculation) Reset() {
	*x = OrderCalculation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCalculation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCalculation) ProtoMessage() {}

func (x *OrderCalculation) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCalculation.ProtoReflect.Descriptor instead.
func (*OrderCalculation) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{26}
}

func (x *OrderCalculation) GetTotals() *OrderCalculation_Totals {
	if x != nil {
		return x.Totals
	}
	return nil
}

func (x *OrderCalculation) GetTaxes() []*OrderCalculation_Tax {
	if x != nil {
		return x.Taxes
	}
	return nil
}

func (x *OrderCalculation) GetSavings() []*OrderCalculation_Saving {
	if x != nil {
		return x.Savings
	}
	return nil
}

type BasketException struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason BasketException_BasketExceptionReason `protobuf:"varint,1,opt,name=reason,proto3,enum=ordering.BasketException_BasketExceptionReason" json:"reason,omitempty"` // Reason of outage/issue
	Plus   []string                              `protobuf:"bytes,2,rep,name=plus,proto3" json:"plus,omitempty"`                                                          // List of PLUs affected by the basket exception
}

func (x *BasketException) Reset() {
	*x = BasketException{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasketException) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasketException) ProtoMessage() {}

func (x *BasketException) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasketException.ProtoReflect.Descriptor instead.
func (*BasketException) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{27}
}

func (x *BasketException) GetReason() BasketException_BasketExceptionReason {
	if x != nil {
		return x.Reason
	}
	return BasketException_UNKNOWN
}

func (x *BasketException) GetPlus() []string {
	if x != nil {
		return x.Plus
	}
	return nil
}

type CalculateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Response with status OK if you are returning calculated totals
	Status      CalculateResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ordering.CalculateResponse_Status" json:"status,omitempty"`
	Calculation *OrderCalculation        `protobuf:"bytes,2,opt,name=calculation,proto3" json:"calculation,omitempty"`
	Error       *Error                   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	HappenedAt  int64                    `protobuf:"varint,4,opt,name=happened_at,json=happenedAt,proto3" json:"happened_at,omitempty"`
	Exceptions  []*BasketException       `protobuf:"bytes,5,rep,name=exceptions,proto3" json:"exceptions,omitempty"`
}

func (x *CalculateResponse) Reset() {
	*x = CalculateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateResponse) ProtoMessage() {}

func (x *CalculateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateResponse.ProtoReflect.Descriptor instead.
func (*CalculateResponse) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{28}
}

func (x *CalculateResponse) GetStatus() CalculateResponse_Status {
	if x != nil {
		return x.Status
	}
	return CalculateResponse_REJECTED
}

func (x *CalculateResponse) GetCalculation() *OrderCalculation {
	if x != nil {
		return x.Calculation
	}
	return nil
}

func (x *CalculateResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *CalculateResponse) GetHappenedAt() int64 {
	if x != nil {
		return x.HappenedAt
	}
	return 0
}

func (x *CalculateResponse) GetExceptions() []*BasketException {
	if x != nil {
		return x.Exceptions
	}
	return nil
}

type ReleaseOrderResponse_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    ReleaseOrderResponse_Error_ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=ordering.ReleaseOrderResponse_Error_ErrorCode" json:"code,omitempty"`
	Message string                               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ReleaseOrderResponse_Error) Reset() {
	*x = ReleaseOrderResponse_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseOrderResponse_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseOrderResponse_Error) ProtoMessage() {}

func (x *ReleaseOrderResponse_Error) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseOrderResponse_Error.ProtoReflect.Descriptor instead.
func (*ReleaseOrderResponse_Error) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ReleaseOrderResponse_Error) GetCode() ReleaseOrderResponse_Error_ErrorCode {
	if x != nil {
		return x.Code
	}
	return ReleaseOrderResponse_Error_ERROR_UNKNOWN
}

func (x *ReleaseOrderResponse_Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// The final price the customer should pay for the items
type OrderCalculation_Totals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncTax int32 `protobuf:"varint,1,opt,name=inc_tax,json=incTax,proto3" json:"inc_tax,omitempty"`
	Tax    int32 `protobuf:"varint,2,opt,name=tax,proto3" json:"tax,omitempty"`
}

func (x *OrderCalculation_Totals) Reset() {
	*x = OrderCalculation_Totals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCalculation_Totals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCalculation_Totals) ProtoMessage() {}

func (x *OrderCalculation_Totals) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCalculation_Totals.ProtoReflect.Descriptor instead.
func (*OrderCalculation_Totals) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{26, 0}
}

func (x *OrderCalculation_Totals) GetIncTax() int32 {
	if x != nil {
		return x.IncTax
	}
	return 0
}

func (x *OrderCalculation_Totals) GetTax() int32 {
	if x != nil {
		return x.Tax
	}
	return 0
}

// Taxes that are applicable to the items
type OrderCalculation_Tax struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Amount      int32  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *OrderCalculation_Tax) Reset() {
	*x = OrderCalculation_Tax{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCalculation_Tax) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCalculation_Tax) ProtoMessage() {}

func (x *OrderCalculation_Tax) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCalculation_Tax.ProtoReflect.Descriptor instead.
func (*OrderCalculation_Tax) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{26, 1}
}

func (x *OrderCalculation_Tax) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OrderCalculation_Tax) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// Any savings that are applied for the combination of items
type OrderCalculation_Saving struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Amount      int32  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *OrderCalculation_Saving) Reset() {
	*x = OrderCalculation_Saving{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_ordering_ordering_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCalculation_Saving) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCalculation_Saving) ProtoMessage() {}

func (x *OrderCalculation_Saving) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_ordering_ordering_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCalculation_Saving.ProtoReflect.Descriptor instead.
func (*OrderCalculation_Saving) Descriptor() ([]byte, []int) {
	return file_monolith_ordering_ordering_proto_rawDescGZIP(), []int{26, 2}
}

func (x *OrderCalculation_Saving) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OrderCalculation_Saving) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

var File_monolith_ordering_ordering_proto protoreflect.FileDescriptor

var file_monolith_ordering_ordering_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x22, 0xa4, 0x01, 0x0a,
	0x13, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x3d, 0x0a, 0x1b, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x33,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0xcb, 0x03, 0x0a, 0x14, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x70, 0x70, 0x65,
	0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x61,
	0x70, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x1a, 0xf0, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x42, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x88, 0x01, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x11,
	0x0a, 0x0d, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f,
	0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x4d,
	0x41, 0x4c, 0x46, 0x4f, 0x52, 0x4d, 0x45, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x44, 0x4f, 0x45,
	0x53, 0x4e, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0x05, 0x22, 0x24, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10,
	0x01, 0x22, 0xbb, 0x01, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x0d, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x49, 0x6e,
	0x43, 0x61, 0x72, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x2c, 0x0a, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x22,
	0x53, 0x0a, 0x0f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x22, 0x39, 0x0a, 0x0c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x63, 0x5f, 0x74, 0x61, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x6e, 0x63, 0x54, 0x61, 0x78, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x61, 0x78, 0x22,
	0xdc, 0x02, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2d,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa8, 0x01,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x52, 0x45, 0x45, 0x5f, 0x49,
	0x54, 0x45, 0x4d, 0x5f, 0x4d, 0x49, 0x4e, 0x5f, 0x42, 0x41, 0x53, 0x4b, 0x45, 0x54, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x46, 0x52, 0x45, 0x45, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x10, 0x01, 0x12,
	0x18, 0x0a, 0x14, 0x42, 0x55, 0x59, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x4f,
	0x4e, 0x45, 0x5f, 0x46, 0x52, 0x45, 0x45, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x45, 0x52,
	0x43, 0x45, 0x4e, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x5f, 0x43, 0x41, 0x52, 0x44,
	0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x05, 0x12, 0x10, 0x0a,
	0x0c, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x06, 0x12,
	0x17, 0x0a, 0x13, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x44, 0x49,
	0x53, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x07, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0x36,
	0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0x2d, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x86, 0x02, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6c, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x70, 0x6c, 0x75, 0x12, 0x2a, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x44, 0x0a, 0x1f, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x64, 0x49, 0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xdf,
	0x01, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x74, 0x72, 0x79, 0x22, 0x31, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4a, 0x45, 0x43,
	0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x22, 0x4a, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8e, 0x01, 0x0a,
	0x1e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x37, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x42, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xda, 0x06,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x79, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12,
	0x24, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x41, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x6e, 0x6f, 0x74,
	0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6b, 0x69, 0x74, 0x63, 0x68,
	0x65, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x3e, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x6e,
	0x75, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x1b, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x45, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x72, 0x61, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x65, 0x78, 0x74, 0x72, 0x61, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x1a,
	0x39, 0x0a, 0x0b, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc9, 0x03, 0x0a, 0x0e, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x74, 0x77, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x65, 0x54,
	0x77, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x37, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x73, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x78, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x72,
	0x65, 0x65, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x61, 0x73,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x41, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x61, 0x73, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x41, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x9c,
	0x01, 0x0a, 0x25, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x79, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x79, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x9c, 0x07,
	0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x79, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2e, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2e, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x12, 0x24, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41,
	0x74, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x6b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x4e, 0x6f, 0x74, 0x65,
	0x73, 0x12, 0x3d, 0x0a, 0x1b, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3e, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x6e, 0x75, 0x5f,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x36,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x4c, 0x0a, 0x06,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x42, 0x79, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x65, 0x78, 0x74, 0x72, 0x61, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65,
	0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6d, 0x0a, 0x0c,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x7e, 0x0a, 0x16, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xd1, 0x06, 0x0a, 0x0f,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x2e, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x37, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x09, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2b, 0x0a,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x6f, 0x74, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x5f,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6b, 0x69, 0x74,
	0x63, 0x68, 0x65, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x1b, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3e,
	0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52,
	0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3d,
	0x0a, 0x06, 0x65, 0x78, 0x74, 0x72, 0x61, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x65, 0x78, 0x74, 0x72, 0x61, 0x73, 0x12, 0x34, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x66,
	0x65, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x46, 0x65, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xb5, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x61, 0x78, 0x49, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x11, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4b, 0x0a,
	0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x44, 0x0a, 0x0d, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x50, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0xa3, 0x01, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x25, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x59, 0x10, 0x00, 0x12,
	0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x01, 0x22, 0xd1, 0x02, 0x0a, 0x10, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x35, 0x0a, 0x16, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x55,
	0x0a, 0x10, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x54, 0x0a, 0x0f, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x45, 0x4c, 0x49,
	0x56, 0x45, 0x52, 0x59, 0x5f, 0x42, 0x59, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x4e, 0x45, 0x52, 0x10,
	0x00, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x42, 0x59,
	0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x43,
	0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x22, 0xfa, 0x02, 0x0a, 0x10,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x39, 0x0a, 0x06, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x73, 0x52, 0x06, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x74,
	0x61, 0x78, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x61, 0x78, 0x52, 0x05, 0x74, 0x61, 0x78, 0x65,
	0x73, 0x12, 0x3b, 0x0a, 0x07, 0x73, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53,
	0x61, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x73, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x33,
	0x0a, 0x06, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x63, 0x5f,
	0x74, 0x61, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x6e, 0x63, 0x54, 0x61,
	0x78, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x74, 0x61, 0x78, 0x1a, 0x3f, 0x0a, 0x03, 0x54, 0x61, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x42, 0x0a, 0x06, 0x53, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xbc, 0x01, 0x0a, 0x0f, 0x42, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x45, 0x78,
	0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x45, 0x78,
	0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6c, 0x75, 0x73, 0x22, 0x4c, 0x0a, 0x15, 0x42, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x53, 0x54, 0x4f, 0x43, 0x4b, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f,
	0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x46,
	0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x03, 0x22, 0xb0, 0x02, 0x0a, 0x11, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1f,
	0x0a, 0x0b, 0x68, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x42,
	0x61, 0x73, 0x6b, 0x65, 0x74, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x1e, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x01, 0x2a, 0x23, 0x0a, 0x0d, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x43,
	0x41, 0x52, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x41, 0x53, 0x48, 0x10, 0x01, 0x2a,
	0xa9, 0x02, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x43, 0x4f,
	0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x55, 0x50, 0x10, 0x02, 0x12, 0x0a, 0x0a,
	0x06, 0x49, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x54,
	0x5f, 0x53, 0x55, 0x52, 0x45, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x53,
	0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x45,
	0x4e, 0x55, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x41,
	0x4c, 0x46, 0x4f, 0x52, 0x4d, 0x45, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10,
	0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x43, 0x4c, 0x4f, 0x53,
	0x45, 0x44, 0x10, 0x09, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x0a, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43,
	0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x10, 0x0b, 0x12, 0x14,
	0x0a, 0x10, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x0c, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x55, 0x4e, 0x41,
	0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x0d, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x54,
	0x45, 0x4d, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x0e, 0x12, 0x0b,
	0x0a, 0x07, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x0f, 0x32, 0x8c, 0x08, 0x0a, 0x0b,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x13, 0x53,
	0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a,
	0x14, 0x41, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x03, 0x88, 0x02, 0x01, 0x12, 0x51, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x20, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x1b, 0x53, 0x65, 0x6e, 0x64,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x79, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x1c, 0x41, 0x6d,
	0x65, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x79, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x79,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x88,
	0x02, 0x01, 0x12, 0x61, 0x0a, 0x1c, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x42, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x28, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x1a, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x2f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x79, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a,
	0x1b, 0x41, 0x6d, 0x65, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x79,
	0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2f, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x42, 0x79, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x88, 0x02, 0x01, 0x12, 0x67, 0x0a, 0x1b, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x79, 0x50, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2f, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x79,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x14, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x61, 0x78, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x67, 0x0a, 0x12, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x51, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x8d, 0x01, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x42, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x66, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0xa2, 0x02, 0x03, 0x4f, 0x58, 0x58, 0xaa, 0x02, 0x08, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0xca, 0x02, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0xe2, 0x02, 0x14, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_monolith_ordering_ordering_proto_rawDescOnce sync.Once
	file_monolith_ordering_ordering_proto_rawDescData = file_monolith_ordering_ordering_proto_rawDesc
)

func file_monolith_ordering_ordering_proto_rawDescGZIP() []byte {
	file_monolith_ordering_ordering_proto_rawDescOnce.Do(func() {
		file_monolith_ordering_ordering_proto_rawDescData = protoimpl.X.CompressGZIP(file_monolith_ordering_ordering_proto_rawDescData)
	})
	return file_monolith_ordering_ordering_proto_rawDescData
}

var file_monolith_ordering_ordering_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_monolith_ordering_ordering_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_monolith_ordering_ordering_proto_goTypes = []interface{}{
	(PaymentMethod)(0),                            // 0: ordering.PaymentMethod
	(ErrorCode)(0),                                // 1: ordering.ErrorCode
	(ReleaseOrderResponse_Status)(0),              // 2: ordering.ReleaseOrderResponse.Status
	(ReleaseOrderResponse_Error_ErrorCode)(0),     // 3: ordering.ReleaseOrderResponse.Error.ErrorCode
	(Promotions_Type)(0),                          // 4: ordering.Promotions.Type
	(OrderResponse_Status)(0),                     // 5: ordering.OrderResponse.Status
	(HealthResponse_HealthStatus)(0),              // 6: ordering.HealthResponse.HealthStatus
	(CalculateRequest_FulfillmentType)(0),         // 7: ordering.CalculateRequest.FulfillmentType
	(BasketException_BasketExceptionReason)(0),    // 8: ordering.BasketException.BasketExceptionReason
	(CalculateResponse_Status)(0),                 // 9: ordering.CalculateResponse.Status
	(*ReleaseOrderRequest)(nil),                   // 10: ordering.ReleaseOrderRequest
	(*ReleaseOrderResponse)(nil),                  // 11: ordering.ReleaseOrderResponse
	(*PaymentInformation)(nil),                    // 12: ordering.PaymentInformation
	(*PriceAdjustment)(nil),                       // 13: ordering.PriceAdjustment
	(*PriceDetails)(nil),                          // 14: ordering.PriceDetails
	(*Promotions)(nil),                            // 15: ordering.Promotions
	(*Location)(nil),                              // 16: ordering.Location
	(*Channel)(nil),                               // 17: ordering.Channel
	(*Item)(nil),                                  // 18: ordering.Item
	(*OrderResponse)(nil),                         // 19: ordering.OrderResponse
	(*Error)(nil),                                 // 20: ordering.Error
	(*DeliveryByOperatorOrderRequest)(nil),        // 21: ordering.DeliveryByOperatorOrderRequest
	(*DeliveryByOperatorOrder)(nil),               // 22: ordering.DeliveryByOperatorOrder
	(*DeliveryDetail)(nil),                        // 23: ordering.DeliveryDetail
	(*Coordinates)(nil),                           // 24: ordering.Coordinates
	(*DeliveryByDeliveryPartnerOrderRequest)(nil), // 25: ordering.DeliveryByDeliveryPartnerOrderRequest
	(*DeliveryByDeliveryPartnerOrder)(nil),        // 26: ordering.DeliveryByDeliveryPartnerOrder
	(*DriverDetail)(nil),                          // 27: ordering.DriverDetail
	(*CollectionOrderRequest)(nil),                // 28: ordering.CollectionOrderRequest
	(*CollectionOrder)(nil),                       // 29: ordering.CollectionOrder
	(*CollectorDetail)(nil),                       // 30: ordering.CollectorDetail
	(*IntegrationConfig)(nil),                     // 31: ordering.IntegrationConfig
	(*HealthRequest)(nil),                         // 32: ordering.HealthRequest
	(*HealthError)(nil),                           // 33: ordering.HealthError
	(*HealthResponse)(nil),                        // 34: ordering.HealthResponse
	(*CalculateRequest)(nil),                      // 35: ordering.CalculateRequest
	(*OrderCalculation)(nil),                      // 36: ordering.OrderCalculation
	(*BasketException)(nil),                       // 37: ordering.BasketException
	(*CalculateResponse)(nil),                     // 38: ordering.CalculateResponse
	(*ReleaseOrderResponse_Error)(nil),            // 39: ordering.ReleaseOrderResponse.Error
	nil,                                           // 40: ordering.DeliveryByOperatorOrder.ExtrasEntry
	nil,                                           // 41: ordering.DeliveryByDeliveryPartnerOrder.ExtrasEntry
	nil,                                           // 42: ordering.CollectionOrder.ExtrasEntry
	nil,                                           // 43: ordering.IntegrationConfig.ParametersEntry
	(*OrderCalculation_Totals)(nil),               // 44: ordering.OrderCalculation.Totals
	(*OrderCalculation_Tax)(nil),                  // 45: ordering.OrderCalculation.Tax
	(*OrderCalculation_Saving)(nil),               // 46: ordering.OrderCalculation.Saving
}
var file_monolith_ordering_ordering_proto_depIdxs = []int32{
	31, // 0: ordering.ReleaseOrderRequest.config:type_name -> ordering.IntegrationConfig
	2,  // 1: ordering.ReleaseOrderResponse.status:type_name -> ordering.ReleaseOrderResponse.Status
	39, // 2: ordering.ReleaseOrderResponse.error:type_name -> ordering.ReleaseOrderResponse.Error
	14, // 3: ordering.PaymentInformation.items_in_cart:type_name -> ordering.PriceDetails
	13, // 4: ordering.PaymentInformation.adjustments:type_name -> ordering.PriceAdjustment
	14, // 5: ordering.PaymentInformation.final:type_name -> ordering.PriceDetails
	14, // 6: ordering.PriceAdjustment.price:type_name -> ordering.PriceDetails
	4,  // 7: ordering.Promotions.type:type_name -> ordering.Promotions.Type
	18, // 8: ordering.Promotions.items:type_name -> ordering.Item
	18, // 9: ordering.Item.children:type_name -> ordering.Item
	5,  // 10: ordering.OrderResponse.status:type_name -> ordering.OrderResponse.Status
	20, // 11: ordering.OrderResponse.error:type_name -> ordering.Error
	1,  // 12: ordering.Error.code:type_name -> ordering.ErrorCode
	22, // 13: ordering.DeliveryByOperatorOrderRequest.order:type_name -> ordering.DeliveryByOperatorOrder
	31, // 14: ordering.DeliveryByOperatorOrderRequest.config:type_name -> ordering.IntegrationConfig
	16, // 15: ordering.DeliveryByOperatorOrder.location:type_name -> ordering.Location
	23, // 16: ordering.DeliveryByOperatorOrder.delivery:type_name -> ordering.DeliveryDetail
	18, // 17: ordering.DeliveryByOperatorOrder.items:type_name -> ordering.Item
	17, // 18: ordering.DeliveryByOperatorOrder.channel:type_name -> ordering.Channel
	0,  // 19: ordering.DeliveryByOperatorOrder.payment_method:type_name -> ordering.PaymentMethod
	12, // 20: ordering.DeliveryByOperatorOrder.payment:type_name -> ordering.PaymentInformation
	40, // 21: ordering.DeliveryByOperatorOrder.extras:type_name -> ordering.DeliveryByOperatorOrder.ExtrasEntry
	15, // 22: ordering.DeliveryByOperatorOrder.promotions:type_name -> ordering.Promotions
	24, // 23: ordering.DeliveryDetail.coordinates:type_name -> ordering.Coordinates
	26, // 24: ordering.DeliveryByDeliveryPartnerOrderRequest.order:type_name -> ordering.DeliveryByDeliveryPartnerOrder
	31, // 25: ordering.DeliveryByDeliveryPartnerOrderRequest.config:type_name -> ordering.IntegrationConfig
	16, // 26: ordering.DeliveryByDeliveryPartnerOrder.location:type_name -> ordering.Location
	27, // 27: ordering.DeliveryByDeliveryPartnerOrder.driver:type_name -> ordering.DriverDetail
	18, // 28: ordering.DeliveryByDeliveryPartnerOrder.items:type_name -> ordering.Item
	17, // 29: ordering.DeliveryByDeliveryPartnerOrder.channel:type_name -> ordering.Channel
	0,  // 30: ordering.DeliveryByDeliveryPartnerOrder.payment_method:type_name -> ordering.PaymentMethod
	12, // 31: ordering.DeliveryByDeliveryPartnerOrder.payment:type_name -> ordering.PaymentInformation
	23, // 32: ordering.DeliveryByDeliveryPartnerOrder.delivery:type_name -> ordering.DeliveryDetail
	41, // 33: ordering.DeliveryByDeliveryPartnerOrder.extras:type_name -> ordering.DeliveryByDeliveryPartnerOrder.ExtrasEntry
	15, // 34: ordering.DeliveryByDeliveryPartnerOrder.promotions:type_name -> ordering.Promotions
	29, // 35: ordering.CollectionOrderRequest.order:type_name -> ordering.CollectionOrder
	31, // 36: ordering.CollectionOrderRequest.config:type_name -> ordering.IntegrationConfig
	16, // 37: ordering.CollectionOrder.location:type_name -> ordering.Location
	30, // 38: ordering.CollectionOrder.collector:type_name -> ordering.CollectorDetail
	18, // 39: ordering.CollectionOrder.items:type_name -> ordering.Item
	17, // 40: ordering.CollectionOrder.channel:type_name -> ordering.Channel
	0,  // 41: ordering.CollectionOrder.payment_method:type_name -> ordering.PaymentMethod
	12, // 42: ordering.CollectionOrder.payment:type_name -> ordering.PaymentInformation
	42, // 43: ordering.CollectionOrder.extras:type_name -> ordering.CollectionOrder.ExtrasEntry
	15, // 44: ordering.CollectionOrder.promotions:type_name -> ordering.Promotions
	43, // 45: ordering.IntegrationConfig.parameters:type_name -> ordering.IntegrationConfig.ParametersEntry
	31, // 46: ordering.HealthRequest.config:type_name -> ordering.IntegrationConfig
	1,  // 47: ordering.HealthError.code:type_name -> ordering.ErrorCode
	6,  // 48: ordering.HealthResponse.status:type_name -> ordering.HealthResponse.HealthStatus
	33, // 49: ordering.HealthResponse.error:type_name -> ordering.HealthError
	18, // 50: ordering.CalculateRequest.items:type_name -> ordering.Item
	31, // 51: ordering.CalculateRequest.config:type_name -> ordering.IntegrationConfig
	7,  // 52: ordering.CalculateRequest.fulfillment_type:type_name -> ordering.CalculateRequest.FulfillmentType
	44, // 53: ordering.OrderCalculation.totals:type_name -> ordering.OrderCalculation.Totals
	45, // 54: ordering.OrderCalculation.taxes:type_name -> ordering.OrderCalculation.Tax
	46, // 55: ordering.OrderCalculation.savings:type_name -> ordering.OrderCalculation.Saving
	8,  // 56: ordering.BasketException.reason:type_name -> ordering.BasketException.BasketExceptionReason
	9,  // 57: ordering.CalculateResponse.status:type_name -> ordering.CalculateResponse.Status
	36, // 58: ordering.CalculateResponse.calculation:type_name -> ordering.OrderCalculation
	20, // 59: ordering.CalculateResponse.error:type_name -> ordering.Error
	37, // 60: ordering.CalculateResponse.exceptions:type_name -> ordering.BasketException
	3,  // 61: ordering.ReleaseOrderResponse.Error.code:type_name -> ordering.ReleaseOrderResponse.Error.ErrorCode
	28, // 62: ordering.OrderSender.SendCollectionOrder:input_type -> ordering.CollectionOrderRequest
	28, // 63: ordering.OrderSender.AmendCollectionOrder:input_type -> ordering.CollectionOrderRequest
	28, // 64: ordering.OrderSender.FinalCollectionOrder:input_type -> ordering.CollectionOrderRequest
	21, // 65: ordering.OrderSender.SendDeliveryByOperatorOrder:input_type -> ordering.DeliveryByOperatorOrderRequest
	21, // 66: ordering.OrderSender.AmendDeliveryByOperatorOrder:input_type -> ordering.DeliveryByOperatorOrderRequest
	21, // 67: ordering.OrderSender.FinalDeliveryByOperatorOrder:input_type -> ordering.DeliveryByOperatorOrderRequest
	25, // 68: ordering.OrderSender.SendDeliveryByPartnerOrder:input_type -> ordering.DeliveryByDeliveryPartnerOrderRequest
	25, // 69: ordering.OrderSender.AmendDeliveryByPartnerOrder:input_type -> ordering.DeliveryByDeliveryPartnerOrderRequest
	25, // 70: ordering.OrderSender.FinalDeliveryByPartnerOrder:input_type -> ordering.DeliveryByDeliveryPartnerOrderRequest
	32, // 71: ordering.OrderSender.OrderingHealth:input_type -> ordering.HealthRequest
	35, // 72: ordering.OrderSender.CalculateTaxAndTotal:input_type -> ordering.CalculateRequest
	10, // 73: ordering.ReleaseOrderSender.SendReleaseOrder:input_type -> ordering.ReleaseOrderRequest
	19, // 74: ordering.OrderSender.SendCollectionOrder:output_type -> ordering.OrderResponse
	19, // 75: ordering.OrderSender.AmendCollectionOrder:output_type -> ordering.OrderResponse
	19, // 76: ordering.OrderSender.FinalCollectionOrder:output_type -> ordering.OrderResponse
	19, // 77: ordering.OrderSender.SendDeliveryByOperatorOrder:output_type -> ordering.OrderResponse
	19, // 78: ordering.OrderSender.AmendDeliveryByOperatorOrder:output_type -> ordering.OrderResponse
	19, // 79: ordering.OrderSender.FinalDeliveryByOperatorOrder:output_type -> ordering.OrderResponse
	19, // 80: ordering.OrderSender.SendDeliveryByPartnerOrder:output_type -> ordering.OrderResponse
	19, // 81: ordering.OrderSender.AmendDeliveryByPartnerOrder:output_type -> ordering.OrderResponse
	19, // 82: ordering.OrderSender.FinalDeliveryByPartnerOrder:output_type -> ordering.OrderResponse
	34, // 83: ordering.OrderSender.OrderingHealth:output_type -> ordering.HealthResponse
	38, // 84: ordering.OrderSender.CalculateTaxAndTotal:output_type -> ordering.CalculateResponse
	11, // 85: ordering.ReleaseOrderSender.SendReleaseOrder:output_type -> ordering.ReleaseOrderResponse
	74, // [74:86] is the sub-list for method output_type
	62, // [62:74] is the sub-list for method input_type
	62, // [62:62] is the sub-list for extension type_name
	62, // [62:62] is the sub-list for extension extendee
	0,  // [0:62] is the sub-list for field type_name
}

func init() { file_monolith_ordering_ordering_proto_init() }
func file_monolith_ordering_ordering_proto_init() {
	if File_monolith_ordering_ordering_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_monolith_ordering_ordering_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceAdjustment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Promotions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Channel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryByOperatorOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryByOperatorOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coordinates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryByDeliveryPartnerOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryByDeliveryPartnerOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectorDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCalculation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasketException); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseOrderResponse_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCalculation_Totals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCalculation_Tax); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_ordering_ordering_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCalculation_Saving); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_monolith_ordering_ordering_proto_rawDesc,
			NumEnums:      10,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_monolith_ordering_ordering_proto_goTypes,
		DependencyIndexes: file_monolith_ordering_ordering_proto_depIdxs,
		EnumInfos:         file_monolith_ordering_ordering_proto_enumTypes,
		MessageInfos:      file_monolith_ordering_ordering_proto_msgTypes,
	}.Build()
	File_monolith_ordering_ordering_proto = out.File
	file_monolith_ordering_ordering_proto_rawDesc = nil
	file_monolith_ordering_ordering_proto_goTypes = nil
	file_monolith_ordering_ordering_proto_depIdxs = nil
}
