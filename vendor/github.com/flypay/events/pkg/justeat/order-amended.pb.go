// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: justeat/order-amended.proto

package justeat

import (
	_ "github.com/flypay/events/pkg/flyt"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// OutOfStockOrderAdjusted is based on
// https://github.je-labs.com/cogopsorder/OutOfStockOrderItems/blob/master/src/OutOfStockOrderItems.Infrastructure/Messages/OutOfStockOrderAdjusted.cs
type OutOfStockOrderAdjusted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId         string            `protobuf:"bytes,1,opt,name=order_id,json=OrderId,proto3" json:"order_id,omitempty"`
	ItemsOutOfStock []*OutOfStockItem `protobuf:"bytes,2,rep,name=items_out_of_stock,json=ItemsOutOfStock,proto3" json:"items_out_of_stock,omitempty"`
	Refund          *Refund           `protobuf:"bytes,3,opt,name=refund,json=Refund,proto3" json:"refund,omitempty"`
	CorrelationId   string            `protobuf:"bytes,4,opt,name=correlation_id,json=CorrelationId,proto3" json:"correlation_id,omitempty"`
	CausationId     string            `protobuf:"bytes,5,opt,name=causation_id,json=CausationId,proto3" json:"causation_id,omitempty"`
	Tenant          string            `protobuf:"bytes,6,opt,name=tenant,json=Tenant,proto3" json:"tenant,omitempty"`
}

func (x *OutOfStockOrderAdjusted) Reset() {
	*x = OutOfStockOrderAdjusted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_order_amended_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutOfStockOrderAdjusted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutOfStockOrderAdjusted) ProtoMessage() {}

func (x *OutOfStockOrderAdjusted) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_order_amended_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutOfStockOrderAdjusted.ProtoReflect.Descriptor instead.
func (*OutOfStockOrderAdjusted) Descriptor() ([]byte, []int) {
	return file_justeat_order_amended_proto_rawDescGZIP(), []int{0}
}

func (x *OutOfStockOrderAdjusted) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OutOfStockOrderAdjusted) GetItemsOutOfStock() []*OutOfStockItem {
	if x != nil {
		return x.ItemsOutOfStock
	}
	return nil
}

func (x *OutOfStockOrderAdjusted) GetRefund() *Refund {
	if x != nil {
		return x.Refund
	}
	return nil
}

func (x *OutOfStockOrderAdjusted) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *OutOfStockOrderAdjusted) GetCausationId() string {
	if x != nil {
		return x.CausationId
	}
	return ""
}

func (x *OutOfStockOrderAdjusted) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

type OutOfStockItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId string `protobuf:"bytes,1,opt,name=item_id,json=ItemId,proto3" json:"item_id,omitempty"`
}

func (x *OutOfStockItem) Reset() {
	*x = OutOfStockItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_order_amended_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutOfStockItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutOfStockItem) ProtoMessage() {}

func (x *OutOfStockItem) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_order_amended_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutOfStockItem.ProtoReflect.Descriptor instead.
func (*OutOfStockItem) Descriptor() ([]byte, []int) {
	return file_justeat_order_amended_proto_rawDescGZIP(), []int{1}
}

func (x *OutOfStockItem) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

type Refund struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lines      []*RefundLine `protobuf:"bytes,1,rep,name=lines,json=Lines,proto3" json:"lines,omitempty"`
	ServiceFee *ServiceFee   `protobuf:"bytes,2,opt,name=service_fee,json=ServiceFee,proto3" json:"service_fee,omitempty"`
}

func (x *Refund) Reset() {
	*x = Refund{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_order_amended_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Refund) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Refund) ProtoMessage() {}

func (x *Refund) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_order_amended_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Refund.ProtoReflect.Descriptor instead.
func (*Refund) Descriptor() ([]byte, []int) {
	return file_justeat_order_amended_proto_rawDescGZIP(), []int{2}
}

func (x *Refund) GetLines() []*RefundLine {
	if x != nil {
		return x.Lines
	}
	return nil
}

func (x *Refund) GetServiceFee() *ServiceFee {
	if x != nil {
		return x.ServiceFee
	}
	return nil
}

type RefundLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalValue float32 `protobuf:"fixed32,1,opt,name=total_value,json=TotalValue,proto3" json:"total_value,omitempty"`
	SubType    string  `protobuf:"bytes,2,opt,name=sub_type,json=SubType,proto3" json:"sub_type,omitempty"`
	Type       string  `protobuf:"bytes,3,opt,name=type,json=Type,proto3" json:"type,omitempty"`
}

func (x *RefundLine) Reset() {
	*x = RefundLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_order_amended_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundLine) ProtoMessage() {}

func (x *RefundLine) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_order_amended_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundLine.ProtoReflect.Descriptor instead.
func (*RefundLine) Descriptor() ([]byte, []int) {
	return file_justeat_order_amended_proto_rawDescGZIP(), []int{3}
}

func (x *RefundLine) GetTotalValue() float32 {
	if x != nil {
		return x.TotalValue
	}
	return 0
}

func (x *RefundLine) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *RefundLine) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ServiceFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefundedAmount *ServiceFee_RefundedAmount `protobuf:"bytes,1,opt,name=refunded_amount,json=RefundedAmount,proto3" json:"refunded_amount,omitempty"`
	UpdatedAmount  *ServiceFee_UpdatedAmount  `protobuf:"bytes,2,opt,name=updated_amount,json=UpdatedAmount,proto3" json:"updated_amount,omitempty"`
}

func (x *ServiceFee) Reset() {
	*x = ServiceFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_order_amended_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceFee) ProtoMessage() {}

func (x *ServiceFee) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_order_amended_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceFee.ProtoReflect.Descriptor instead.
func (*ServiceFee) Descriptor() ([]byte, []int) {
	return file_justeat_order_amended_proto_rawDescGZIP(), []int{4}
}

func (x *ServiceFee) GetRefundedAmount() *ServiceFee_RefundedAmount {
	if x != nil {
		return x.RefundedAmount
	}
	return nil
}

func (x *ServiceFee) GetUpdatedAmount() *ServiceFee_UpdatedAmount {
	if x != nil {
		return x.UpdatedAmount
	}
	return nil
}

// OrderItemsModificationApproved is based on
// https://github.je-labs.com/messaging-integrations/MessageExchange/blob/master/spec/schemas/OrderItemsModificationApproved-schema.yaml
type OrderItemsModificationApproved struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                                `protobuf:"bytes,1,opt,name=id,json=Id,proto3" json:"id,omitempty"`
	OrderId       string                                `protobuf:"bytes,2,opt,name=order_id,json=OrderId,proto3" json:"order_id,omitempty"`
	RestaurantId  string                                `protobuf:"bytes,3,opt,name=restaurant_id,json=RestaurantId,proto3" json:"restaurant_id,omitempty"`
	Tenant        string                                `protobuf:"bytes,4,opt,name=tenant,json=Tenant,proto3" json:"tenant,omitempty"`
	TotalPrice    float32                               `protobuf:"fixed32,5,opt,name=total_price,json=TotalPrice,proto3" json:"total_price,omitempty"`
	Currency      string                                `protobuf:"bytes,6,opt,name=currency,json=Currency,proto3" json:"currency,omitempty"`
	Refund        *OrderItemsModificationApprovedRefund `protobuf:"bytes,7,opt,name=refund,json=Refund,proto3" json:"refund,omitempty"`
	Items         []*AmendOrderItem                     `protobuf:"bytes,8,rep,name=items,json=Items,proto3" json:"items,omitempty"`
	CorrelationId string                                `protobuf:"bytes,9,opt,name=correlation_id,json=CorrelationId,proto3" json:"correlation_id,omitempty"`
}

func (x *OrderItemsModificationApproved) Reset() {
	*x = OrderItemsModificationApproved{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_order_amended_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderItemsModificationApproved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderItemsModificationApproved) ProtoMessage() {}

func (x *OrderItemsModificationApproved) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_order_amended_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderItemsModificationApproved.ProtoReflect.Descriptor instead.
func (*OrderItemsModificationApproved) Descriptor() ([]byte, []int) {
	return file_justeat_order_amended_proto_rawDescGZIP(), []int{5}
}

func (x *OrderItemsModificationApproved) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderItemsModificationApproved) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderItemsModificationApproved) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *OrderItemsModificationApproved) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *OrderItemsModificationApproved) GetTotalPrice() float32 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *OrderItemsModificationApproved) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *OrderItemsModificationApproved) GetRefund() *OrderItemsModificationApprovedRefund {
	if x != nil {
		return x.Refund
	}
	return nil
}

func (x *OrderItemsModificationApproved) GetItems() []*AmendOrderItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *OrderItemsModificationApproved) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

type OrderItemsModificationApprovedRefund struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestedRefundAmount float32                                     `protobuf:"fixed32,1,opt,name=requested_refund_amount,json=RequestedRefundAmount,proto3" json:"requested_refund_amount,omitempty"`
	UpdatedTotalAmount    float32                                     `protobuf:"fixed32,2,opt,name=updated_total_amount,json=UpdatedTotalAmount,proto3" json:"updated_total_amount,omitempty"`
	CausationId           string                                      `protobuf:"bytes,3,opt,name=causation_id,json=CausationId,proto3" json:"causation_id,omitempty"`
	Lines                 []*OrderItemsModificationApprovedRefundLine `protobuf:"bytes,4,rep,name=lines,json=Lines,proto3" json:"lines,omitempty"`
	ServiceFee            *OrderItemsModificationApprovedServiceFee   `protobuf:"bytes,5,opt,name=service_fee,json=ServiceFee,proto3" json:"service_fee,omitempty"`
	Deposit               *Deposit                                    `protobuf:"bytes,6,opt,name=deposit,json=Deposit,proto3" json:"deposit,omitempty"`
}

func (x *OrderItemsModificationApprovedRefund) Reset() {
	*x = OrderItemsModificationApprovedRefund{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_order_amended_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderItemsModificationApprovedRefund) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderItemsModificationApprovedRefund) ProtoMessage() {}

func (x *OrderItemsModificationApprovedRefund) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_order_amended_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderItemsModificationApprovedRefund.ProtoReflect.Descriptor instead.
func (*OrderItemsModificationApprovedRefund) Descriptor() ([]byte, []int) {
	return file_justeat_order_amended_proto_rawDescGZIP(), []int{6}
}

func (x *OrderItemsModificationApprovedRefund) GetRequestedRefundAmount() float32 {
	if x != nil {
		return x.RequestedRefundAmount
	}
	return 0
}

func (x *OrderItemsModificationApprovedRefund) GetUpdatedTotalAmount() float32 {
	if x != nil {
		return x.UpdatedTotalAmount
	}
	return 0
}

func (x *OrderItemsModificationApprovedRefund) GetCausationId() string {
	if x != nil {
		return x.CausationId
	}
	return ""
}

func (x *OrderItemsModificationApprovedRefund) GetLines() []*OrderItemsModificationApprovedRefundLine {
	if x != nil {
		return x.Lines
	}
	return nil
}

func (x *OrderItemsModificationApprovedRefund) GetServiceFee() *OrderItemsModificationApprovedServiceFee {
	if x != nil {
		return x.ServiceFee
	}
	return nil
}

func (x *OrderItemsModificationApprovedRefund) GetDeposit() *Deposit {
	if x != nil {
		return x.Deposit
	}
	return nil
}

type OrderItemsModificationApprovedRefundLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalValue         float32 `protobuf:"fixed32,1,opt,name=total_value,json=TotalValue,proto3" json:"total_value,omitempty"`
	UpdatedTotalAmount float32 `protobuf:"fixed32,2,opt,name=updated_total_amount,json=UpdatedTotalAmount,proto3" json:"updated_total_amount,omitempty"`
	SubType            string  `protobuf:"bytes,3,opt,name=sub_type,json=SubType,proto3" json:"sub_type,omitempty"`
	Type               string  `protobuf:"bytes,4,opt,name=type,json=Type,proto3" json:"type,omitempty"`
	UpdatedValue       float32 `protobuf:"fixed32,5,opt,name=updated_value,json=UpdatedValue,proto3" json:"updated_value,omitempty"`
	UpdatedServiceFee  float32 `protobuf:"fixed32,6,opt,name=updated_service_fee,json=UpdatedServiceFee,proto3" json:"updated_service_fee,omitempty"`
}

func (x *OrderItemsModificationApprovedRefundLine) Reset() {
	*x = OrderItemsModificationApprovedRefundLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_order_amended_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderItemsModificationApprovedRefundLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderItemsModificationApprovedRefundLine) ProtoMessage() {}

func (x *OrderItemsModificationApprovedRefundLine) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_order_amended_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderItemsModificationApprovedRefundLine.ProtoReflect.Descriptor instead.
func (*OrderItemsModificationApprovedRefundLine) Descriptor() ([]byte, []int) {
	return file_justeat_order_amended_proto_rawDescGZIP(), []int{7}
}

func (x *OrderItemsModificationApprovedRefundLine) GetTotalValue() float32 {
	if x != nil {
		return x.TotalValue
	}
	return 0
}

func (x *OrderItemsModificationApprovedRefundLine) GetUpdatedTotalAmount() float32 {
	if x != nil {
		return x.UpdatedTotalAmount
	}
	return 0
}

func (x *OrderItemsModificationApprovedRefundLine) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *OrderItemsModificationApprovedRefundLine) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OrderItemsModificationApprovedRefundLine) GetUpdatedValue() float32 {
	if x != nil {
		return x.UpdatedValue
	}
	return 0
}

func (x *OrderItemsModificationApprovedRefundLine) GetUpdatedServiceFee() float32 {
	if x != nil {
		return x.UpdatedServiceFee
	}
	return 0
}

type OrderItemsModificationApprovedServiceFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefundedAmount float32 `protobuf:"fixed32,1,opt,name=refunded_amount,json=RefundedAmount,proto3" json:"refunded_amount,omitempty"`
	UpdatedAmount  float32 `protobuf:"fixed32,2,opt,name=updated_amount,json=UpdatedAmount,proto3" json:"updated_amount,omitempty"`
}

func (x *OrderItemsModificationApprovedServiceFee) Reset() {
	*x = OrderItemsModificationApprovedServiceFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_order_amended_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderItemsModificationApprovedServiceFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderItemsModificationApprovedServiceFee) ProtoMessage() {}

func (x *OrderItemsModificationApprovedServiceFee) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_order_amended_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderItemsModificationApprovedServiceFee.ProtoReflect.Descriptor instead.
func (*OrderItemsModificationApprovedServiceFee) Descriptor() ([]byte, []int) {
	return file_justeat_order_amended_proto_rawDescGZIP(), []int{8}
}

func (x *OrderItemsModificationApprovedServiceFee) GetRefundedAmount() float32 {
	if x != nil {
		return x.RefundedAmount
	}
	return 0
}

func (x *OrderItemsModificationApprovedServiceFee) GetUpdatedAmount() float32 {
	if x != nil {
		return x.UpdatedAmount
	}
	return 0
}

type Deposit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefundedAmount float32 `protobuf:"fixed32,1,opt,name=refunded_amount,json=RefundedAmount,proto3" json:"refunded_amount,omitempty"`
	UpdatedAmount  float32 `protobuf:"fixed32,2,opt,name=updated_amount,json=UpdatedAmount,proto3" json:"updated_amount,omitempty"`
}

func (x *Deposit) Reset() {
	*x = Deposit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_order_amended_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deposit) ProtoMessage() {}

func (x *Deposit) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_order_amended_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deposit.ProtoReflect.Descriptor instead.
func (*Deposit) Descriptor() ([]byte, []int) {
	return file_justeat_order_amended_proto_rawDescGZIP(), []int{9}
}

func (x *Deposit) GetRefundedAmount() float32 {
	if x != nil {
		return x.RefundedAmount
	}
	return 0
}

func (x *Deposit) GetUpdatedAmount() float32 {
	if x != nil {
		return x.UpdatedAmount
	}
	return 0
}

type AmendOrderItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Removed *AmendOrderItem_RemovedItem `protobuf:"bytes,1,opt,name=removed,json=Removed,proto3" json:"removed,omitempty"`
	Added   []*AmendOrderItem_AddedItem `protobuf:"bytes,2,rep,name=added,json=Added,proto3" json:"added,omitempty"`
}

func (x *AmendOrderItem) Reset() {
	*x = AmendOrderItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_order_amended_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmendOrderItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmendOrderItem) ProtoMessage() {}

func (x *AmendOrderItem) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_order_amended_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmendOrderItem.ProtoReflect.Descriptor instead.
func (*AmendOrderItem) Descriptor() ([]byte, []int) {
	return file_justeat_order_amended_proto_rawDescGZIP(), []int{10}
}

func (x *AmendOrderItem) GetRemoved() *AmendOrderItem_RemovedItem {
	if x != nil {
		return x.Removed
	}
	return nil
}

func (x *AmendOrderItem) GetAdded() []*AmendOrderItem_AddedItem {
	if x != nil {
		return x.Added
	}
	return nil
}

// OrderRefundApproved is based on
// https://github.je-labs.com/cogopsorder/OutOfStockOrderItems/blob/master/src/OutOfStockOrderItems.Infrastructure/Messages/OrderRefundApproved.cs
type OrderRefundApproved struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId       string  `protobuf:"bytes,1,opt,name=order_id,json=OrderId,proto3" json:"order_id,omitempty"`
	Context       string  `protobuf:"bytes,2,opt,name=context,json=Context,proto3" json:"context,omitempty"`
	Type          string  `protobuf:"bytes,3,opt,name=type,json=Type,proto3" json:"type,omitempty"`
	RefundAmount  float32 `protobuf:"fixed32,4,opt,name=refund_amount,json=RefundAmount,proto3" json:"refund_amount,omitempty"`
	Reason        string  `protobuf:"bytes,5,opt,name=reason,json=Reason,proto3" json:"reason,omitempty"`
	RefundId      string  `protobuf:"bytes,6,opt,name=refund_id,json=RefundId,proto3" json:"refund_id,omitempty"`
	CorrelationId string  `protobuf:"bytes,7,opt,name=correlation_id,json=CorrelationId,proto3" json:"correlation_id,omitempty"`
	CausationId   string  `protobuf:"bytes,8,opt,name=causation_id,json=CausationId,proto3" json:"causation_id,omitempty"`
	Tenant        string  `protobuf:"bytes,9,opt,name=tenant,json=Tenant,proto3" json:"tenant,omitempty"`
}

func (x *OrderRefundApproved) Reset() {
	*x = OrderRefundApproved{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_order_amended_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRefundApproved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRefundApproved) ProtoMessage() {}

func (x *OrderRefundApproved) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_order_amended_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRefundApproved.ProtoReflect.Descriptor instead.
func (*OrderRefundApproved) Descriptor() ([]byte, []int) {
	return file_justeat_order_amended_proto_rawDescGZIP(), []int{11}
}

func (x *OrderRefundApproved) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderRefundApproved) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *OrderRefundApproved) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OrderRefundApproved) GetRefundAmount() float32 {
	if x != nil {
		return x.RefundAmount
	}
	return 0
}

func (x *OrderRefundApproved) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *OrderRefundApproved) GetRefundId() string {
	if x != nil {
		return x.RefundId
	}
	return ""
}

func (x *OrderRefundApproved) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *OrderRefundApproved) GetCausationId() string {
	if x != nil {
		return x.CausationId
	}
	return ""
}

func (x *OrderRefundApproved) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

// OrderRefundFailure is based on
// https://github.je-labs.com/PRS/PaymentsWorker/blob/master/src/PaymentsWorker/Features/Settlement/Refunding/Messages/OrderRefundFailure.cs
type OrderRefundFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefundId      string `protobuf:"bytes,1,opt,name=refund_id,json=RefundId,proto3" json:"refund_id,omitempty"`
	ErrorMessage  string `protobuf:"bytes,2,opt,name=error_message,json=ErrorMessage,proto3" json:"error_message,omitempty"`
	Type          string `protobuf:"bytes,3,opt,name=type,json=Type,proto3" json:"type,omitempty"`
	CorrelationId string `protobuf:"bytes,4,opt,name=correlation_id,json=CorrelationId,proto3" json:"correlation_id,omitempty"`
	CausationId   string `protobuf:"bytes,5,opt,name=causation_id,json=CausationId,proto3" json:"causation_id,omitempty"`
	OrderId       string `protobuf:"bytes,6,opt,name=order_id,json=OrderId,proto3" json:"order_id,omitempty"`
	Reason        string `protobuf:"bytes,7,opt,name=reason,json=Reason,proto3" json:"reason,omitempty"`
	Tenant        string `protobuf:"bytes,8,opt,name=tenant,json=Tenant,proto3" json:"tenant,omitempty"`
}

func (x *OrderRefundFailure) Reset() {
	*x = OrderRefundFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_order_amended_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRefundFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRefundFailure) ProtoMessage() {}

func (x *OrderRefundFailure) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_order_amended_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRefundFailure.ProtoReflect.Descriptor instead.
func (*OrderRefundFailure) Descriptor() ([]byte, []int) {
	return file_justeat_order_amended_proto_rawDescGZIP(), []int{12}
}

func (x *OrderRefundFailure) GetRefundId() string {
	if x != nil {
		return x.RefundId
	}
	return ""
}

func (x *OrderRefundFailure) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *OrderRefundFailure) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OrderRefundFailure) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *OrderRefundFailure) GetCausationId() string {
	if x != nil {
		return x.CausationId
	}
	return ""
}

func (x *OrderRefundFailure) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderRefundFailure) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *OrderRefundFailure) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

type ServiceFee_RefundedAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value       float32 `protobuf:"fixed32,1,opt,name=value,proto3" json:"value,omitempty"`
	Description string  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Format      string  `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
}

func (x *ServiceFee_RefundedAmount) Reset() {
	*x = ServiceFee_RefundedAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_order_amended_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceFee_RefundedAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceFee_RefundedAmount) ProtoMessage() {}

func (x *ServiceFee_RefundedAmount) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_order_amended_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceFee_RefundedAmount.ProtoReflect.Descriptor instead.
func (*ServiceFee_RefundedAmount) Descriptor() ([]byte, []int) {
	return file_justeat_order_amended_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ServiceFee_RefundedAmount) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *ServiceFee_RefundedAmount) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ServiceFee_RefundedAmount) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type ServiceFee_UpdatedAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value       float32 `protobuf:"fixed32,1,opt,name=value,proto3" json:"value,omitempty"`
	Description string  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Format      string  `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
}

func (x *ServiceFee_UpdatedAmount) Reset() {
	*x = ServiceFee_UpdatedAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_order_amended_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceFee_UpdatedAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceFee_UpdatedAmount) ProtoMessage() {}

func (x *ServiceFee_UpdatedAmount) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_order_amended_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceFee_UpdatedAmount.ProtoReflect.Descriptor instead.
func (*ServiceFee_UpdatedAmount) Descriptor() ([]byte, []int) {
	return file_justeat_order_amended_proto_rawDescGZIP(), []int{4, 1}
}

func (x *ServiceFee_UpdatedAmount) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *ServiceFee_UpdatedAmount) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ServiceFee_UpdatedAmount) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type AmendOrderItem_RemovedItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderItemId             string  `protobuf:"bytes,1,opt,name=order_item_id,json=OrderItemId,proto3" json:"order_item_id,omitempty"`
	Name                    string  `protobuf:"bytes,2,opt,name=name,json=Name,proto3" json:"name,omitempty"`
	TotalPrice              float32 `protobuf:"fixed32,3,opt,name=total_price,json=TotalPrice,proto3" json:"total_price,omitempty"`
	TotalMultiDiscountPrice float32 `protobuf:"fixed32,4,opt,name=total_multi_discount_price,json=TotalMultiDiscountPrice,proto3" json:"total_multi_discount_price,omitempty"`
	DepositAmount           float32 `protobuf:"fixed32,5,opt,name=deposit_amount,json=DepositAmount,proto3" json:"deposit_amount,omitempty"`
	DepositRefundAmount     float32 `protobuf:"fixed32,6,opt,name=deposit_refund_amount,json=DepositRefundAmount,proto3" json:"deposit_refund_amount,omitempty"`
	RefundAmount            float32 `protobuf:"fixed32,7,opt,name=refund_amount,json=RefundAmount,proto3" json:"refund_amount,omitempty"`
}

func (x *AmendOrderItem_RemovedItem) Reset() {
	*x = AmendOrderItem_RemovedItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_order_amended_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmendOrderItem_RemovedItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmendOrderItem_RemovedItem) ProtoMessage() {}

func (x *AmendOrderItem_RemovedItem) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_order_amended_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmendOrderItem_RemovedItem.ProtoReflect.Descriptor instead.
func (*AmendOrderItem_RemovedItem) Descriptor() ([]byte, []int) {
	return file_justeat_order_amended_proto_rawDescGZIP(), []int{10, 0}
}

func (x *AmendOrderItem_RemovedItem) GetOrderItemId() string {
	if x != nil {
		return x.OrderItemId
	}
	return ""
}

func (x *AmendOrderItem_RemovedItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AmendOrderItem_RemovedItem) GetTotalPrice() float32 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *AmendOrderItem_RemovedItem) GetTotalMultiDiscountPrice() float32 {
	if x != nil {
		return x.TotalMultiDiscountPrice
	}
	return 0
}

func (x *AmendOrderItem_RemovedItem) GetDepositAmount() float32 {
	if x != nil {
		return x.DepositAmount
	}
	return 0
}

func (x *AmendOrderItem_RemovedItem) GetDepositRefundAmount() float32 {
	if x != nil {
		return x.DepositRefundAmount
	}
	return 0
}

func (x *AmendOrderItem_RemovedItem) GetRefundAmount() float32 {
	if x != nil {
		return x.RefundAmount
	}
	return 0
}

type AmendOrderItem_AddedItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string  `protobuf:"bytes,1,opt,name=id,json=Id,proto3" json:"id,omitempty"`
	MenuVersionId       string  `protobuf:"bytes,2,opt,name=menu_version_id,json=MenuVersionId,proto3" json:"menu_version_id,omitempty"`
	MenuItemId          string  `protobuf:"bytes,3,opt,name=menu_item_id,json=MenuItemId,proto3" json:"menu_item_id,omitempty"`
	MenuItemVariationId string  `protobuf:"bytes,4,opt,name=menu_item_variation_id,json=MenuItemVariationId,proto3" json:"menu_item_variation_id,omitempty"`
	Name                string  `protobuf:"bytes,5,opt,name=name,json=Name,proto3" json:"name,omitempty"`
	Description         string  `protobuf:"bytes,6,opt,name=description,json=Description,proto3" json:"description,omitempty"`
	BasePrice           float32 `protobuf:"fixed32,7,opt,name=base_price,json=BasePrice,proto3" json:"base_price,omitempty"`
	DepositAmount       float32 `protobuf:"fixed32,8,opt,name=deposit_amount,json=DepositAmount,proto3" json:"deposit_amount,omitempty"`
}

func (x *AmendOrderItem_AddedItem) Reset() {
	*x = AmendOrderItem_AddedItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_order_amended_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmendOrderItem_AddedItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmendOrderItem_AddedItem) ProtoMessage() {}

func (x *AmendOrderItem_AddedItem) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_order_amended_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmendOrderItem_AddedItem.ProtoReflect.Descriptor instead.
func (*AmendOrderItem_AddedItem) Descriptor() ([]byte, []int) {
	return file_justeat_order_amended_proto_rawDescGZIP(), []int{10, 1}
}

func (x *AmendOrderItem_AddedItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AmendOrderItem_AddedItem) GetMenuVersionId() string {
	if x != nil {
		return x.MenuVersionId
	}
	return ""
}

func (x *AmendOrderItem_AddedItem) GetMenuItemId() string {
	if x != nil {
		return x.MenuItemId
	}
	return ""
}

func (x *AmendOrderItem_AddedItem) GetMenuItemVariationId() string {
	if x != nil {
		return x.MenuItemVariationId
	}
	return ""
}

func (x *AmendOrderItem_AddedItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AmendOrderItem_AddedItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AmendOrderItem_AddedItem) GetBasePrice() float32 {
	if x != nil {
		return x.BasePrice
	}
	return 0
}

func (x *AmendOrderItem_AddedItem) GetDepositAmount() float32 {
	if x != nil {
		return x.DepositAmount
	}
	return 0
}

var File_justeat_order_amended_proto protoreflect.FileDescriptor

var file_justeat_order_amended_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2d,
	0x61, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6a,
	0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x1a, 0x15, 0x66, 0x6c, 0x79, 0x74, 0x2f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6a,
	0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0, 0x02, 0x0a, 0x17, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x12, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61,
	0x74, 0x2e, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x0f, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x52, 0x06, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f,
	0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x75, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x61, 0x75, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x3a, 0x49, 0x82, 0xb5,
	0x18, 0x23, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x6f, 0x75, 0x74, 0x2e, 0x6f, 0x66,
	0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6a,
	0x75, 0x73, 0x74, 0x65, 0x64, 0xa2, 0xbb, 0x18, 0x17, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x64,
	0xaa, 0xbb, 0x18, 0x03, 0x61, 0x6c, 0x6c, 0x22, 0x29, 0x0a, 0x0e, 0x4f, 0x75, 0x74, 0x4f, 0x66,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x22, 0x69, 0x0a, 0x06, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x29, 0x0a, 0x05,
	0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6a, 0x75,
	0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65,
	0x52, 0x05, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6a,
	0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65,
	0x65, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x22, 0x5c, 0x0a,
	0x0a, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0xe6, 0x02, 0x0a, 0x0a,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x12, 0x4b, 0x0a, 0x0f, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x46, 0x65, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x1a, 0x60, 0x0a, 0x0e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x1a, 0x5f, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x22, 0xba, 0x03, 0x0a, 0x1e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x45, 0x0a, 0x06,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6a,
	0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x64, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x06, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x41, 0x6d, 0x65,
	0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x6f, 0x72, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x3a, 0x56, 0x82, 0xb5, 0x18, 0x29, 0x6a,
	0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0xa2, 0xbb, 0x18, 0x1e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0xaa, 0xbb, 0x18, 0x03, 0x61, 0x6c,
	0x6c, 0x22, 0xfc, 0x02, 0x0a, 0x24, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x15, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x75, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x61, 0x75, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x05, 0x4c, 0x69, 0x6e, 0x65, 0x73,
	0x12, 0x52, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x46, 0x65, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x07, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x22, 0x81, 0x02, 0x0a, 0x28, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x30,
	0x0a, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x46, 0x65, 0x65, 0x22, 0x7a, 0x0a, 0x28, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x59, 0x0a, 0x07, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc7, 0x05, 0x0a, 0x0e,
	0x41, 0x6d, 0x65, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3d,
	0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x41, 0x6d, 0x65, 0x6e, 0x64, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x37, 0x0a,
	0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6a,
	0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x41, 0x6d, 0x65, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x41, 0x64, 0x64, 0x65, 0x64, 0x1a, 0xa3, 0x02, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x3b, 0x0a, 0x1a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x17, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x13, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x96, 0x02, 0x0a,
	0x09, 0x41, 0x64, 0x64, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x65,
	0x6e, 0x75, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x4d, 0x65, 0x6e, 0x75, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xdb, 0x02, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x75, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43,
	0x61, 0x75, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x3a, 0x3f, 0x82, 0xb5, 0x18, 0x1d, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x64, 0xa2, 0xbb, 0x18, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0xaa, 0xbb, 0x18, 0x03,
	0x61, 0x6c, 0x6c, 0x22, 0xbe, 0x02, 0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x75, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43,
	0x61, 0x75, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x3a, 0x3d, 0x82, 0xb5, 0x18, 0x1c, 0x6a, 0x75, 0x73, 0x74, 0x65,
	0x61, 0x74, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x2e,
	0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0xa2, 0xbb, 0x18, 0x12, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0xaa, 0xbb, 0x18,
	0x03, 0x61, 0x6c, 0x6c, 0x42, 0x82, 0x01, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x2e, 0x6a, 0x75, 0x73,
	0x74, 0x65, 0x61, 0x74, 0x42, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0xa2,
	0x02, 0x03, 0x4a, 0x58, 0x58, 0xaa, 0x02, 0x07, 0x4a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0xca,
	0x02, 0x07, 0x4a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0xe2, 0x02, 0x13, 0x4a, 0x75, 0x73, 0x74,
	0x65, 0x61, 0x74, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x07, 0x4a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_justeat_order_amended_proto_rawDescOnce sync.Once
	file_justeat_order_amended_proto_rawDescData = file_justeat_order_amended_proto_rawDesc
)

func file_justeat_order_amended_proto_rawDescGZIP() []byte {
	file_justeat_order_amended_proto_rawDescOnce.Do(func() {
		file_justeat_order_amended_proto_rawDescData = protoimpl.X.CompressGZIP(file_justeat_order_amended_proto_rawDescData)
	})
	return file_justeat_order_amended_proto_rawDescData
}

var file_justeat_order_amended_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_justeat_order_amended_proto_goTypes = []interface{}{
	(*OutOfStockOrderAdjusted)(nil),                  // 0: justeat.OutOfStockOrderAdjusted
	(*OutOfStockItem)(nil),                           // 1: justeat.OutOfStockItem
	(*Refund)(nil),                                   // 2: justeat.Refund
	(*RefundLine)(nil),                               // 3: justeat.RefundLine
	(*ServiceFee)(nil),                               // 4: justeat.ServiceFee
	(*OrderItemsModificationApproved)(nil),           // 5: justeat.OrderItemsModificationApproved
	(*OrderItemsModificationApprovedRefund)(nil),     // 6: justeat.OrderItemsModificationApprovedRefund
	(*OrderItemsModificationApprovedRefundLine)(nil), // 7: justeat.OrderItemsModificationApprovedRefundLine
	(*OrderItemsModificationApprovedServiceFee)(nil), // 8: justeat.OrderItemsModificationApprovedServiceFee
	(*Deposit)(nil),                                  // 9: justeat.Deposit
	(*AmendOrderItem)(nil),                           // 10: justeat.AmendOrderItem
	(*OrderRefundApproved)(nil),                      // 11: justeat.OrderRefundApproved
	(*OrderRefundFailure)(nil),                       // 12: justeat.OrderRefundFailure
	(*ServiceFee_RefundedAmount)(nil),                // 13: justeat.ServiceFee.RefundedAmount
	(*ServiceFee_UpdatedAmount)(nil),                 // 14: justeat.ServiceFee.UpdatedAmount
	(*AmendOrderItem_RemovedItem)(nil),               // 15: justeat.AmendOrderItem.RemovedItem
	(*AmendOrderItem_AddedItem)(nil),                 // 16: justeat.AmendOrderItem.AddedItem
}
var file_justeat_order_amended_proto_depIdxs = []int32{
	1,  // 0: justeat.OutOfStockOrderAdjusted.items_out_of_stock:type_name -> justeat.OutOfStockItem
	2,  // 1: justeat.OutOfStockOrderAdjusted.refund:type_name -> justeat.Refund
	3,  // 2: justeat.Refund.lines:type_name -> justeat.RefundLine
	4,  // 3: justeat.Refund.service_fee:type_name -> justeat.ServiceFee
	13, // 4: justeat.ServiceFee.refunded_amount:type_name -> justeat.ServiceFee.RefundedAmount
	14, // 5: justeat.ServiceFee.updated_amount:type_name -> justeat.ServiceFee.UpdatedAmount
	6,  // 6: justeat.OrderItemsModificationApproved.refund:type_name -> justeat.OrderItemsModificationApprovedRefund
	10, // 7: justeat.OrderItemsModificationApproved.items:type_name -> justeat.AmendOrderItem
	7,  // 8: justeat.OrderItemsModificationApprovedRefund.lines:type_name -> justeat.OrderItemsModificationApprovedRefundLine
	8,  // 9: justeat.OrderItemsModificationApprovedRefund.service_fee:type_name -> justeat.OrderItemsModificationApprovedServiceFee
	9,  // 10: justeat.OrderItemsModificationApprovedRefund.deposit:type_name -> justeat.Deposit
	15, // 11: justeat.AmendOrderItem.removed:type_name -> justeat.AmendOrderItem.RemovedItem
	16, // 12: justeat.AmendOrderItem.added:type_name -> justeat.AmendOrderItem.AddedItem
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_justeat_order_amended_proto_init() }
func file_justeat_order_amended_proto_init() {
	if File_justeat_order_amended_proto != nil {
		return
	}
	file_justeat_options_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_justeat_order_amended_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutOfStockOrderAdjusted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_order_amended_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutOfStockItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_order_amended_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Refund); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_order_amended_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_order_amended_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_order_amended_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderItemsModificationApproved); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_order_amended_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderItemsModificationApprovedRefund); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_order_amended_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderItemsModificationApprovedRefundLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_order_amended_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderItemsModificationApprovedServiceFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_order_amended_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deposit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_order_amended_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmendOrderItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_order_amended_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRefundApproved); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_order_amended_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRefundFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_order_amended_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceFee_RefundedAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_order_amended_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceFee_UpdatedAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_order_amended_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmendOrderItem_RemovedItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_order_amended_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmendOrderItem_AddedItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_justeat_order_amended_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_justeat_order_amended_proto_goTypes,
		DependencyIndexes: file_justeat_order_amended_proto_depIdxs,
		MessageInfos:      file_justeat_order_amended_proto_msgTypes,
	}.Build()
	File_justeat_order_amended_proto = out.File
	file_justeat_order_amended_proto_rawDesc = nil
	file_justeat_order_amended_proto_goTypes = nil
	file_justeat_order_amended_proto_depIdxs = nil
}
