// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: justeat/restaurant-info-updated-v2.proto

package justeat

import (
	_ "github.com/flypay/events/pkg/flyt"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RestaurantInfoUpdatedV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId     int32                         `protobuf:"varint,1,opt,name=restaurant_id,json=RestaurantId,proto3" json:"restaurant_id,omitempty"`
	Info             *RestaurantInfoUpdatedV2_Info `protobuf:"bytes,2,opt,name=info,json=Info,proto3" json:"info,omitempty"`
	Id               string                        `protobuf:"bytes,3,opt,name=id,json=Id,proto3" json:"id,omitempty"`
	TimeStamp        string                        `protobuf:"bytes,4,opt,name=time_stamp,json=TimeStamp,proto3" json:"time_stamp,omitempty"`
	RaisingComponent string                        `protobuf:"bytes,5,opt,name=raising_component,json=RaisingComponent,proto3" json:"raising_component,omitempty"`
	Tenant           string                        `protobuf:"bytes,6,opt,name=tenant,json=Tenant,proto3" json:"tenant,omitempty"`
}

func (x *RestaurantInfoUpdatedV2) Reset() {
	*x = RestaurantInfoUpdatedV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_info_updated_v2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantInfoUpdatedV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantInfoUpdatedV2) ProtoMessage() {}

func (x *RestaurantInfoUpdatedV2) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_info_updated_v2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantInfoUpdatedV2.ProtoReflect.Descriptor instead.
func (*RestaurantInfoUpdatedV2) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_info_updated_v2_proto_rawDescGZIP(), []int{0}
}

func (x *RestaurantInfoUpdatedV2) GetRestaurantId() int32 {
	if x != nil {
		return x.RestaurantId
	}
	return 0
}

func (x *RestaurantInfoUpdatedV2) GetInfo() *RestaurantInfoUpdatedV2_Info {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *RestaurantInfoUpdatedV2) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2) GetRaisingComponent() string {
	if x != nil {
		return x.RaisingComponent
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

type RestaurantInfoUpdatedV2_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     int32                                             `protobuf:"varint,1,opt,name=id,json=Id,proto3" json:"id,omitempty"`
	Name                   string                                            `protobuf:"bytes,2,opt,name=name,json=Name,proto3" json:"name,omitempty"`
	BrandName              string                                            `protobuf:"bytes,3,opt,name=brand_name,json=BrandName,proto3" json:"brand_name,omitempty"`
	SeoName                string                                            `protobuf:"bytes,4,opt,name=seo_name,json=SeoName,proto3" json:"seo_name,omitempty"`
	Address                *RestaurantInfoUpdatedV2_Info_Address             `protobuf:"bytes,5,opt,name=address,json=Address,proto3" json:"address,omitempty"`
	PhoneNumber            string                                            `protobuf:"bytes,6,opt,name=phone_number,json=PhoneNumber,proto3" json:"phone_number,omitempty"`
	AllergenPhoneNumber    string                                            `protobuf:"bytes,7,opt,name=allergen_phone_number,json=AllergenPhoneNumber,proto3" json:"allergen_phone_number,omitempty"`
	MobileNumber           string                                            `protobuf:"bytes,8,opt,name=mobile_number,json=MobileNumber,proto3" json:"mobile_number,omitempty"`
	Email                  string                                            `protobuf:"bytes,9,opt,name=email,json=Email,proto3" json:"email,omitempty"`
	OwnerName              string                                            `protobuf:"bytes,10,opt,name=owner_name,json=OwnerName,proto3" json:"owner_name,omitempty"`
	AlternativeOwnerName   string                                            `protobuf:"bytes,11,opt,name=alternative_owner_name,json=AlternativeOwnerName,proto3" json:"alternative_owner_name,omitempty"`
	AlternativeOwnerNumber string                                            `protobuf:"bytes,12,opt,name=alternative_owner_number,json=AlternativeOwnerNumber,proto3" json:"alternative_owner_number,omitempty"`
	LegalName              string                                            `protobuf:"bytes,13,opt,name=legal_name,json=LegalName,proto3" json:"legal_name,omitempty"`
	CompanyNo              string                                            `protobuf:"bytes,14,opt,name=company_no,json=CompanyNo,proto3" json:"company_no,omitempty"`
	LogoUrl                string                                            `protobuf:"bytes,15,opt,name=logo_url,json=LogoUrl,proto3" json:"logo_url,omitempty"`
	OpeningClosingTimes    *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes `protobuf:"bytes,16,opt,name=opening_closing_times,json=OpeningClosingTimes,proto3" json:"opening_closing_times,omitempty"`
	TimeZone               string                                            `protobuf:"bytes,17,opt,name=time_zone,json=TimeZone,proto3" json:"time_zone,omitempty"`
	SignupReference        string                                            `protobuf:"bytes,18,opt,name=signup_reference,json=SignupReference,proto3" json:"signup_reference,omitempty"`
	AllergenUrl            string                                            `protobuf:"bytes,19,opt,name=allergen_url,json=AllergenUrl,proto3" json:"allergen_url,omitempty"`
}

func (x *RestaurantInfoUpdatedV2_Info) Reset() {
	*x = RestaurantInfoUpdatedV2_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_info_updated_v2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantInfoUpdatedV2_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantInfoUpdatedV2_Info) ProtoMessage() {}

func (x *RestaurantInfoUpdatedV2_Info) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_info_updated_v2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantInfoUpdatedV2_Info.ProtoReflect.Descriptor instead.
func (*RestaurantInfoUpdatedV2_Info) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_info_updated_v2_proto_rawDescGZIP(), []int{0, 0}
}

func (x *RestaurantInfoUpdatedV2_Info) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RestaurantInfoUpdatedV2_Info) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info) GetSeoName() string {
	if x != nil {
		return x.SeoName
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info) GetAddress() *RestaurantInfoUpdatedV2_Info_Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *RestaurantInfoUpdatedV2_Info) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info) GetAllergenPhoneNumber() string {
	if x != nil {
		return x.AllergenPhoneNumber
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info) GetMobileNumber() string {
	if x != nil {
		return x.MobileNumber
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info) GetAlternativeOwnerName() string {
	if x != nil {
		return x.AlternativeOwnerName
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info) GetAlternativeOwnerNumber() string {
	if x != nil {
		return x.AlternativeOwnerNumber
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info) GetLegalName() string {
	if x != nil {
		return x.LegalName
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info) GetCompanyNo() string {
	if x != nil {
		return x.CompanyNo
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info) GetOpeningClosingTimes() *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes {
	if x != nil {
		return x.OpeningClosingTimes
	}
	return nil
}

func (x *RestaurantInfoUpdatedV2_Info) GetTimeZone() string {
	if x != nil {
		return x.TimeZone
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info) GetSignupReference() string {
	if x != nil {
		return x.SignupReference
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info) GetAllergenUrl() string {
	if x != nil {
		return x.AllergenUrl
	}
	return ""
}

type RestaurantInfoUpdatedV2_Info_Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstLine string                                         `protobuf:"bytes,1,opt,name=first_line,json=FirstLine,proto3" json:"first_line,omitempty"`
	City      string                                         `protobuf:"bytes,2,opt,name=city,json=City,proto3" json:"city,omitempty"`
	Postcode  string                                         `protobuf:"bytes,3,opt,name=postcode,json=Postcode,proto3" json:"postcode,omitempty"`
	Location  *RestaurantInfoUpdatedV2_Info_Address_Location `protobuf:"bytes,4,opt,name=location,json=Location,proto3" json:"location,omitempty"`
}

func (x *RestaurantInfoUpdatedV2_Info_Address) Reset() {
	*x = RestaurantInfoUpdatedV2_Info_Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_info_updated_v2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantInfoUpdatedV2_Info_Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantInfoUpdatedV2_Info_Address) ProtoMessage() {}

func (x *RestaurantInfoUpdatedV2_Info_Address) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_info_updated_v2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantInfoUpdatedV2_Info_Address.ProtoReflect.Descriptor instead.
func (*RestaurantInfoUpdatedV2_Info_Address) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_info_updated_v2_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *RestaurantInfoUpdatedV2_Info_Address) GetFirstLine() string {
	if x != nil {
		return x.FirstLine
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info_Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info_Address) GetPostcode() string {
	if x != nil {
		return x.Postcode
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info_Address) GetLocation() *RestaurantInfoUpdatedV2_Info_Address_Location {
	if x != nil {
		return x.Location
	}
	return nil
}

type RestaurantInfoUpdatedV2_Info_OpeningClosingTimes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MondayClosed              bool   `protobuf:"varint,1,opt,name=monday_closed,json=MondayClosed,proto3" json:"monday_closed,omitempty"`
	TuesdayClosed             bool   `protobuf:"varint,2,opt,name=tuesday_closed,json=TuesdayClosed,proto3" json:"tuesday_closed,omitempty"`
	WednesdayClosed           bool   `protobuf:"varint,3,opt,name=wednesday_closed,json=WednesdayClosed,proto3" json:"wednesday_closed,omitempty"`
	ThursdayClosed            bool   `protobuf:"varint,4,opt,name=thursday_closed,json=ThursdayClosed,proto3" json:"thursday_closed,omitempty"`
	FridayClosed              bool   `protobuf:"varint,5,opt,name=friday_closed,json=FridayClosed,proto3" json:"friday_closed,omitempty"`
	SaturdayClosed            bool   `protobuf:"varint,6,opt,name=saturday_closed,json=SaturdayClosed,proto3" json:"saturday_closed,omitempty"`
	SundayClosed              bool   `protobuf:"varint,7,opt,name=sunday_closed,json=SundayClosed,proto3" json:"sunday_closed,omitempty"`
	MondayOpeningTimeOfDay    string `protobuf:"bytes,8,opt,name=monday_opening_time_of_day,json=MondayOpeningTimeOfDay,proto3" json:"monday_opening_time_of_day,omitempty"`
	TuesdayOpeningTimeOfDay   string `protobuf:"bytes,9,opt,name=tuesday_opening_time_of_day,json=TuesdayOpeningTimeOfDay,proto3" json:"tuesday_opening_time_of_day,omitempty"`
	WednesdayOpeningTimeOfDay string `protobuf:"bytes,10,opt,name=wednesday_opening_time_of_day,json=WednesdayOpeningTimeOfDay,proto3" json:"wednesday_opening_time_of_day,omitempty"`
	ThursdayOpeningTimeOfDay  string `protobuf:"bytes,11,opt,name=thursday_opening_time_of_day,json=ThursdayOpeningTimeOfDay,proto3" json:"thursday_opening_time_of_day,omitempty"`
	FridayOpeningTimeOfDay    string `protobuf:"bytes,12,opt,name=friday_opening_time_of_day,json=FridayOpeningTimeOfDay,proto3" json:"friday_opening_time_of_day,omitempty"`
	SaturdayOpeningTimeOfDay  string `protobuf:"bytes,13,opt,name=saturday_opening_time_of_day,json=SaturdayOpeningTimeOfDay,proto3" json:"saturday_opening_time_of_day,omitempty"`
	SundayOpeningTimeOfDay    string `protobuf:"bytes,14,opt,name=sunday_opening_time_of_day,json=SundayOpeningTimeOfDay,proto3" json:"sunday_opening_time_of_day,omitempty"`
	MondayClosingTimeOfDay    string `protobuf:"bytes,15,opt,name=monday_closing_time_of_day,json=MondayClosingTimeOfDay,proto3" json:"monday_closing_time_of_day,omitempty"`
	TuesdayClosingTimeOfDay   string `protobuf:"bytes,16,opt,name=tuesday_closing_time_of_day,json=TuesdayClosingTimeOfDay,proto3" json:"tuesday_closing_time_of_day,omitempty"`
	WednesdayClosingTimeOfDay string `protobuf:"bytes,17,opt,name=wednesday_closing_time_of_day,json=WednesdayClosingTimeOfDay,proto3" json:"wednesday_closing_time_of_day,omitempty"`
	ThursdayClosingTimeOfDay  string `protobuf:"bytes,18,opt,name=thursday_closing_time_of_day,json=ThursdayClosingTimeOfDay,proto3" json:"thursday_closing_time_of_day,omitempty"`
	FridayClosingTimeOfDay    string `protobuf:"bytes,19,opt,name=friday_closing_time_of_day,json=FridayClosingTimeOfDay,proto3" json:"friday_closing_time_of_day,omitempty"`
	SaturdayClosingTimeOfDay  string `protobuf:"bytes,20,opt,name=saturday_closing_time_of_day,json=SaturdayClosingTimeOfDay,proto3" json:"saturday_closing_time_of_day,omitempty"`
	SundayClosingTimeOfDay    string `protobuf:"bytes,21,opt,name=sunday_closing_time_of_day,json=SundayClosingTimeOfDay,proto3" json:"sunday_closing_time_of_day,omitempty"`
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) Reset() {
	*x = RestaurantInfoUpdatedV2_Info_OpeningClosingTimes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_info_updated_v2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) ProtoMessage() {}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_info_updated_v2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantInfoUpdatedV2_Info_OpeningClosingTimes.ProtoReflect.Descriptor instead.
func (*RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_info_updated_v2_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) GetMondayClosed() bool {
	if x != nil {
		return x.MondayClosed
	}
	return false
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) GetTuesdayClosed() bool {
	if x != nil {
		return x.TuesdayClosed
	}
	return false
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) GetWednesdayClosed() bool {
	if x != nil {
		return x.WednesdayClosed
	}
	return false
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) GetThursdayClosed() bool {
	if x != nil {
		return x.ThursdayClosed
	}
	return false
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) GetFridayClosed() bool {
	if x != nil {
		return x.FridayClosed
	}
	return false
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) GetSaturdayClosed() bool {
	if x != nil {
		return x.SaturdayClosed
	}
	return false
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) GetSundayClosed() bool {
	if x != nil {
		return x.SundayClosed
	}
	return false
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) GetMondayOpeningTimeOfDay() string {
	if x != nil {
		return x.MondayOpeningTimeOfDay
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) GetTuesdayOpeningTimeOfDay() string {
	if x != nil {
		return x.TuesdayOpeningTimeOfDay
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) GetWednesdayOpeningTimeOfDay() string {
	if x != nil {
		return x.WednesdayOpeningTimeOfDay
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) GetThursdayOpeningTimeOfDay() string {
	if x != nil {
		return x.ThursdayOpeningTimeOfDay
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) GetFridayOpeningTimeOfDay() string {
	if x != nil {
		return x.FridayOpeningTimeOfDay
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) GetSaturdayOpeningTimeOfDay() string {
	if x != nil {
		return x.SaturdayOpeningTimeOfDay
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) GetSundayOpeningTimeOfDay() string {
	if x != nil {
		return x.SundayOpeningTimeOfDay
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) GetMondayClosingTimeOfDay() string {
	if x != nil {
		return x.MondayClosingTimeOfDay
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) GetTuesdayClosingTimeOfDay() string {
	if x != nil {
		return x.TuesdayClosingTimeOfDay
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) GetWednesdayClosingTimeOfDay() string {
	if x != nil {
		return x.WednesdayClosingTimeOfDay
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) GetThursdayClosingTimeOfDay() string {
	if x != nil {
		return x.ThursdayClosingTimeOfDay
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) GetFridayClosingTimeOfDay() string {
	if x != nil {
		return x.FridayClosingTimeOfDay
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) GetSaturdayClosingTimeOfDay() string {
	if x != nil {
		return x.SaturdayClosingTimeOfDay
	}
	return ""
}

func (x *RestaurantInfoUpdatedV2_Info_OpeningClosingTimes) GetSundayClosingTimeOfDay() string {
	if x != nil {
		return x.SundayClosingTimeOfDay
	}
	return ""
}

type RestaurantInfoUpdatedV2_Info_Address_Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat float64 `protobuf:"fixed64,1,opt,name=lat,json=Lat,proto3" json:"lat,omitempty"`
	Lng float64 `protobuf:"fixed64,2,opt,name=lng,json=Lng,proto3" json:"lng,omitempty"`
}

func (x *RestaurantInfoUpdatedV2_Info_Address_Location) Reset() {
	*x = RestaurantInfoUpdatedV2_Info_Address_Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_info_updated_v2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantInfoUpdatedV2_Info_Address_Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantInfoUpdatedV2_Info_Address_Location) ProtoMessage() {}

func (x *RestaurantInfoUpdatedV2_Info_Address_Location) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_info_updated_v2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantInfoUpdatedV2_Info_Address_Location.ProtoReflect.Descriptor instead.
func (*RestaurantInfoUpdatedV2_Info_Address_Location) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_info_updated_v2_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

func (x *RestaurantInfoUpdatedV2_Info_Address_Location) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *RestaurantInfoUpdatedV2_Info_Address_Location) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

var File_justeat_restaurant_info_updated_v2_proto protoreflect.FileDescriptor

var file_justeat_restaurant_info_updated_v2_proto_rawDesc = []byte{
	0x0a, 0x28, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x2d, 0x69, 0x6e, 0x66, 0x6f, 0x2d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x2d, 0x76, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6a, 0x75, 0x73, 0x74,
	0x65, 0x61, 0x74, 0x1a, 0x15, 0x66, 0x6c, 0x79, 0x74, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6a, 0x75, 0x73, 0x74,
	0x65, 0x61, 0x74, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xd6, 0x13, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x56, 0x32, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x39, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x56, 0x32, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2b, 0x0a, 0x11,
	0x72, 0x61, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x61, 0x69, 0x73, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x1a, 0xf3, 0x10, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x65, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x53, 0x65, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6a, 0x75, 0x73, 0x74,
	0x65, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x56, 0x32, 0x2e, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x67, 0x65, 0x6e,
	0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x41, 0x6c, 0x6c, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x61, 0x6c, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x41, 0x6c, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x6f, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x6f,
	0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x6d, 0x0a, 0x15, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6a, 0x75, 0x73,
	0x74, 0x65, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x56, 0x32, 0x2e, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x13, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x6c,
	0x6f, 0x73, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54,
	0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x69, 0x67, 0x6e, 0x75,
	0x70, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x6c, 0x6c, 0x65, 0x72, 0x67,
	0x65, 0x6e, 0x55, 0x72, 0x6c, 0x1a, 0xdc, 0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x43, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x52, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x56, 0x32, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x2e, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x4c,
	0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x4c, 0x6e, 0x67, 0x1a, 0x90, 0x09, 0x0a, 0x13, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67,
	0x43, 0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x6d, 0x6f, 0x6e, 0x64, 0x61, 0x79, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x4d, 0x6f, 0x6e, 0x64, 0x61, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x5f, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x54, 0x75, 0x65, 0x73, 0x64,
	0x61, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x77, 0x65, 0x64, 0x6e,
	0x65, 0x73, 0x64, 0x61, 0x79, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x57, 0x65, 0x64, 0x6e, 0x65, 0x73, 0x64, 0x61, 0x79, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79, 0x5f,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x54, 0x68,
	0x75, 0x72, 0x73, 0x64, 0x61, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x66, 0x72, 0x69, 0x64, 0x61, 0x79, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x46, 0x72, 0x69, 0x64, 0x61, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x5f, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x53, 0x61, 0x74, 0x75,
	0x72, 0x64, 0x61, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75,
	0x6e, 0x64, 0x61, 0x79, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x53, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12,
	0x3a, 0x0a, 0x1a, 0x6d, 0x6f, 0x6e, 0x64, 0x61, 0x79, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x4d, 0x6f, 0x6e, 0x64, 0x61, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x69,
	0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x12, 0x3c, 0x0a, 0x1b, 0x74,
	0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x17, 0x54, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67,
	0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x12, 0x40, 0x0a, 0x1d, 0x77, 0x65, 0x64,
	0x6e, 0x65, 0x73, 0x64, 0x61, 0x79, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x19, 0x57, 0x65, 0x64, 0x6e, 0x65, 0x73, 0x64, 0x61, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x69,
	0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x12, 0x3e, 0x0a, 0x1c, 0x74,
	0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x18, 0x54, 0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x69,
	0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x12, 0x3a, 0x0a, 0x1a, 0x66,
	0x72, 0x69, 0x64, 0x61, 0x79, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x16, 0x46, 0x72, 0x69, 0x64, 0x61, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69,
	0x6d, 0x65, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x12, 0x3e, 0x0a, 0x1c, 0x73, 0x61, 0x74, 0x75, 0x72,
	0x64, 0x61, 0x79, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x53,
	0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69,
	0x6d, 0x65, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x12, 0x3a, 0x0a, 0x1a, 0x73, 0x75, 0x6e, 0x64, 0x61,
	0x79, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f,
	0x66, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x53, 0x75, 0x6e,
	0x64, 0x61, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66,
	0x44, 0x61, 0x79, 0x12, 0x3a, 0x0a, 0x1a, 0x6d, 0x6f, 0x6e, 0x64, 0x61, 0x79, 0x5f, 0x63, 0x6c,
	0x6f, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x61,
	0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x4d, 0x6f, 0x6e, 0x64, 0x61, 0x79, 0x43,
	0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x12,
	0x3c, 0x0a, 0x1b, 0x74, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x69,
	0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x54, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x43, 0x6c, 0x6f,
	0x73, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x12, 0x40, 0x0a,
	0x1d, 0x77, 0x65, 0x64, 0x6e, 0x65, 0x73, 0x64, 0x61, 0x79, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x69,
	0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x57, 0x65, 0x64, 0x6e, 0x65, 0x73, 0x64, 0x61, 0x79, 0x43,
	0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x12,
	0x3e, 0x0a, 0x1c, 0x74, 0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79, 0x5f, 0x63, 0x6c, 0x6f, 0x73,
	0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x61, 0x79, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x54, 0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79, 0x43,
	0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x12,
	0x3a, 0x0a, 0x1a, 0x66, 0x72, 0x69, 0x64, 0x61, 0x79, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x69, 0x6e,
	0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x46, 0x72, 0x69, 0x64, 0x61, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x69,
	0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x12, 0x3e, 0x0a, 0x1c, 0x73,
	0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x18, 0x53, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x69,
	0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x12, 0x3a, 0x0a, 0x1a, 0x73,
	0x75, 0x6e, 0x64, 0x61, 0x79, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x16, 0x53, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x54, 0x69,
	0x6d, 0x65, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x3a, 0x71, 0x82, 0xb5, 0x18, 0x22, 0x6a, 0x75, 0x73,
	0x74, 0x65, 0x61, 0x74, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x32, 0xa2,
	0xbb, 0x18, 0x17, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x56, 0x32, 0xaa, 0xbb, 0x18, 0x02, 0x75, 0x6b,
	0xaa, 0xbb, 0x18, 0x02, 0x65, 0x73, 0xaa, 0xbb, 0x18, 0x02, 0x69, 0x65, 0xaa, 0xbb, 0x18, 0x02,
	0x69, 0x74, 0xaa, 0xbb, 0x18, 0x02, 0x64, 0x6b, 0xaa, 0xbb, 0x18, 0x02, 0x6e, 0x6f, 0xaa, 0xbb,
	0x18, 0x02, 0x61, 0x75, 0xaa, 0xbb, 0x18, 0x02, 0x6e, 0x7a, 0x42, 0x8d, 0x01, 0x0a, 0x0b, 0x63,
	0x6f, 0x6d, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x42, 0x1c, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x56, 0x32, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74,
	0xa2, 0x02, 0x03, 0x4a, 0x58, 0x58, 0xaa, 0x02, 0x07, 0x4a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74,
	0xca, 0x02, 0x07, 0x4a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0xe2, 0x02, 0x13, 0x4a, 0x75, 0x73,
	0x74, 0x65, 0x61, 0x74, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x07, 0x4a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_justeat_restaurant_info_updated_v2_proto_rawDescOnce sync.Once
	file_justeat_restaurant_info_updated_v2_proto_rawDescData = file_justeat_restaurant_info_updated_v2_proto_rawDesc
)

func file_justeat_restaurant_info_updated_v2_proto_rawDescGZIP() []byte {
	file_justeat_restaurant_info_updated_v2_proto_rawDescOnce.Do(func() {
		file_justeat_restaurant_info_updated_v2_proto_rawDescData = protoimpl.X.CompressGZIP(file_justeat_restaurant_info_updated_v2_proto_rawDescData)
	})
	return file_justeat_restaurant_info_updated_v2_proto_rawDescData
}

var file_justeat_restaurant_info_updated_v2_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_justeat_restaurant_info_updated_v2_proto_goTypes = []interface{}{
	(*RestaurantInfoUpdatedV2)(nil),                          // 0: justeat.RestaurantInfoUpdatedV2
	(*RestaurantInfoUpdatedV2_Info)(nil),                     // 1: justeat.RestaurantInfoUpdatedV2.Info
	(*RestaurantInfoUpdatedV2_Info_Address)(nil),             // 2: justeat.RestaurantInfoUpdatedV2.Info.Address
	(*RestaurantInfoUpdatedV2_Info_OpeningClosingTimes)(nil), // 3: justeat.RestaurantInfoUpdatedV2.Info.OpeningClosingTimes
	(*RestaurantInfoUpdatedV2_Info_Address_Location)(nil),    // 4: justeat.RestaurantInfoUpdatedV2.Info.Address.Location
}
var file_justeat_restaurant_info_updated_v2_proto_depIdxs = []int32{
	1, // 0: justeat.RestaurantInfoUpdatedV2.info:type_name -> justeat.RestaurantInfoUpdatedV2.Info
	2, // 1: justeat.RestaurantInfoUpdatedV2.Info.address:type_name -> justeat.RestaurantInfoUpdatedV2.Info.Address
	3, // 2: justeat.RestaurantInfoUpdatedV2.Info.opening_closing_times:type_name -> justeat.RestaurantInfoUpdatedV2.Info.OpeningClosingTimes
	4, // 3: justeat.RestaurantInfoUpdatedV2.Info.Address.location:type_name -> justeat.RestaurantInfoUpdatedV2.Info.Address.Location
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_justeat_restaurant_info_updated_v2_proto_init() }
func file_justeat_restaurant_info_updated_v2_proto_init() {
	if File_justeat_restaurant_info_updated_v2_proto != nil {
		return
	}
	file_justeat_options_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_justeat_restaurant_info_updated_v2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestaurantInfoUpdatedV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_info_updated_v2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestaurantInfoUpdatedV2_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_info_updated_v2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestaurantInfoUpdatedV2_Info_Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_info_updated_v2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestaurantInfoUpdatedV2_Info_OpeningClosingTimes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_info_updated_v2_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestaurantInfoUpdatedV2_Info_Address_Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_justeat_restaurant_info_updated_v2_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_justeat_restaurant_info_updated_v2_proto_goTypes,
		DependencyIndexes: file_justeat_restaurant_info_updated_v2_proto_depIdxs,
		MessageInfos:      file_justeat_restaurant_info_updated_v2_proto_msgTypes,
	}.Build()
	File_justeat_restaurant_info_updated_v2_proto = out.File
	file_justeat_restaurant_info_updated_v2_proto_rawDesc = nil
	file_justeat_restaurant_info_updated_v2_proto_goTypes = nil
	file_justeat_restaurant_info_updated_v2_proto_depIdxs = nil
}
