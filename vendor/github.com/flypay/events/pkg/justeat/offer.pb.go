// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: justeat/offer.proto

package justeat

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Offer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfferId             string               `protobuf:"bytes,1,opt,name=offer_id,json=OfferId,proto3" json:"offer_id,omitempty"`
	ConsumerSegment     string               `protobuf:"bytes,2,opt,name=consumer_segment,json=ConsumerSegment,proto3" json:"consumer_segment,omitempty"`
	Campaign            *Campaign            `protobuf:"bytes,3,opt,name=campaign,json=Campaign,proto3" json:"campaign,omitempty"`
	EditedBy            string               `protobuf:"bytes,4,opt,name=edited_by,json=EditedBy,proto3" json:"edited_by,omitempty"`
	OfferPeriod         *OfferPeriod         `protobuf:"bytes,5,opt,name=offer_period,json=OfferPeriod,proto3" json:"offer_period,omitempty"`
	QualifyingCondition *QualifyingCondition `protobuf:"bytes,6,opt,name=qualifying_condition,json=QualifyingCondition,proto3" json:"qualifying_condition,omitempty"`
	OfferType           string               `protobuf:"bytes,7,opt,name=offer_type,json=OfferType,proto3" json:"offer_type,omitempty"`
	Percent             *Percent             `protobuf:"bytes,8,opt,name=percent,json=Percent,proto3" json:"percent,omitempty"`
	Bogof               *Bogof               `protobuf:"bytes,9,opt,name=bogof,json=Bogof,proto3" json:"bogof,omitempty"`
	FreeItem            *FreeItem            `protobuf:"bytes,10,opt,name=free_item,json=FreeItem,proto3" json:"free_item,omitempty"`
}

func (x *Offer) Reset() {
	*x = Offer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_offer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Offer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Offer) ProtoMessage() {}

func (x *Offer) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_offer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Offer.ProtoReflect.Descriptor instead.
func (*Offer) Descriptor() ([]byte, []int) {
	return file_justeat_offer_proto_rawDescGZIP(), []int{0}
}

func (x *Offer) GetOfferId() string {
	if x != nil {
		return x.OfferId
	}
	return ""
}

func (x *Offer) GetConsumerSegment() string {
	if x != nil {
		return x.ConsumerSegment
	}
	return ""
}

func (x *Offer) GetCampaign() *Campaign {
	if x != nil {
		return x.Campaign
	}
	return nil
}

func (x *Offer) GetEditedBy() string {
	if x != nil {
		return x.EditedBy
	}
	return ""
}

func (x *Offer) GetOfferPeriod() *OfferPeriod {
	if x != nil {
		return x.OfferPeriod
	}
	return nil
}

func (x *Offer) GetQualifyingCondition() *QualifyingCondition {
	if x != nil {
		return x.QualifyingCondition
	}
	return nil
}

func (x *Offer) GetOfferType() string {
	if x != nil {
		return x.OfferType
	}
	return ""
}

func (x *Offer) GetPercent() *Percent {
	if x != nil {
		return x.Percent
	}
	return nil
}

func (x *Offer) GetBogof() *Bogof {
	if x != nil {
		return x.Bogof
	}
	return nil
}

func (x *Offer) GetFreeItem() *FreeItem {
	if x != nil {
		return x.FreeItem
	}
	return nil
}

type Campaign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampaignId         string `protobuf:"bytes,1,opt,name=campaign_id,json=CampaignId,proto3" json:"campaign_id,omitempty"`
	Description        string `protobuf:"bytes,2,opt,name=description,json=Description,proto3" json:"description,omitempty"`
	SubscriptionStatus string `protobuf:"bytes,3,opt,name=subscription_status,json=SubscriptionStatus,proto3" json:"subscription_status,omitempty"`
	Priority           int32  `protobuf:"varint,4,opt,name=priority,json=Priority,proto3" json:"priority,omitempty"`
	ExternalCampaignId string `protobuf:"bytes,5,opt,name=external_campaign_id,json=ExternalCampaignId,proto3" json:"external_campaign_id,omitempty"`
}

func (x *Campaign) Reset() {
	*x = Campaign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_offer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Campaign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Campaign) ProtoMessage() {}

func (x *Campaign) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_offer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Campaign.ProtoReflect.Descriptor instead.
func (*Campaign) Descriptor() ([]byte, []int) {
	return file_justeat_offer_proto_rawDescGZIP(), []int{1}
}

func (x *Campaign) GetCampaignId() string {
	if x != nil {
		return x.CampaignId
	}
	return ""
}

func (x *Campaign) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Campaign) GetSubscriptionStatus() string {
	if x != nil {
		return x.SubscriptionStatus
	}
	return ""
}

func (x *Campaign) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Campaign) GetExternalCampaignId() string {
	if x != nil {
		return x.ExternalCampaignId
	}
	return ""
}

type OfferPeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RunningHours *Period `protobuf:"bytes,1,opt,name=running_hours,json=RunningHours,proto3" json:"running_hours,omitempty"`
	RunningDates *Period `protobuf:"bytes,2,opt,name=running_dates,json=RunningDates,proto3" json:"running_dates,omitempty"`
	DayOfWeek    string  `protobuf:"bytes,3,opt,name=day_of_week,json=DayOfWeek,proto3" json:"day_of_week,omitempty"`
}

func (x *OfferPeriod) Reset() {
	*x = OfferPeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_offer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferPeriod) ProtoMessage() {}

func (x *OfferPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_offer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferPeriod.ProtoReflect.Descriptor instead.
func (*OfferPeriod) Descriptor() ([]byte, []int) {
	return file_justeat_offer_proto_rawDescGZIP(), []int{2}
}

func (x *OfferPeriod) GetRunningHours() *Period {
	if x != nil {
		return x.RunningHours
	}
	return nil
}

func (x *OfferPeriod) GetRunningDates() *Period {
	if x != nil {
		return x.RunningDates
	}
	return nil
}

func (x *OfferPeriod) GetDayOfWeek() string {
	if x != nil {
		return x.DayOfWeek
	}
	return ""
}

type QualifyingCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinimumOrderValue float32          `protobuf:"fixed32,1,opt,name=minimum_order_value,json=MinimumOrderValue,proto3" json:"minimum_order_value,omitempty"`
	ProductSet        *OfferProductSet `protobuf:"bytes,2,opt,name=product_set,json=ProductSet,proto3" json:"product_set,omitempty"`
}

func (x *QualifyingCondition) Reset() {
	*x = QualifyingCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_offer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QualifyingCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QualifyingCondition) ProtoMessage() {}

func (x *QualifyingCondition) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_offer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QualifyingCondition.ProtoReflect.Descriptor instead.
func (*QualifyingCondition) Descriptor() ([]byte, []int) {
	return file_justeat_offer_proto_rawDescGZIP(), []int{3}
}

func (x *QualifyingCondition) GetMinimumOrderValue() float32 {
	if x != nil {
		return x.MinimumOrderValue
	}
	return 0
}

func (x *QualifyingCondition) GetProductSet() *OfferProductSet {
	if x != nil {
		return x.ProductSet
	}
	return nil
}

type Percent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscountAmount float32 `protobuf:"fixed32,1,opt,name=discount_amount,json=DiscountAmount,proto3" json:"discount_amount,omitempty"`
}

func (x *Percent) Reset() {
	*x = Percent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_offer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Percent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Percent) ProtoMessage() {}

func (x *Percent) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_offer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Percent.ProtoReflect.Descriptor instead.
func (*Percent) Descriptor() ([]byte, []int) {
	return file_justeat_offer_proto_rawDescGZIP(), []int{4}
}

func (x *Percent) GetDiscountAmount() float32 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

type Bogof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description       string           `protobuf:"bytes,1,opt,name=description,json=Description,proto3" json:"description,omitempty"`
	MaximumRedemption int32            `protobuf:"varint,2,opt,name=maximum_redemption,json=MaximumRedemptions,proto3" json:"maximum_redemption,omitempty"`
	ProductSet        *OfferProductSet `protobuf:"bytes,3,opt,name=product_set,json=ProductSet,proto3" json:"product_set,omitempty"`
}

func (x *Bogof) Reset() {
	*x = Bogof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_offer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bogof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bogof) ProtoMessage() {}

func (x *Bogof) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_offer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bogof.ProtoReflect.Descriptor instead.
func (*Bogof) Descriptor() ([]byte, []int) {
	return file_justeat_offer_proto_rawDescGZIP(), []int{5}
}

func (x *Bogof) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Bogof) GetMaximumRedemption() int32 {
	if x != nil {
		return x.MaximumRedemption
	}
	return 0
}

func (x *Bogof) GetProductSet() *OfferProductSet {
	if x != nil {
		return x.ProductSet
	}
	return nil
}

type FreeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description        string           `protobuf:"bytes,1,opt,name=description,json=Description,proto3" json:"description,omitempty"`
	MaximumRedemptions int32            `protobuf:"varint,2,opt,name=maximum_redemptions,json=MaximumRedemptions,proto3" json:"maximum_redemptions,omitempty"`
	OfferProductsSet   *OfferProductSet `protobuf:"bytes,3,opt,name=offer_products_set,json=ProductSet,proto3" json:"offer_products_set,omitempty"`
}

func (x *FreeItem) Reset() {
	*x = FreeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_offer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreeItem) ProtoMessage() {}

func (x *FreeItem) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_offer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreeItem.ProtoReflect.Descriptor instead.
func (*FreeItem) Descriptor() ([]byte, []int) {
	return file_justeat_offer_proto_rawDescGZIP(), []int{6}
}

func (x *FreeItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FreeItem) GetMaximumRedemptions() int32 {
	if x != nil {
		return x.MaximumRedemptions
	}
	return 0
}

func (x *FreeItem) GetOfferProductsSet() *OfferProductSet {
	if x != nil {
		return x.OfferProductsSet
	}
	return nil
}

type OfferProductSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandNames        []string                `protobuf:"bytes,1,rep,name=brand_names,json=BrandNames,proto3" json:"brand_names,omitempty"`
	OfferProduct      []*OfferProduct         `protobuf:"bytes,2,rep,name=offer_product,json=Products,proto3" json:"offer_product,omitempty"`
	ProductCategories []*OfferProductCategory `protobuf:"bytes,3,rep,name=product_categories,json=ProductCategories,proto3" json:"product_categories,omitempty"`
}

func (x *OfferProductSet) Reset() {
	*x = OfferProductSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_offer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferProductSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferProductSet) ProtoMessage() {}

func (x *OfferProductSet) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_offer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferProductSet.ProtoReflect.Descriptor instead.
func (*OfferProductSet) Descriptor() ([]byte, []int) {
	return file_justeat_offer_proto_rawDescGZIP(), []int{7}
}

func (x *OfferProductSet) GetBrandNames() []string {
	if x != nil {
		return x.BrandNames
	}
	return nil
}

func (x *OfferProductSet) GetOfferProduct() []*OfferProduct {
	if x != nil {
		return x.OfferProduct
	}
	return nil
}

func (x *OfferProductSet) GetProductCategories() []*OfferProductCategory {
	if x != nil {
		return x.ProductCategories
	}
	return nil
}

type OfferProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                  `protobuf:"bytes,1,opt,name=id,json=Id,proto3" json:"id,omitempty"`
	Name          string                  `protobuf:"bytes,2,opt,name=name,json=Name,proto3" json:"name,omitempty"`
	VariationName string                  `protobuf:"bytes,3,opt,name=variation_name,json=VariationName,proto3" json:"variation_name,omitempty"`
	Modifiers     []*OfferProductModifier `protobuf:"bytes,4,rep,name=modifiers,json=PreferableModifiers,proto3" json:"modifiers,omitempty"`
}

func (x *OfferProduct) Reset() {
	*x = OfferProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_offer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferProduct) ProtoMessage() {}

func (x *OfferProduct) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_offer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferProduct.ProtoReflect.Descriptor instead.
func (*OfferProduct) Descriptor() ([]byte, []int) {
	return file_justeat_offer_proto_rawDescGZIP(), []int{8}
}

func (x *OfferProduct) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OfferProduct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OfferProduct) GetVariationName() string {
	if x != nil {
		return x.VariationName
	}
	return ""
}

func (x *OfferProduct) GetModifiers() []*OfferProductModifier {
	if x != nil {
		return x.Modifiers
	}
	return nil
}

type OfferProductCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,json=Id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,json=Name,proto3" json:"name,omitempty"`
}

func (x *OfferProductCategory) Reset() {
	*x = OfferProductCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_offer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferProductCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferProductCategory) ProtoMessage() {}

func (x *OfferProductCategory) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_offer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferProductCategory.ProtoReflect.Descriptor instead.
func (*OfferProductCategory) Descriptor() ([]byte, []int) {
	return file_justeat_offer_proto_rawDescGZIP(), []int{9}
}

func (x *OfferProductCategory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OfferProductCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type OfferProductModifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string `protobuf:"bytes,1,opt,name=id,json=Id,proto3" json:"id,omitempty"`
	Name              string `protobuf:"bytes,2,opt,name=name,json=Name,proto3" json:"name,omitempty"`
	ModifierGroupName string `protobuf:"bytes,3,opt,name=modifier_group_name,json=ModifierGroupName,proto3" json:"modifier_group_name,omitempty"`
}

func (x *OfferProductModifier) Reset() {
	*x = OfferProductModifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_offer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferProductModifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferProductModifier) ProtoMessage() {}

func (x *OfferProductModifier) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_offer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferProductModifier.ProtoReflect.Descriptor instead.
func (*OfferProductModifier) Descriptor() ([]byte, []int) {
	return file_justeat_offer_proto_rawDescGZIP(), []int{10}
}

func (x *OfferProductModifier) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OfferProductModifier) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OfferProductModifier) GetModifierGroupName() string {
	if x != nil {
		return x.ModifierGroupName
	}
	return ""
}

type Period struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	From *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// Deprecated: Do not use.
	To         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	PeriodFrom string                 `protobuf:"bytes,3,opt,name=period_from,json=From,proto3" json:"period_from,omitempty"`
	PeriodTo   string                 `protobuf:"bytes,4,opt,name=period_to,json=To,proto3" json:"period_to,omitempty"`
}

func (x *Period) Reset() {
	*x = Period{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_offer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Period) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Period) ProtoMessage() {}

func (x *Period) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_offer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Period.ProtoReflect.Descriptor instead.
func (*Period) Descriptor() ([]byte, []int) {
	return file_justeat_offer_proto_rawDescGZIP(), []int{11}
}

// Deprecated: Do not use.
func (x *Period) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

// Deprecated: Do not use.
func (x *Period) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Period) GetPeriodFrom() string {
	if x != nil {
		return x.PeriodFrom
	}
	return ""
}

func (x *Period) GetPeriodTo() string {
	if x != nil {
		return x.PeriodTo
	}
	return ""
}

var File_justeat_offer_proto protoreflect.FileDescriptor

var file_justeat_offer_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xc4, 0x03, 0x0a, 0x05, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x2d, 0x0a, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x52, 0x08, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x37, 0x0a, 0x0c, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x0b, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x12, 0x4f, 0x0a, 0x14, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x51, 0x75, 0x61,
	0x6c, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x13, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x12, 0x24, 0x0a, 0x05, 0x62, 0x6f, 0x67, 0x6f, 0x66, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x42, 0x6f, 0x67, 0x6f, 0x66, 0x52,
	0x05, 0x42, 0x6f, 0x67, 0x6f, 0x66, 0x12, 0x2e, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6a, 0x75, 0x73, 0x74,
	0x65, 0x61, 0x74, 0x2e, 0x46, 0x72, 0x65, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x46, 0x72,
	0x65, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x22, 0xcc, 0x01, 0x0a, 0x08, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x13, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x49, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x0b, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x34, 0x0a, 0x0d, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6a,
	0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x0c, 0x52,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x0d, 0x72,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x52, 0x0c, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x64, 0x61, 0x79, 0x5f, 0x6f, 0x66, 0x5f, 0x77, 0x65, 0x65, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65,
	0x6b, 0x22, 0x80, 0x01, 0x0a, 0x13, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x65, 0x74, 0x22, 0x32, 0x0a, 0x07, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x05, 0x42, 0x6f, 0x67,
	0x6f, 0x66, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f,
	0x72, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x12, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6a, 0x75, 0x73, 0x74,
	0x65, 0x61, 0x74, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x74, 0x22,
	0x9f, 0x01, 0x0a, 0x08, 0x46, 0x72, 0x65, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f,
	0x0a, 0x13, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x64, 0x65, 0x6d, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x4d, 0x61, 0x78,
	0x69, 0x6d, 0x75, 0x6d, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x40, 0x0a, 0x12, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6a, 0x75,
	0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65,
	0x74, 0x22, 0xb8, 0x01, 0x0a, 0x0f, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0d, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x4c,
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6a, 0x75, 0x73,
	0x74, 0x65, 0x61, 0x74, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0xa0, 0x01, 0x0a,
	0x0c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6a, 0x75,
	0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x13, 0x50, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x22,
	0x3a, 0x0a, 0x14, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6a, 0x0a, 0x14, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x12, 0x32, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x02,
	0x18, 0x01, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x19, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f,
	0x6d, 0x12, 0x15, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f, 0x42, 0x7b, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x2e,
	0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x42, 0x0a, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x66, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0xa2, 0x02, 0x03, 0x4a, 0x58,
	0x58, 0xaa, 0x02, 0x07, 0x4a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0xca, 0x02, 0x07, 0x4a, 0x75,
	0x73, 0x74, 0x65, 0x61, 0x74, 0xe2, 0x02, 0x13, 0x4a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x07, 0x4a, 0x75,
	0x73, 0x74, 0x65, 0x61, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_justeat_offer_proto_rawDescOnce sync.Once
	file_justeat_offer_proto_rawDescData = file_justeat_offer_proto_rawDesc
)

func file_justeat_offer_proto_rawDescGZIP() []byte {
	file_justeat_offer_proto_rawDescOnce.Do(func() {
		file_justeat_offer_proto_rawDescData = protoimpl.X.CompressGZIP(file_justeat_offer_proto_rawDescData)
	})
	return file_justeat_offer_proto_rawDescData
}

var file_justeat_offer_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_justeat_offer_proto_goTypes = []interface{}{
	(*Offer)(nil),                 // 0: justeat.Offer
	(*Campaign)(nil),              // 1: justeat.Campaign
	(*OfferPeriod)(nil),           // 2: justeat.OfferPeriod
	(*QualifyingCondition)(nil),   // 3: justeat.QualifyingCondition
	(*Percent)(nil),               // 4: justeat.Percent
	(*Bogof)(nil),                 // 5: justeat.Bogof
	(*FreeItem)(nil),              // 6: justeat.FreeItem
	(*OfferProductSet)(nil),       // 7: justeat.OfferProductSet
	(*OfferProduct)(nil),          // 8: justeat.OfferProduct
	(*OfferProductCategory)(nil),  // 9: justeat.OfferProductCategory
	(*OfferProductModifier)(nil),  // 10: justeat.OfferProductModifier
	(*Period)(nil),                // 11: justeat.Period
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
}
var file_justeat_offer_proto_depIdxs = []int32{
	1,  // 0: justeat.Offer.campaign:type_name -> justeat.Campaign
	2,  // 1: justeat.Offer.offer_period:type_name -> justeat.OfferPeriod
	3,  // 2: justeat.Offer.qualifying_condition:type_name -> justeat.QualifyingCondition
	4,  // 3: justeat.Offer.percent:type_name -> justeat.Percent
	5,  // 4: justeat.Offer.bogof:type_name -> justeat.Bogof
	6,  // 5: justeat.Offer.free_item:type_name -> justeat.FreeItem
	11, // 6: justeat.OfferPeriod.running_hours:type_name -> justeat.Period
	11, // 7: justeat.OfferPeriod.running_dates:type_name -> justeat.Period
	7,  // 8: justeat.QualifyingCondition.product_set:type_name -> justeat.OfferProductSet
	7,  // 9: justeat.Bogof.product_set:type_name -> justeat.OfferProductSet
	7,  // 10: justeat.FreeItem.offer_products_set:type_name -> justeat.OfferProductSet
	8,  // 11: justeat.OfferProductSet.offer_product:type_name -> justeat.OfferProduct
	9,  // 12: justeat.OfferProductSet.product_categories:type_name -> justeat.OfferProductCategory
	10, // 13: justeat.OfferProduct.modifiers:type_name -> justeat.OfferProductModifier
	12, // 14: justeat.Period.from:type_name -> google.protobuf.Timestamp
	12, // 15: justeat.Period.to:type_name -> google.protobuf.Timestamp
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_justeat_offer_proto_init() }
func file_justeat_offer_proto_init() {
	if File_justeat_offer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_justeat_offer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Offer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_offer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Campaign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_offer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferPeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_offer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QualifyingCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_offer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Percent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_offer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bogof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_offer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_offer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferProductSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_offer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_offer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferProductCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_offer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferProductModifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_offer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Period); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_justeat_offer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_justeat_offer_proto_goTypes,
		DependencyIndexes: file_justeat_offer_proto_depIdxs,
		MessageInfos:      file_justeat_offer_proto_msgTypes,
	}.Build()
	File_justeat_offer_proto = out.File
	file_justeat_offer_proto_rawDesc = nil
	file_justeat_offer_proto_goTypes = nil
	file_justeat_offer_proto_depIdxs = nil
}
