// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: justeat/menu.proto

package justeat

import (
	flyt "github.com/flypay/events/pkg/flyt"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Deprecated: Do not use.
type ItemAction int32

const (
	ItemAction_ADDED   ItemAction = 0
	ItemAction_UPDATED ItemAction = 1
	ItemAction_REMOVED ItemAction = 2
)

// Enum value maps for ItemAction.
var (
	ItemAction_name = map[int32]string{
		0: "ADDED",
		1: "UPDATED",
		2: "REMOVED",
	}
	ItemAction_value = map[string]int32{
		"ADDED":   0,
		"UPDATED": 1,
		"REMOVED": 2,
	}
)

func (x ItemAction) Enum() *ItemAction {
	p := new(ItemAction)
	*p = x
	return p
}

func (x ItemAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemAction) Descriptor() protoreflect.EnumDescriptor {
	return file_justeat_menu_proto_enumTypes[0].Descriptor()
}

func (ItemAction) Type() protoreflect.EnumType {
	return &file_justeat_menu_proto_enumTypes[0]
}

func (x ItemAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemAction.Descriptor instead.
func (ItemAction) EnumDescriptor() ([]byte, []int) {
	return file_justeat_menu_proto_rawDescGZIP(), []int{0}
}

type ItemAction2 int32

const (
	ItemAction2_added   ItemAction2 = 0
	ItemAction2_updated ItemAction2 = 1
	ItemAction2_removed ItemAction2 = 2
)

// Enum value maps for ItemAction2.
var (
	ItemAction2_name = map[int32]string{
		0: "added",
		1: "updated",
		2: "removed",
	}
	ItemAction2_value = map[string]int32{
		"added":   0,
		"updated": 1,
		"removed": 2,
	}
)

func (x ItemAction2) Enum() *ItemAction2 {
	p := new(ItemAction2)
	*p = x
	return p
}

func (x ItemAction2) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemAction2) Descriptor() protoreflect.EnumDescriptor {
	return file_justeat_menu_proto_enumTypes[1].Descriptor()
}

func (ItemAction2) Type() protoreflect.EnumType {
	return &file_justeat_menu_proto_enumTypes[1]
}

func (x ItemAction2) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemAction2.Descriptor instead.
func (ItemAction2) EnumDescriptor() ([]byte, []int) {
	return file_justeat_menu_proto_rawDescGZIP(), []int{1}
}

type MenuChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Define your proto fields here
	Restaurant  *flyt.Ident      `protobuf:"bytes,1,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
	Added       *MenuPropertyIds `protobuf:"bytes,2,opt,name=added,proto3" json:"added,omitempty"`
	Updated     *MenuPropertyIds `protobuf:"bytes,3,opt,name=updated,proto3" json:"updated,omitempty"`
	Removed     *MenuPropertyIds `protobuf:"bytes,4,opt,name=removed,proto3" json:"removed,omitempty"`
	VersionDate string           `protobuf:"bytes,5,opt,name=version_date,json=versionDate,proto3" json:"version_date,omitempty"`
}

func (x *MenuChanged) Reset() {
	*x = MenuChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_menu_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuChanged) ProtoMessage() {}

func (x *MenuChanged) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_menu_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuChanged.ProtoReflect.Descriptor instead.
func (*MenuChanged) Descriptor() ([]byte, []int) {
	return file_justeat_menu_proto_rawDescGZIP(), []int{0}
}

func (x *MenuChanged) GetRestaurant() *flyt.Ident {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

func (x *MenuChanged) GetAdded() *MenuPropertyIds {
	if x != nil {
		return x.Added
	}
	return nil
}

func (x *MenuChanged) GetUpdated() *MenuPropertyIds {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *MenuChanged) GetRemoved() *MenuPropertyIds {
	if x != nil {
		return x.Removed
	}
	return nil
}

func (x *MenuChanged) GetVersionDate() string {
	if x != nil {
		return x.VersionDate
	}
	return ""
}

type MenuPropertyIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuItemIds     []string `protobuf:"bytes,1,rep,name=menu_item_ids,json=menuItemIds,proto3" json:"menu_item_ids,omitempty"`
	CategoryIds     []string `protobuf:"bytes,2,rep,name=category_ids,json=categoryIds,proto3" json:"category_ids,omitempty"`
	AvailabilityIds []string `protobuf:"bytes,3,rep,name=availability_ids,json=availabilityIds,proto3" json:"availability_ids,omitempty"`
}

func (x *MenuPropertyIds) Reset() {
	*x = MenuPropertyIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_menu_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuPropertyIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuPropertyIds) ProtoMessage() {}

func (x *MenuPropertyIds) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_menu_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuPropertyIds.ProtoReflect.Descriptor instead.
func (*MenuPropertyIds) Descriptor() ([]byte, []int) {
	return file_justeat_menu_proto_rawDescGZIP(), []int{1}
}

func (x *MenuPropertyIds) GetMenuItemIds() []string {
	if x != nil {
		return x.MenuItemIds
	}
	return nil
}

func (x *MenuPropertyIds) GetCategoryIds() []string {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

func (x *MenuPropertyIds) GetAvailabilityIds() []string {
	if x != nil {
		return x.AvailabilityIds
	}
	return nil
}

type CategoryChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	Restaurant *flyt.Ident `protobuf:"bytes,1,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
	// Deprecated: Do not use.
	Action       ItemAction  `protobuf:"varint,2,opt,name=action,proto3,enum=justeat.ItemAction" json:"action,omitempty"`
	CategoryId   string      `protobuf:"bytes,3,opt,name=category_id,json=CategoryId,proto3" json:"category_id,omitempty"`
	Category     *Category   `protobuf:"bytes,4,opt,name=category,json=Category,proto3" json:"category,omitempty"`
	VersionDate  string      `protobuf:"bytes,5,opt,name=version_date,json=MenuVersionDate,proto3" json:"version_date,omitempty"`
	RestaurantId string      `protobuf:"bytes,6,opt,name=restaurant_id,json=RestaurantId,proto3" json:"restaurant_id,omitempty"`
	Tenant       string      `protobuf:"bytes,7,opt,name=tenant,json=Tenant,proto3" json:"tenant,omitempty"`
	Action2      ItemAction2 `protobuf:"varint,8,opt,name=action2,json=Action,proto3,enum=justeat.ItemAction2" json:"action2,omitempty"`
}

func (x *CategoryChanged) Reset() {
	*x = CategoryChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_menu_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryChanged) ProtoMessage() {}

func (x *CategoryChanged) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_menu_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryChanged.ProtoReflect.Descriptor instead.
func (*CategoryChanged) Descriptor() ([]byte, []int) {
	return file_justeat_menu_proto_rawDescGZIP(), []int{2}
}

// Deprecated: Do not use.
func (x *CategoryChanged) GetRestaurant() *flyt.Ident {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

// Deprecated: Do not use.
func (x *CategoryChanged) GetAction() ItemAction {
	if x != nil {
		return x.Action
	}
	return ItemAction_ADDED
}

func (x *CategoryChanged) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *CategoryChanged) GetCategory() *Category {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *CategoryChanged) GetVersionDate() string {
	if x != nil {
		return x.VersionDate
	}
	return ""
}

func (x *CategoryChanged) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *CategoryChanged) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *CategoryChanged) GetAction2() ItemAction2 {
	if x != nil {
		return x.Action2
	}
	return ItemAction2_added
}

type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string   `protobuf:"bytes,1,opt,name=id,json=Id,proto3" json:"id,omitempty"`
	Name              string   `protobuf:"bytes,2,opt,name=name,json=Name,proto3" json:"name,omitempty"`
	Description       string   `protobuf:"bytes,3,opt,name=description,json=Description,proto3" json:"description,omitempty"`
	Buy1Get1Free      bool     `protobuf:"varint,4,opt,name=buy1_get1_free,json=Buy1Get1Free,proto3" json:"buy1_get1_free,omitempty"`
	Buy1Get1HalfPrice bool     `protobuf:"varint,5,opt,name=buy1_get1_half_price,json=Buy1Get1HalfPrice,proto3" json:"buy1_get1_half_price,omitempty"`
	ItemIds           []string `protobuf:"bytes,6,rep,name=item_ids,json=ItemIds,proto3" json:"item_ids,omitempty"`
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_menu_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_menu_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_justeat_menu_proto_rawDescGZIP(), []int{3}
}

func (x *Category) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Category) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Category) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Category) GetBuy1Get1Free() bool {
	if x != nil {
		return x.Buy1Get1Free
	}
	return false
}

func (x *Category) GetBuy1Get1HalfPrice() bool {
	if x != nil {
		return x.Buy1Get1HalfPrice
	}
	return false
}

func (x *Category) GetItemIds() []string {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

type AvailabilityChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	Restaurant *flyt.Ident `protobuf:"bytes,1,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
	// Deprecated: Do not use.
	Action         ItemAction      `protobuf:"varint,2,opt,name=action,proto3,enum=justeat.ItemAction" json:"action,omitempty"`
	AvailabilityId string          `protobuf:"bytes,3,opt,name=availability_id,json=AvailabilityId,proto3" json:"availability_id,omitempty"`
	Availability   *JEAvailability `protobuf:"bytes,4,opt,name=availability,json=Availability,proto3" json:"availability,omitempty"`
	VersionDate    string          `protobuf:"bytes,5,opt,name=version_date,json=MenuVersionDate,proto3" json:"version_date,omitempty"`
	RestaurantId   string          `protobuf:"bytes,6,opt,name=restaurant_id,json=RestaurantId,proto3" json:"restaurant_id,omitempty"`
	Tenant         string          `protobuf:"bytes,7,opt,name=tenant,json=Tenant,proto3" json:"tenant,omitempty"`
	Action2        ItemAction2     `protobuf:"varint,8,opt,name=action2,json=Action,proto3,enum=justeat.ItemAction2" json:"action2,omitempty"`
}

func (x *AvailabilityChanged) Reset() {
	*x = AvailabilityChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_menu_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailabilityChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailabilityChanged) ProtoMessage() {}

func (x *AvailabilityChanged) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_menu_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailabilityChanged.ProtoReflect.Descriptor instead.
func (*AvailabilityChanged) Descriptor() ([]byte, []int) {
	return file_justeat_menu_proto_rawDescGZIP(), []int{4}
}

// Deprecated: Do not use.
func (x *AvailabilityChanged) GetRestaurant() *flyt.Ident {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

// Deprecated: Do not use.
func (x *AvailabilityChanged) GetAction() ItemAction {
	if x != nil {
		return x.Action
	}
	return ItemAction_ADDED
}

func (x *AvailabilityChanged) GetAvailabilityId() string {
	if x != nil {
		return x.AvailabilityId
	}
	return ""
}

func (x *AvailabilityChanged) GetAvailability() *JEAvailability {
	if x != nil {
		return x.Availability
	}
	return nil
}

func (x *AvailabilityChanged) GetVersionDate() string {
	if x != nil {
		return x.VersionDate
	}
	return ""
}

func (x *AvailabilityChanged) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *AvailabilityChanged) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *AvailabilityChanged) GetAction2() ItemAction2 {
	if x != nil {
		return x.Action2
	}
	return ItemAction2_added
}

type ItemChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	Restaurant *flyt.Ident `protobuf:"bytes,1,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
	// Deprecated: Do not use.
	Action       ItemAction  `protobuf:"varint,2,opt,name=action,proto3,enum=justeat.ItemAction" json:"action,omitempty"`
	ItemId       string      `protobuf:"bytes,3,opt,name=item_id,json=ItemId,proto3" json:"item_id,omitempty"`
	Item         *JEMenuItem `protobuf:"bytes,4,opt,name=item,json=Item,proto3" json:"item,omitempty"`
	VersionDate  string      `protobuf:"bytes,5,opt,name=version_date,json=MenuVersionDate,proto3" json:"version_date,omitempty"`
	RestaurantId string      `protobuf:"bytes,6,opt,name=restaurant_id,json=RestaurantId,proto3" json:"restaurant_id,omitempty"`
	Tenant       string      `protobuf:"bytes,7,opt,name=tenant,json=Tenant,proto3" json:"tenant,omitempty"`
	Action2      ItemAction2 `protobuf:"varint,8,opt,name=action2,json=Action,proto3,enum=justeat.ItemAction2" json:"action2,omitempty"`
}

func (x *ItemChanged) Reset() {
	*x = ItemChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_menu_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemChanged) ProtoMessage() {}

func (x *ItemChanged) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_menu_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemChanged.ProtoReflect.Descriptor instead.
func (*ItemChanged) Descriptor() ([]byte, []int) {
	return file_justeat_menu_proto_rawDescGZIP(), []int{5}
}

// Deprecated: Do not use.
func (x *ItemChanged) GetRestaurant() *flyt.Ident {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

// Deprecated: Do not use.
func (x *ItemChanged) GetAction() ItemAction {
	if x != nil {
		return x.Action
	}
	return ItemAction_ADDED
}

func (x *ItemChanged) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *ItemChanged) GetItem() *JEMenuItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *ItemChanged) GetVersionDate() string {
	if x != nil {
		return x.VersionDate
	}
	return ""
}

func (x *ItemChanged) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *ItemChanged) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *ItemChanged) GetAction2() ItemAction2 {
	if x != nil {
		return x.Action2
	}
	return ItemAction2_added
}

type ItemsStatusUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId    string   `protobuf:"bytes,1,opt,name=restaurant_id,json=RestaurantId,proto3" json:"restaurant_id,omitempty"`
	Tenant          string   `protobuf:"bytes,2,opt,name=tenant,json=Tenant,proto3" json:"tenant,omitempty"`
	VariationIds    []string `protobuf:"bytes,3,rep,name=variation_ids,json=VariationIds,proto3" json:"variation_ids,omitempty"`
	ModifierIds     []string `protobuf:"bytes,4,rep,name=modifier_ids,json=ModifierIds,proto3" json:"modifier_ids,omitempty"`
	Status          string   `protobuf:"bytes,5,opt,name=status,json=Status,proto3" json:"status,omitempty"`
	Author          string   `protobuf:"bytes,6,opt,name=author,json=Author,proto3" json:"author,omitempty"`
	NextAvailableAt string   `protobuf:"bytes,7,opt,name=next_available_at,json=NextAvailableAt,proto3" json:"next_available_at,omitempty"`
}

func (x *ItemsStatusUpdated) Reset() {
	*x = ItemsStatusUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_menu_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemsStatusUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemsStatusUpdated) ProtoMessage() {}

func (x *ItemsStatusUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_menu_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemsStatusUpdated.ProtoReflect.Descriptor instead.
func (*ItemsStatusUpdated) Descriptor() ([]byte, []int) {
	return file_justeat_menu_proto_rawDescGZIP(), []int{6}
}

func (x *ItemsStatusUpdated) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *ItemsStatusUpdated) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *ItemsStatusUpdated) GetVariationIds() []string {
	if x != nil {
		return x.VariationIds
	}
	return nil
}

func (x *ItemsStatusUpdated) GetModifierIds() []string {
	if x != nil {
		return x.ModifierIds
	}
	return nil
}

func (x *ItemsStatusUpdated) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ItemsStatusUpdated) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *ItemsStatusUpdated) GetNextAvailableAt() string {
	if x != nil {
		return x.NextAvailableAt
	}
	return ""
}

var File_justeat_menu_proto protoreflect.FileDescriptor

var file_justeat_menu_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x1a, 0x15, 0x66,
	0x6c, 0x79, 0x74, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x66, 0x6c, 0x79, 0x74, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2f,
	0x6d, 0x65, 0x6e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15,
	0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x02, 0x0a, 0x0b, 0x4d, 0x65, 0x6e, 0x75, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x6c, 0x79, 0x74,
	0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x4d, 0x65, 0x6e, 0x75,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x73, 0x52, 0x05, 0x61, 0x64, 0x64,
	0x65, 0x64, 0x12, 0x32, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x4d, 0x65,
	0x6e, 0x75, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x73, 0x52, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61,
	0x74, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64,
	0x73, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x3a, 0x18, 0x82,
	0xb5, 0x18, 0x14, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x0f, 0x4d, 0x65, 0x6e, 0x75,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x6d,
	0x65, 0x6e, 0x75, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x73, 0x22, 0x87, 0x03,
	0x0a, 0x0f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x12, 0x2f, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74,
	0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4d, 0x65, 0x6e, 0x75, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65,
	0x61, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x52, 0x06,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x2f, 0x82, 0xb5, 0x18, 0x18, 0x6a, 0x75, 0x73, 0x74,
	0x65, 0x61, 0x74, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0xa2, 0xbb, 0x18, 0x0f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x75,
	0x79, 0x31, 0x5f, 0x67, 0x65, 0x74, 0x31, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x42, 0x75, 0x79, 0x31, 0x47, 0x65, 0x74, 0x31, 0x46, 0x72, 0x65, 0x65,
	0x12, 0x2f, 0x0a, 0x14, 0x62, 0x75, 0x79, 0x31, 0x5f, 0x67, 0x65, 0x74, 0x31, 0x5f, 0x68, 0x61,
	0x6c, 0x66, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x42, 0x75, 0x79, 0x31, 0x47, 0x65, 0x74, 0x31, 0x48, 0x61, 0x6c, 0x66, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x22, 0xa9, 0x03, 0x0a,
	0x13, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x3b, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e,
	0x4a, 0x45, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0c,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x0c,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x4d, 0x65, 0x6e, 0x75, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x12, 0x2d, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a,
	0x37, 0x82, 0xb5, 0x18, 0x1c, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0xa2, 0xbb, 0x18, 0x13, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x22, 0xed, 0x02, 0x0a, 0x0b, 0x49, 0x74, 0x65,
	0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66,
	0x6c, 0x79, 0x74, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0a, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6a, 0x75, 0x73, 0x74,
	0x65, 0x61, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x02,
	0x18, 0x01, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x4a, 0x45, 0x4d, 0x65,
	0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x25, 0x0a, 0x0c,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x4d, 0x65, 0x6e, 0x75, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x12, 0x2d, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a,
	0x27, 0x82, 0xb5, 0x18, 0x14, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x69, 0x74, 0x65,
	0x6d, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0xa2, 0xbb, 0x18, 0x0b, 0x69, 0x74, 0x65,
	0x6d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x22, 0xad, 0x02, 0x0a, 0x12, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x4e, 0x65, 0x78, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x74,
	0x3a, 0x36, 0x82, 0xb5, 0x18, 0x1c, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0xa2, 0xbb, 0x18, 0x12, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x2a, 0x35, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x44, 0x44, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x02, 0x1a, 0x02, 0x18, 0x01, 0x2a,
	0x32, 0x0a, 0x0b, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x12, 0x09,
	0x0a, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x10, 0x02, 0x42, 0x7a, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65,
	0x61, 0x74, 0x42, 0x09, 0x4d, 0x65, 0x6e, 0x75, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x79, 0x70,
	0x61, 0x79, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6a, 0x75,
	0x73, 0x74, 0x65, 0x61, 0x74, 0xa2, 0x02, 0x03, 0x4a, 0x58, 0x58, 0xaa, 0x02, 0x07, 0x4a, 0x75,
	0x73, 0x74, 0x65, 0x61, 0x74, 0xca, 0x02, 0x07, 0x4a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0xe2,
	0x02, 0x13, 0x4a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x07, 0x4a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_justeat_menu_proto_rawDescOnce sync.Once
	file_justeat_menu_proto_rawDescData = file_justeat_menu_proto_rawDesc
)

func file_justeat_menu_proto_rawDescGZIP() []byte {
	file_justeat_menu_proto_rawDescOnce.Do(func() {
		file_justeat_menu_proto_rawDescData = protoimpl.X.CompressGZIP(file_justeat_menu_proto_rawDescData)
	})
	return file_justeat_menu_proto_rawDescData
}

var file_justeat_menu_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_justeat_menu_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_justeat_menu_proto_goTypes = []interface{}{
	(ItemAction)(0),             // 0: justeat.ItemAction
	(ItemAction2)(0),            // 1: justeat.ItemAction2
	(*MenuChanged)(nil),         // 2: justeat.MenuChanged
	(*MenuPropertyIds)(nil),     // 3: justeat.MenuPropertyIds
	(*CategoryChanged)(nil),     // 4: justeat.CategoryChanged
	(*Category)(nil),            // 5: justeat.Category
	(*AvailabilityChanged)(nil), // 6: justeat.AvailabilityChanged
	(*ItemChanged)(nil),         // 7: justeat.ItemChanged
	(*ItemsStatusUpdated)(nil),  // 8: justeat.ItemsStatusUpdated
	(*flyt.Ident)(nil),          // 9: flyt.Ident
	(*JEAvailability)(nil),      // 10: justeat.JEAvailability
	(*JEMenuItem)(nil),          // 11: justeat.JEMenuItem
}
var file_justeat_menu_proto_depIdxs = []int32{
	9,  // 0: justeat.MenuChanged.restaurant:type_name -> flyt.Ident
	3,  // 1: justeat.MenuChanged.added:type_name -> justeat.MenuPropertyIds
	3,  // 2: justeat.MenuChanged.updated:type_name -> justeat.MenuPropertyIds
	3,  // 3: justeat.MenuChanged.removed:type_name -> justeat.MenuPropertyIds
	9,  // 4: justeat.CategoryChanged.restaurant:type_name -> flyt.Ident
	0,  // 5: justeat.CategoryChanged.action:type_name -> justeat.ItemAction
	5,  // 6: justeat.CategoryChanged.category:type_name -> justeat.Category
	1,  // 7: justeat.CategoryChanged.action2:type_name -> justeat.ItemAction2
	9,  // 8: justeat.AvailabilityChanged.restaurant:type_name -> flyt.Ident
	0,  // 9: justeat.AvailabilityChanged.action:type_name -> justeat.ItemAction
	10, // 10: justeat.AvailabilityChanged.availability:type_name -> justeat.JEAvailability
	1,  // 11: justeat.AvailabilityChanged.action2:type_name -> justeat.ItemAction2
	9,  // 12: justeat.ItemChanged.restaurant:type_name -> flyt.Ident
	0,  // 13: justeat.ItemChanged.action:type_name -> justeat.ItemAction
	11, // 14: justeat.ItemChanged.item:type_name -> justeat.JEMenuItem
	1,  // 15: justeat.ItemChanged.action2:type_name -> justeat.ItemAction2
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_justeat_menu_proto_init() }
func file_justeat_menu_proto_init() {
	if File_justeat_menu_proto != nil {
		return
	}
	file_justeat_menutype_proto_init()
	file_justeat_options_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_justeat_menu_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_menu_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuPropertyIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_menu_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_menu_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_menu_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailabilityChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_menu_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_menu_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemsStatusUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_justeat_menu_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_justeat_menu_proto_goTypes,
		DependencyIndexes: file_justeat_menu_proto_depIdxs,
		EnumInfos:         file_justeat_menu_proto_enumTypes,
		MessageInfos:      file_justeat_menu_proto_msgTypes,
	}.Build()
	File_justeat_menu_proto = out.File
	file_justeat_menu_proto_rawDesc = nil
	file_justeat_menu_proto_goTypes = nil
	file_justeat_menu_proto_depIdxs = nil
}
