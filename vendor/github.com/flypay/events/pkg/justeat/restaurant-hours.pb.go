// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: justeat/restaurant-hours.proto

package justeat

import (
	flyt "github.com/flypay/events/pkg/flyt"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Deprecated: Do not use.
type ServiceType int32

const (
	ServiceType_DELIVERY   ServiceType = 0
	ServiceType_COLLECTION ServiceType = 1
)

// Enum value maps for ServiceType.
var (
	ServiceType_name = map[int32]string{
		0: "DELIVERY",
		1: "COLLECTION",
	}
	ServiceType_value = map[string]int32{
		"DELIVERY":   0,
		"COLLECTION": 1,
	}
)

func (x ServiceType) Enum() *ServiceType {
	p := new(ServiceType)
	*p = x
	return p
}

func (x ServiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_justeat_restaurant_hours_proto_enumTypes[0].Descriptor()
}

func (ServiceType) Type() protoreflect.EnumType {
	return &file_justeat_restaurant_hours_proto_enumTypes[0]
}

func (x ServiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceType.Descriptor instead.
func (ServiceType) EnumDescriptor() ([]byte, []int) {
	return file_justeat_restaurant_hours_proto_rawDescGZIP(), []int{0}
}

// Deprecated: Do not use.
type RestaurantHoursUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Define your proto fields here
	Restaurant            *flyt.Ident              `protobuf:"bytes,1,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
	TimeZone              string                   `protobuf:"bytes,2,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
	RestaurantActualHours []*RestaurantActualHours `protobuf:"bytes,3,rep,name=restaurant_actual_hours,json=restaurantActualHours,proto3" json:"restaurant_actual_hours,omitempty"`
	DateUpdated           string                   `protobuf:"bytes,4,opt,name=date_updated,json=dateUpdated,proto3" json:"date_updated,omitempty"`
}

func (x *RestaurantHoursUpdated) Reset() {
	*x = RestaurantHoursUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_hours_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantHoursUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantHoursUpdated) ProtoMessage() {}

func (x *RestaurantHoursUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_hours_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantHoursUpdated.ProtoReflect.Descriptor instead.
func (*RestaurantHoursUpdated) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_hours_proto_rawDescGZIP(), []int{0}
}

func (x *RestaurantHoursUpdated) GetRestaurant() *flyt.Ident {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

func (x *RestaurantHoursUpdated) GetTimeZone() string {
	if x != nil {
		return x.TimeZone
	}
	return ""
}

func (x *RestaurantHoursUpdated) GetRestaurantActualHours() []*RestaurantActualHours {
	if x != nil {
		return x.RestaurantActualHours
	}
	return nil
}

func (x *RestaurantHoursUpdated) GetDateUpdated() string {
	if x != nil {
		return x.DateUpdated
	}
	return ""
}

type RestaurantActualHours struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailabilityId       string                  `protobuf:"bytes,1,opt,name=availability_id,json=availabilityId,proto3" json:"availability_id,omitempty"`
	ServiceType          ServiceType             `protobuf:"varint,2,opt,name=service_type,json=serviceType,proto3,enum=justeat.ServiceType" json:"service_type,omitempty"`
	OrderTimes           []*OrderTimes           `protobuf:"bytes,3,rep,name=order_times,json=orderTimes,proto3" json:"order_times,omitempty"`
	AvailabilityHours    []*AvailabilityHours    `protobuf:"bytes,4,rep,name=availability_hours,json=availabilityHours,proto3" json:"availability_hours,omitempty"`
	PreOrderEnabledTimes []*PreOrderEnabledTimes `protobuf:"bytes,5,rep,name=pre_order_enabled_times,json=preOrderEnabledTimes,proto3" json:"pre_order_enabled_times,omitempty"`
	OrderReadyTimes      []*OrderReadyTimes      `protobuf:"bytes,6,rep,name=order_ready_times,json=orderReadyTimes,proto3" json:"order_ready_times,omitempty"`
	DateUpdated          string                  `protobuf:"bytes,7,opt,name=date_updated,json=dateUpdated,proto3" json:"date_updated,omitempty"`
}

func (x *RestaurantActualHours) Reset() {
	*x = RestaurantActualHours{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_hours_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantActualHours) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantActualHours) ProtoMessage() {}

func (x *RestaurantActualHours) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_hours_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantActualHours.ProtoReflect.Descriptor instead.
func (*RestaurantActualHours) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_hours_proto_rawDescGZIP(), []int{1}
}

func (x *RestaurantActualHours) GetAvailabilityId() string {
	if x != nil {
		return x.AvailabilityId
	}
	return ""
}

func (x *RestaurantActualHours) GetServiceType() ServiceType {
	if x != nil {
		return x.ServiceType
	}
	return ServiceType_DELIVERY
}

func (x *RestaurantActualHours) GetOrderTimes() []*OrderTimes {
	if x != nil {
		return x.OrderTimes
	}
	return nil
}

func (x *RestaurantActualHours) GetAvailabilityHours() []*AvailabilityHours {
	if x != nil {
		return x.AvailabilityHours
	}
	return nil
}

func (x *RestaurantActualHours) GetPreOrderEnabledTimes() []*PreOrderEnabledTimes {
	if x != nil {
		return x.PreOrderEnabledTimes
	}
	return nil
}

func (x *RestaurantActualHours) GetOrderReadyTimes() []*OrderReadyTimes {
	if x != nil {
		return x.OrderReadyTimes
	}
	return nil
}

func (x *RestaurantActualHours) GetDateUpdated() string {
	if x != nil {
		return x.DateUpdated
	}
	return ""
}

type OrderTimes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DayOfWeek DayOfWeek  `protobuf:"varint,1,opt,name=day_of_week,json=dayOfWeek,proto3,enum=justeat.DayOfWeek" json:"day_of_week,omitempty"`
	TimeRange *TimeRange `protobuf:"bytes,2,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
}

func (x *OrderTimes) Reset() {
	*x = OrderTimes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_hours_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderTimes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderTimes) ProtoMessage() {}

func (x *OrderTimes) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_hours_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderTimes.ProtoReflect.Descriptor instead.
func (*OrderTimes) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_hours_proto_rawDescGZIP(), []int{2}
}

func (x *OrderTimes) GetDayOfWeek() DayOfWeek {
	if x != nil {
		return x.DayOfWeek
	}
	return DayOfWeek_MONDAY
}

func (x *OrderTimes) GetTimeRange() *TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

type TimeRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LowerBound int32 `protobuf:"varint,1,opt,name=lower_bound,json=LowerBound,proto3" json:"lower_bound,omitempty"`
	UpperBound int32 `protobuf:"varint,2,opt,name=upper_bound,json=UpperBound,proto3" json:"upper_bound,omitempty"`
}

func (x *TimeRange) Reset() {
	*x = TimeRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_hours_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRange) ProtoMessage() {}

func (x *TimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_hours_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRange.ProtoReflect.Descriptor instead.
func (*TimeRange) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_hours_proto_rawDescGZIP(), []int{3}
}

func (x *TimeRange) GetLowerBound() int32 {
	if x != nil {
		return x.LowerBound
	}
	return 0
}

func (x *TimeRange) GetUpperBound() int32 {
	if x != nil {
		return x.UpperBound
	}
	return 0
}

type AvailabilityHours struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DayOfWeek   DayOfWeek      `protobuf:"varint,1,opt,name=day_of_week,json=dayOfWeek,proto3,enum=justeat.DayOfWeek" json:"day_of_week,omitempty"`
	ActualHours []*ActualHours `protobuf:"bytes,2,rep,name=actual_hours,json=actualHours,proto3" json:"actual_hours,omitempty"`
}

func (x *AvailabilityHours) Reset() {
	*x = AvailabilityHours{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_hours_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailabilityHours) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailabilityHours) ProtoMessage() {}

func (x *AvailabilityHours) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_hours_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailabilityHours.ProtoReflect.Descriptor instead.
func (*AvailabilityHours) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_hours_proto_rawDescGZIP(), []int{4}
}

func (x *AvailabilityHours) GetDayOfWeek() DayOfWeek {
	if x != nil {
		return x.DayOfWeek
	}
	return DayOfWeek_MONDAY
}

func (x *AvailabilityHours) GetActualHours() []*ActualHours {
	if x != nil {
		return x.ActualHours
	}
	return nil
}

type ActualHours struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstOrderTime    string `protobuf:"bytes,1,opt,name=first_order_time,json=FirstOrderTime,proto3" json:"first_order_time,omitempty"`
	LastOrderTime     string `protobuf:"bytes,2,opt,name=last_order_time,json=LastOrderTime,proto3" json:"last_order_time,omitempty"`
	FirstReadyTime    string `protobuf:"bytes,3,opt,name=first_ready_time,json=FirstReadyTime,proto3" json:"first_ready_time,omitempty"`
	LastReadyTime     string `protobuf:"bytes,4,opt,name=last_ready_time,json=LastReadyTime,proto3" json:"last_ready_time,omitempty"`
	FirstOrderTimeIso string `protobuf:"bytes,5,opt,name=first_order_time_iso,json=FirstOrderTimeISO,proto3" json:"first_order_time_iso,omitempty"`
	LastOrderTimeIso  string `protobuf:"bytes,6,opt,name=last_order_time_iso,json=LastOrderTimeISO,proto3" json:"last_order_time_iso,omitempty"`
	FirstReadyTimeIso string `protobuf:"bytes,7,opt,name=first_ready_time_iso,json=FirstReadyTimeISO,proto3" json:"first_ready_time_iso,omitempty"`
	LastReadyTimeIso  string `protobuf:"bytes,8,opt,name=last_ready_time_iso,json=LastReadyTimeISO,proto3" json:"last_ready_time_iso,omitempty"`
}

func (x *ActualHours) Reset() {
	*x = ActualHours{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_hours_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActualHours) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActualHours) ProtoMessage() {}

func (x *ActualHours) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_hours_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActualHours.ProtoReflect.Descriptor instead.
func (*ActualHours) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_hours_proto_rawDescGZIP(), []int{5}
}

func (x *ActualHours) GetFirstOrderTime() string {
	if x != nil {
		return x.FirstOrderTime
	}
	return ""
}

func (x *ActualHours) GetLastOrderTime() string {
	if x != nil {
		return x.LastOrderTime
	}
	return ""
}

func (x *ActualHours) GetFirstReadyTime() string {
	if x != nil {
		return x.FirstReadyTime
	}
	return ""
}

func (x *ActualHours) GetLastReadyTime() string {
	if x != nil {
		return x.LastReadyTime
	}
	return ""
}

func (x *ActualHours) GetFirstOrderTimeIso() string {
	if x != nil {
		return x.FirstOrderTimeIso
	}
	return ""
}

func (x *ActualHours) GetLastOrderTimeIso() string {
	if x != nil {
		return x.LastOrderTimeIso
	}
	return ""
}

func (x *ActualHours) GetFirstReadyTimeIso() string {
	if x != nil {
		return x.FirstReadyTimeIso
	}
	return ""
}

func (x *ActualHours) GetLastReadyTimeIso() string {
	if x != nil {
		return x.LastReadyTimeIso
	}
	return ""
}

type PreOrderEnabledTimes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DayOfWeek  DayOfWeek     `protobuf:"varint,1,opt,name=day_of_week,json=dayOfWeek,proto3,enum=justeat.DayOfWeek" json:"day_of_week,omitempty"`
	ClockRange []*ClockRange `protobuf:"bytes,2,rep,name=clock_range,json=clockRange,proto3" json:"clock_range,omitempty"`
}

func (x *PreOrderEnabledTimes) Reset() {
	*x = PreOrderEnabledTimes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_hours_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreOrderEnabledTimes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreOrderEnabledTimes) ProtoMessage() {}

func (x *PreOrderEnabledTimes) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_hours_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreOrderEnabledTimes.ProtoReflect.Descriptor instead.
func (*PreOrderEnabledTimes) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_hours_proto_rawDescGZIP(), []int{6}
}

func (x *PreOrderEnabledTimes) GetDayOfWeek() DayOfWeek {
	if x != nil {
		return x.DayOfWeek
	}
	return DayOfWeek_MONDAY
}

func (x *PreOrderEnabledTimes) GetClockRange() []*ClockRange {
	if x != nil {
		return x.ClockRange
	}
	return nil
}

type ClockRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start string `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   string `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *ClockRange) Reset() {
	*x = ClockRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_hours_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClockRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClockRange) ProtoMessage() {}

func (x *ClockRange) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_hours_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClockRange.ProtoReflect.Descriptor instead.
func (*ClockRange) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_hours_proto_rawDescGZIP(), []int{7}
}

func (x *ClockRange) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *ClockRange) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

type OrderReadyTimes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DayOfWeek          DayOfWeek             `protobuf:"varint,1,opt,name=day_of_week,json=dayOfWeek,proto3,enum=justeat.DayOfWeek" json:"day_of_week,omitempty"`
	DayOrderReadyTimes []*DayOrderReadyTimes `protobuf:"bytes,2,rep,name=day_order_ready_times,json=dayOrderReadyTimes,proto3" json:"day_order_ready_times,omitempty"`
}

func (x *OrderReadyTimes) Reset() {
	*x = OrderReadyTimes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_hours_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderReadyTimes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderReadyTimes) ProtoMessage() {}

func (x *OrderReadyTimes) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_hours_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderReadyTimes.ProtoReflect.Descriptor instead.
func (*OrderReadyTimes) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_hours_proto_rawDescGZIP(), []int{8}
}

func (x *OrderReadyTimes) GetDayOfWeek() DayOfWeek {
	if x != nil {
		return x.DayOfWeek
	}
	return DayOfWeek_MONDAY
}

func (x *OrderReadyTimes) GetDayOrderReadyTimes() []*DayOrderReadyTimes {
	if x != nil {
		return x.DayOrderReadyTimes
	}
	return nil
}

type DayOrderReadyTimes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DayOfWeek  DayOfWeek     `protobuf:"varint,1,opt,name=day_of_week,json=dayOfWeek,proto3,enum=justeat.DayOfWeek" json:"day_of_week,omitempty"`
	ClockRange []*ClockRange `protobuf:"bytes,2,rep,name=clock_range,json=clockRange,proto3" json:"clock_range,omitempty"`
}

func (x *DayOrderReadyTimes) Reset() {
	*x = DayOrderReadyTimes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_hours_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DayOrderReadyTimes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayOrderReadyTimes) ProtoMessage() {}

func (x *DayOrderReadyTimes) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_hours_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayOrderReadyTimes.ProtoReflect.Descriptor instead.
func (*DayOrderReadyTimes) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_hours_proto_rawDescGZIP(), []int{9}
}

func (x *DayOrderReadyTimes) GetDayOfWeek() DayOfWeek {
	if x != nil {
		return x.DayOfWeek
	}
	return DayOfWeek_MONDAY
}

func (x *DayOrderReadyTimes) GetClockRange() []*ClockRange {
	if x != nil {
		return x.ClockRange
	}
	return nil
}

var File_justeat_restaurant_hours_proto protoreflect.FileDescriptor

var file_justeat_restaurant_hours_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x2d, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x1a, 0x15, 0x66, 0x6c, 0x79, 0x74, 0x2f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x10, 0x66, 0x6c, 0x79, 0x74, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x16, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2f, 0x77, 0x65, 0x65, 0x6b,
	0x64, 0x61, 0x79, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x85, 0x02, 0x0a, 0x16, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x6c, 0x79, 0x74,
	0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12,
	0x56, 0x0a, 0x17, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x48, 0x6f, 0x75, 0x72, 0x73,
	0x52, 0x15, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x3a, 0x26, 0x18, 0x01, 0x82, 0xb5,
	0x18, 0x20, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x22, 0xb9, 0x03, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x0f,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6a, 0x75,
	0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34,
	0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x12, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x11, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12,
	0x54, 0x0a, 0x17, 0x70, 0x72, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52,
	0x14, 0x70, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x11, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x0f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x73,
	0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0b,
	0x64, 0x61, 0x79, 0x5f, 0x6f, 0x66, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x12, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x44, 0x61, 0x79, 0x4f,
	0x66, 0x57, 0x65, 0x65, 0x6b, 0x52, 0x09, 0x64, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b,
	0x12, 0x31, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x22, 0x4d, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x42, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x55, 0x70, 0x70, 0x65, 0x72, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x11, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x64, 0x61, 0x79, 0x5f,
	0x6f, 0x66, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65,
	0x6b, 0x52, 0x09, 0x64, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x37, 0x0a, 0x0c,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x41, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x48, 0x6f, 0x75, 0x72, 0x73, 0x22, 0xf1, 0x02, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4c, 0x61, 0x73, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4c, 0x61, 0x73, 0x74,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x73,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x53, 0x4f, 0x12, 0x2d, 0x0a, 0x13, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x73,
	0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x4c, 0x61, 0x73, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x53, 0x4f, 0x12, 0x2f, 0x0a, 0x14, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x73,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x53, 0x4f, 0x12, 0x2d, 0x0a, 0x13, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x73,
	0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x53, 0x4f, 0x22, 0x80, 0x01, 0x0a, 0x14, 0x50, 0x72,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x64, 0x61, 0x79, 0x5f, 0x6f, 0x66, 0x5f, 0x77, 0x65, 0x65,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61,
	0x74, 0x2e, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x52, 0x09, 0x64, 0x61, 0x79,
	0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6a, 0x75,
	0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x34, 0x0a, 0x0a,
	0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65,
	0x6e, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x64, 0x61, 0x79, 0x5f, 0x6f, 0x66,
	0x5f, 0x77, 0x65, 0x65, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6a, 0x75,
	0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x52,
	0x09, 0x64, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x4e, 0x0a, 0x15, 0x64, 0x61,
	0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6a, 0x75, 0x73, 0x74,
	0x65, 0x61, 0x74, 0x2e, 0x44, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x12, 0x64, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x7e, 0x0a, 0x12, 0x44, 0x61,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x12, 0x32, 0x0a, 0x0b, 0x64, 0x61, 0x79, 0x5f, 0x6f, 0x66, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e,
	0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x52, 0x09, 0x64, 0x61, 0x79, 0x4f, 0x66,
	0x57, 0x65, 0x65, 0x6b, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6a, 0x75, 0x73, 0x74,
	0x65, 0x61, 0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0a,
	0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2a, 0x2f, 0x0a, 0x0b, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x45, 0x4c,
	0x49, 0x56, 0x45, 0x52, 0x59, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4c, 0x4c, 0x45,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x1a, 0x02, 0x18, 0x01, 0x42, 0x85, 0x01, 0x0a, 0x0b,
	0x63, 0x6f, 0x6d, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x42, 0x14, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x66, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0xa2, 0x02, 0x03, 0x4a, 0x58, 0x58, 0xaa,
	0x02, 0x07, 0x4a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0xca, 0x02, 0x07, 0x4a, 0x75, 0x73, 0x74,
	0x65, 0x61, 0x74, 0xe2, 0x02, 0x13, 0x4a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x07, 0x4a, 0x75, 0x73, 0x74,
	0x65, 0x61, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_justeat_restaurant_hours_proto_rawDescOnce sync.Once
	file_justeat_restaurant_hours_proto_rawDescData = file_justeat_restaurant_hours_proto_rawDesc
)

func file_justeat_restaurant_hours_proto_rawDescGZIP() []byte {
	file_justeat_restaurant_hours_proto_rawDescOnce.Do(func() {
		file_justeat_restaurant_hours_proto_rawDescData = protoimpl.X.CompressGZIP(file_justeat_restaurant_hours_proto_rawDescData)
	})
	return file_justeat_restaurant_hours_proto_rawDescData
}

var file_justeat_restaurant_hours_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_justeat_restaurant_hours_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_justeat_restaurant_hours_proto_goTypes = []interface{}{
	(ServiceType)(0),               // 0: justeat.ServiceType
	(*RestaurantHoursUpdated)(nil), // 1: justeat.RestaurantHoursUpdated
	(*RestaurantActualHours)(nil),  // 2: justeat.RestaurantActualHours
	(*OrderTimes)(nil),             // 3: justeat.OrderTimes
	(*TimeRange)(nil),              // 4: justeat.TimeRange
	(*AvailabilityHours)(nil),      // 5: justeat.AvailabilityHours
	(*ActualHours)(nil),            // 6: justeat.ActualHours
	(*PreOrderEnabledTimes)(nil),   // 7: justeat.PreOrderEnabledTimes
	(*ClockRange)(nil),             // 8: justeat.ClockRange
	(*OrderReadyTimes)(nil),        // 9: justeat.OrderReadyTimes
	(*DayOrderReadyTimes)(nil),     // 10: justeat.DayOrderReadyTimes
	(*flyt.Ident)(nil),             // 11: flyt.Ident
	(DayOfWeek)(0),                 // 12: justeat.DayOfWeek
}
var file_justeat_restaurant_hours_proto_depIdxs = []int32{
	11, // 0: justeat.RestaurantHoursUpdated.restaurant:type_name -> flyt.Ident
	2,  // 1: justeat.RestaurantHoursUpdated.restaurant_actual_hours:type_name -> justeat.RestaurantActualHours
	0,  // 2: justeat.RestaurantActualHours.service_type:type_name -> justeat.ServiceType
	3,  // 3: justeat.RestaurantActualHours.order_times:type_name -> justeat.OrderTimes
	5,  // 4: justeat.RestaurantActualHours.availability_hours:type_name -> justeat.AvailabilityHours
	7,  // 5: justeat.RestaurantActualHours.pre_order_enabled_times:type_name -> justeat.PreOrderEnabledTimes
	9,  // 6: justeat.RestaurantActualHours.order_ready_times:type_name -> justeat.OrderReadyTimes
	12, // 7: justeat.OrderTimes.day_of_week:type_name -> justeat.DayOfWeek
	4,  // 8: justeat.OrderTimes.time_range:type_name -> justeat.TimeRange
	12, // 9: justeat.AvailabilityHours.day_of_week:type_name -> justeat.DayOfWeek
	6,  // 10: justeat.AvailabilityHours.actual_hours:type_name -> justeat.ActualHours
	12, // 11: justeat.PreOrderEnabledTimes.day_of_week:type_name -> justeat.DayOfWeek
	8,  // 12: justeat.PreOrderEnabledTimes.clock_range:type_name -> justeat.ClockRange
	12, // 13: justeat.OrderReadyTimes.day_of_week:type_name -> justeat.DayOfWeek
	10, // 14: justeat.OrderReadyTimes.day_order_ready_times:type_name -> justeat.DayOrderReadyTimes
	12, // 15: justeat.DayOrderReadyTimes.day_of_week:type_name -> justeat.DayOfWeek
	8,  // 16: justeat.DayOrderReadyTimes.clock_range:type_name -> justeat.ClockRange
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_justeat_restaurant_hours_proto_init() }
func file_justeat_restaurant_hours_proto_init() {
	if File_justeat_restaurant_hours_proto != nil {
		return
	}
	file_justeat_weekdays_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_justeat_restaurant_hours_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestaurantHoursUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_hours_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestaurantActualHours); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_hours_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderTimes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_hours_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_hours_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailabilityHours); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_hours_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActualHours); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_hours_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreOrderEnabledTimes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_hours_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClockRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_hours_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderReadyTimes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_hours_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DayOrderReadyTimes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_justeat_restaurant_hours_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_justeat_restaurant_hours_proto_goTypes,
		DependencyIndexes: file_justeat_restaurant_hours_proto_depIdxs,
		EnumInfos:         file_justeat_restaurant_hours_proto_enumTypes,
		MessageInfos:      file_justeat_restaurant_hours_proto_msgTypes,
	}.Build()
	File_justeat_restaurant_hours_proto = out.File
	file_justeat_restaurant_hours_proto_rawDesc = nil
	file_justeat_restaurant_hours_proto_goTypes = nil
	file_justeat_restaurant_hours_proto_depIdxs = nil
}
