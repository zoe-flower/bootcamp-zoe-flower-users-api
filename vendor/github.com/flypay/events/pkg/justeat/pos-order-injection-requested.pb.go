// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: justeat/pos-order-injection-requested.proto

package justeat

import (
	_ "github.com/flypay/events/pkg/flyt"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PosOrderInjectionRequested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandId string `protobuf:"bytes,1,opt,name=brand_id,json=BrandId,proto3" json:"brand_id,omitempty"`
	Order   *Order `protobuf:"bytes,2,opt,name=order,json=Order,proto3" json:"order,omitempty"`
	// e.g 2021-05-05T13:01:49.4976625Z
	TimeStamp        string `protobuf:"bytes,3,opt,name=time_stamp,json=TimeStamp,proto3" json:"time_stamp,omitempty"`
	RaisingComponent string `protobuf:"bytes,4,opt,name=raising_component,json=RaisingComponent,proto3" json:"raising_component,omitempty"`
	Tenant           string `protobuf:"bytes,5,opt,name=tenant,json=Tenant,proto3" json:"tenant,omitempty"`
	Conversation     string `protobuf:"bytes,6,opt,name=conversation,json=Conversation,proto3" json:"conversation,omitempty"`
}

func (x *PosOrderInjectionRequested) Reset() {
	*x = PosOrderInjectionRequested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PosOrderInjectionRequested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PosOrderInjectionRequested) ProtoMessage() {}

func (x *PosOrderInjectionRequested) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PosOrderInjectionRequested.ProtoReflect.Descriptor instead.
func (*PosOrderInjectionRequested) Descriptor() ([]byte, []int) {
	return file_justeat_pos_order_injection_requested_proto_rawDescGZIP(), []int{0}
}

func (x *PosOrderInjectionRequested) GetBrandId() string {
	if x != nil {
		return x.BrandId
	}
	return ""
}

func (x *PosOrderInjectionRequested) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *PosOrderInjectionRequested) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *PosOrderInjectionRequested) GetRaisingComponent() string {
	if x != nil {
		return x.RaisingComponent
	}
	return ""
}

func (x *PosOrderInjectionRequested) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *PosOrderInjectionRequested) GetConversation() string {
	if x != nil {
		return x.Conversation
	}
	return ""
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId                string          `protobuf:"bytes,1,opt,name=order_id,json=OrderId,proto3" json:"order_id,omitempty"`
	FriendlyOrderReference string          `protobuf:"bytes,2,opt,name=friendly_order_reference,json=FriendlyOrderReference,proto3" json:"friendly_order_reference,omitempty"`
	Currency               string          `protobuf:"bytes,3,opt,name=currency,json=Currency,proto3" json:"currency,omitempty"`
	TotalPrice             float64         `protobuf:"fixed64,4,opt,name=total_price,json=TotalPrice,proto3" json:"total_price,omitempty"`
	Fulfilment             *Fulfilment     `protobuf:"bytes,5,opt,name=fulfilment,json=Fulfilment,proto3" json:"fulfilment,omitempty"`
	Payment                *Payment        `protobuf:"bytes,6,opt,name=payment,json=Payment,proto3" json:"payment,omitempty"`
	Customer               *Customer       `protobuf:"bytes,7,opt,name=customer,json=Customer,proto3" json:"customer,omitempty"`
	Items                  []*Item         `protobuf:"bytes,8,rep,name=items,json=Items,proto3" json:"items,omitempty"`
	PriceBreakdown         *PriceBreakdown `protobuf:"bytes,9,opt,name=price_breakdown,json=PriceBreakdown,proto3" json:"price_breakdown,omitempty"`
	CustomerNotes          *CustomerNotes  `protobuf:"bytes,10,opt,name=customer_notes,json=CustomerNotes,proto3" json:"customer_notes,omitempty"`
	// e.g. 2021-05-05T13:01:46.7073981+00:00
	PlacedDate string `protobuf:"bytes,11,opt,name=placed_date,json=PlacedDate,proto3" json:"placed_date,omitempty"`
	// e.g. 2021-05-05T13:01:49.3414427+00:00
	AcceptedAt string               `protobuf:"bytes,12,opt,name=accepted_at,json=AcceptedAt,proto3" json:"accepted_at,omitempty"`
	Restaurant *Restaurant          `protobuf:"bytes,13,opt,name=restaurant,json=Restaurant,proto3" json:"restaurant,omitempty"`
	IsTest     bool                 `protobuf:"varint,14,opt,name=is_test,json=IsTest,proto3" json:"is_test,omitempty"`
	Tenant     string               `protobuf:"bytes,15,opt,name=tenant,json=Tenant,proto3" json:"tenant,omitempty"`
	Discounts  []*OrderItemDiscount `protobuf:"bytes,16,rep,name=discounts,json=Discounts,proto3" json:"discounts,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_justeat_pos_order_injection_requested_proto_rawDescGZIP(), []int{1}
}

func (x *Order) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *Order) GetFriendlyOrderReference() string {
	if x != nil {
		return x.FriendlyOrderReference
	}
	return ""
}

func (x *Order) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Order) GetTotalPrice() float64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *Order) GetFulfilment() *Fulfilment {
	if x != nil {
		return x.Fulfilment
	}
	return nil
}

func (x *Order) GetPayment() *Payment {
	if x != nil {
		return x.Payment
	}
	return nil
}

func (x *Order) GetCustomer() *Customer {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *Order) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Order) GetPriceBreakdown() *PriceBreakdown {
	if x != nil {
		return x.PriceBreakdown
	}
	return nil
}

func (x *Order) GetCustomerNotes() *CustomerNotes {
	if x != nil {
		return x.CustomerNotes
	}
	return nil
}

func (x *Order) GetPlacedDate() string {
	if x != nil {
		return x.PlacedDate
	}
	return ""
}

func (x *Order) GetAcceptedAt() string {
	if x != nil {
		return x.AcceptedAt
	}
	return ""
}

func (x *Order) GetRestaurant() *Restaurant {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

func (x *Order) GetIsTest() bool {
	if x != nil {
		return x.IsTest
	}
	return false
}

func (x *Order) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *Order) GetDiscounts() []*OrderItemDiscount {
	if x != nil {
		return x.Discounts
	}
	return nil
}

type Fulfilment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method             string `protobuf:"bytes,1,opt,name=method,json=Method,proto3" json:"method,omitempty"`
	PhoneNumber        string `protobuf:"bytes,2,opt,name=phone_number,json=PhoneNumber,proto3" json:"phone_number,omitempty"`
	DisplayPhoneNumber string `protobuf:"bytes,3,opt,name=display_phone_number,json=DisplayPhoneNumber,proto3" json:"display_phone_number,omitempty"`
	PhoneMaskingCode   string `protobuf:"bytes,4,opt,name=phone_masking_code,json=PhoneMaskingCode,proto3" json:"phone_masking_code,omitempty"`
	// e.g. 2021-05-05T14:25:00+01:00
	CustomerDueDate string       `protobuf:"bytes,5,opt,name=customer_due_date,json=CustomerDueDate,proto3" json:"customer_due_date,omitempty"`
	CustomerDueAsap bool         `protobuf:"varint,6,opt,name=customer_due_asap,json=CustomerDueAsap,proto3" json:"customer_due_asap,omitempty"`
	PrepareFor      string       `protobuf:"bytes,7,opt,name=prepare_for,json=PrepareFor,proto3" json:"prepare_for,omitempty"`
	PreparationTime string       `protobuf:"bytes,8,opt,name=preparation_time,json=PreparationTime,proto3" json:"preparation_time,omitempty"`
	Address         *FullAddress `protobuf:"bytes,9,opt,name=address,json=Address,proto3" json:"address,omitempty"`
	FulfilmentType  string       `protobuf:"bytes,10,opt,name=fulfilment_type,json=FulfilmentType,proto3" json:"fulfilment_type,omitempty"`
}

func (x *Fulfilment) Reset() {
	*x = Fulfilment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fulfilment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fulfilment) ProtoMessage() {}

func (x *Fulfilment) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fulfilment.ProtoReflect.Descriptor instead.
func (*Fulfilment) Descriptor() ([]byte, []int) {
	return file_justeat_pos_order_injection_requested_proto_rawDescGZIP(), []int{2}
}

func (x *Fulfilment) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Fulfilment) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *Fulfilment) GetDisplayPhoneNumber() string {
	if x != nil {
		return x.DisplayPhoneNumber
	}
	return ""
}

func (x *Fulfilment) GetPhoneMaskingCode() string {
	if x != nil {
		return x.PhoneMaskingCode
	}
	return ""
}

func (x *Fulfilment) GetCustomerDueDate() string {
	if x != nil {
		return x.CustomerDueDate
	}
	return ""
}

func (x *Fulfilment) GetCustomerDueAsap() bool {
	if x != nil {
		return x.CustomerDueAsap
	}
	return false
}

func (x *Fulfilment) GetPrepareFor() string {
	if x != nil {
		return x.PrepareFor
	}
	return ""
}

func (x *Fulfilment) GetPreparationTime() string {
	if x != nil {
		return x.PreparationTime
	}
	return ""
}

func (x *Fulfilment) GetAddress() *FullAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Fulfilment) GetFulfilmentType() string {
	if x != nil {
		return x.FulfilmentType
	}
	return ""
}

type FullAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lines       []string     `protobuf:"bytes,1,rep,name=lines,json=Lines,proto3" json:"lines,omitempty"`
	City        string       `protobuf:"bytes,2,opt,name=city,json=City,proto3" json:"city,omitempty"`
	PostalCode  string       `protobuf:"bytes,3,opt,name=postal_code,json=PostalCode,proto3" json:"postal_code,omitempty"`
	GeoLocation *GeoLocation `protobuf:"bytes,4,opt,name=geo_location,json=Geolocation,proto3" json:"geo_location,omitempty"`
}

func (x *FullAddress) Reset() {
	*x = FullAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullAddress) ProtoMessage() {}

func (x *FullAddress) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullAddress.ProtoReflect.Descriptor instead.
func (*FullAddress) Descriptor() ([]byte, []int) {
	return file_justeat_pos_order_injection_requested_proto_rawDescGZIP(), []int{3}
}

func (x *FullAddress) GetLines() []string {
	if x != nil {
		return x.Lines
	}
	return nil
}

func (x *FullAddress) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *FullAddress) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *FullAddress) GetGeoLocation() *GeoLocation {
	if x != nil {
		return x.GeoLocation
	}
	return nil
}

type GeoLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude,json=Latitude,proto3" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude,json=Longitude,proto3" json:"longitude,omitempty"`
}

func (x *GeoLocation) Reset() {
	*x = GeoLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoLocation) ProtoMessage() {}

func (x *GeoLocation) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoLocation.ProtoReflect.Descriptor instead.
func (*GeoLocation) Descriptor() ([]byte, []int) {
	return file_justeat_pos_order_injection_requested_proto_rawDescGZIP(), []int{4}
}

func (x *GeoLocation) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GeoLocation) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fees  []*PaymentFee  `protobuf:"bytes,1,rep,name=fees,json=Fees,proto3" json:"fees,omitempty"`
	Lines []*PaymentLine `protobuf:"bytes,2,rep,name=lines,json=Lines,proto3" json:"lines,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_justeat_pos_order_injection_requested_proto_rawDescGZIP(), []int{5}
}

func (x *Payment) GetFees() []*PaymentFee {
	if x != nil {
		return x.Fees
	}
	return nil
}

func (x *Payment) GetLines() []*PaymentLine {
	if x != nil {
		return x.Lines
	}
	return nil
}

type PaymentFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string  `protobuf:"bytes,1,opt,name=type,json=Type,proto3" json:"type,omitempty"`
	Value float64 `protobuf:"fixed64,2,opt,name=value,json=Value,proto3" json:"value,omitempty"`
}

func (x *PaymentFee) Reset() {
	*x = PaymentFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentFee) ProtoMessage() {}

func (x *PaymentFee) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentFee.ProtoReflect.Descriptor instead.
func (*PaymentFee) Descriptor() ([]byte, []int) {
	return file_justeat_pos_order_injection_requested_proto_rawDescGZIP(), []int{6}
}

func (x *PaymentFee) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PaymentFee) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type PaymentLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string  `protobuf:"bytes,1,opt,name=type,json=Type,proto3" json:"type,omitempty"`
	Value float64 `protobuf:"fixed64,2,opt,name=value,json=Value,proto3" json:"value,omitempty"`
	Paid  bool    `protobuf:"varint,3,opt,name=paid,json=Paid,proto3" json:"paid,omitempty"`
}

func (x *PaymentLine) Reset() {
	*x = PaymentLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentLine) ProtoMessage() {}

func (x *PaymentLine) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentLine.ProtoReflect.Descriptor instead.
func (*PaymentLine) Descriptor() ([]byte, []int) {
	return file_justeat_pos_order_injection_requested_proto_rawDescGZIP(), []int{7}
}

func (x *PaymentLine) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PaymentLine) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *PaymentLine) GetPaid() bool {
	if x != nil {
		return x.Paid
	}
	return false
}

type Customer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,json=Id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,json=Name,proto3" json:"name,omitempty"`
	Email string `protobuf:"bytes,3,opt,name=email,json=Email,proto3" json:"email,omitempty"`
}

func (x *Customer) Reset() {
	*x = Customer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Customer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Customer) ProtoMessage() {}

func (x *Customer) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Customer.ProtoReflect.Descriptor instead.
func (*Customer) Descriptor() ([]byte, []int) {
	return file_justeat_pos_order_injection_requested_proto_rawDescGZIP(), []int{8}
}

func (x *Customer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Customer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Customer) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalPrice      float64              `protobuf:"fixed64,1,opt,name=total_price,json=TotalPrice,proto3" json:"total_price,omitempty"`
	Reference       string               `protobuf:"bytes,2,opt,name=reference,json=Reference,proto3" json:"reference,omitempty"`
	OptionReference string               `protobuf:"bytes,3,opt,name=option_reference,json=OptionReference,proto3" json:"option_reference,omitempty"`
	Name            string               `protobuf:"bytes,4,opt,name=name,json=Name,proto3" json:"name,omitempty"`
	Synonym         string               `protobuf:"bytes,5,opt,name=synonym,json=Synonym,proto3" json:"synonym,omitempty"`
	Quantity        int32                `protobuf:"varint,6,opt,name=quantity,json=Quantity,proto3" json:"quantity,omitempty"`
	UnitPrice       float64              `protobuf:"fixed64,7,opt,name=unit_price,json=UnitPrice,proto3" json:"unit_price,omitempty"`
	Items           []*Item              `protobuf:"bytes,8,rep,name=items,json=Items,proto3" json:"items,omitempty"`
	Discounts       []*OrderItemDiscount `protobuf:"bytes,9,rep,name=discounts,json=Discounts,proto3" json:"discounts,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_justeat_pos_order_injection_requested_proto_rawDescGZIP(), []int{9}
}

func (x *Item) GetTotalPrice() float64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *Item) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *Item) GetOptionReference() string {
	if x != nil {
		return x.OptionReference
	}
	return ""
}

func (x *Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Item) GetSynonym() string {
	if x != nil {
		return x.Synonym
	}
	return ""
}

func (x *Item) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Item) GetUnitPrice() float64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *Item) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Item) GetDiscounts() []*OrderItemDiscount {
	if x != nil {
		return x.Discounts
	}
	return nil
}

type PriceBreakdown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Discount float64   `protobuf:"fixed64,1,opt,name=discount,json=Discount,proto3" json:"discount,omitempty"`
	Fees     *PriceFee `protobuf:"bytes,2,opt,name=fees,json=Fees,proto3" json:"fees,omitempty"`
	Tips     float64   `protobuf:"fixed64,3,opt,name=tips,json=Tips,proto3" json:"tips,omitempty"`
	Taxes    float64   `protobuf:"fixed64,4,opt,name=taxes,json=Taxes,proto3" json:"taxes,omitempty"`
	Items    float64   `protobuf:"fixed64,5,opt,name=items,json=Items,proto3" json:"items,omitempty"`
}

func (x *PriceBreakdown) Reset() {
	*x = PriceBreakdown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceBreakdown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceBreakdown) ProtoMessage() {}

func (x *PriceBreakdown) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceBreakdown.ProtoReflect.Descriptor instead.
func (*PriceBreakdown) Descriptor() ([]byte, []int) {
	return file_justeat_pos_order_injection_requested_proto_rawDescGZIP(), []int{10}
}

func (x *PriceBreakdown) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *PriceBreakdown) GetFees() *PriceFee {
	if x != nil {
		return x.Fees
	}
	return nil
}

func (x *PriceBreakdown) GetTips() float64 {
	if x != nil {
		return x.Tips
	}
	return 0
}

func (x *PriceBreakdown) GetTaxes() float64 {
	if x != nil {
		return x.Taxes
	}
	return 0
}

func (x *PriceBreakdown) GetItems() float64 {
	if x != nil {
		return x.Items
	}
	return 0
}

type PriceFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delivery      float64 `protobuf:"fixed64,1,opt,name=delivery,json=Delivery,proto3" json:"delivery,omitempty"`
	ServiceCharge float64 `protobuf:"fixed64,2,opt,name=service_charge,json=ServiceCharge,proto3" json:"service_charge,omitempty"`
	Other         float64 `protobuf:"fixed64,3,opt,name=other,json=Other,proto3" json:"other,omitempty"`
}

func (x *PriceFee) Reset() {
	*x = PriceFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceFee) ProtoMessage() {}

func (x *PriceFee) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceFee.ProtoReflect.Descriptor instead.
func (*PriceFee) Descriptor() ([]byte, []int) {
	return file_justeat_pos_order_injection_requested_proto_rawDescGZIP(), []int{11}
}

func (x *PriceFee) GetDelivery() float64 {
	if x != nil {
		return x.Delivery
	}
	return 0
}

func (x *PriceFee) GetServiceCharge() float64 {
	if x != nil {
		return x.ServiceCharge
	}
	return 0
}

func (x *PriceFee) GetOther() float64 {
	if x != nil {
		return x.Other
	}
	return 0
}

type CustomerNotes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoteForDriver     string `protobuf:"bytes,1,opt,name=note_for_driver,json=noteForDriver,proto3" json:"note_for_driver,omitempty"`
	NoteForRestaurant string `protobuf:"bytes,2,opt,name=note_for_restaurant,json=noteForRestaurant,proto3" json:"note_for_restaurant,omitempty"`
}

func (x *CustomerNotes) Reset() {
	*x = CustomerNotes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerNotes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerNotes) ProtoMessage() {}

func (x *CustomerNotes) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerNotes.ProtoReflect.Descriptor instead.
func (*CustomerNotes) Descriptor() ([]byte, []int) {
	return file_justeat_pos_order_injection_requested_proto_rawDescGZIP(), []int{12}
}

func (x *CustomerNotes) GetNoteForDriver() string {
	if x != nil {
		return x.NoteForDriver
	}
	return ""
}

func (x *CustomerNotes) GetNoteForRestaurant() string {
	if x != nil {
		return x.NoteForRestaurant
	}
	return ""
}

type Restaurant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reference   string       `protobuf:"bytes,1,opt,name=reference,json=Reference,proto3" json:"reference,omitempty"`
	TimeZone    string       `protobuf:"bytes,2,opt,name=time_zone,json=TimeZone,proto3" json:"time_zone,omitempty"`
	Id          string       `protobuf:"bytes,3,opt,name=id,json=Id,proto3" json:"id,omitempty"`
	Name        string       `protobuf:"bytes,4,opt,name=name,json=Name,proto3" json:"name,omitempty"`
	Address     *FullAddress `protobuf:"bytes,5,opt,name=address,json=Address,proto3" json:"address,omitempty"`
	PhoneNumber string       `protobuf:"bytes,6,opt,name=phone_number,json=PhoneNumber,proto3" json:"phone_number,omitempty"`
}

func (x *Restaurant) Reset() {
	*x = Restaurant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Restaurant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Restaurant) ProtoMessage() {}

func (x *Restaurant) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Restaurant.ProtoReflect.Descriptor instead.
func (*Restaurant) Descriptor() ([]byte, []int) {
	return file_justeat_pos_order_injection_requested_proto_rawDescGZIP(), []int{13}
}

func (x *Restaurant) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *Restaurant) GetTimeZone() string {
	if x != nil {
		return x.TimeZone
	}
	return ""
}

func (x *Restaurant) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Restaurant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Restaurant) GetAddress() *FullAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Restaurant) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type OrderItemDiscount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfferId       string  `protobuf:"bytes,1,opt,name=offer_id,json=OfferId,proto3" json:"offer_id,omitempty"`
	OfferType     string  `protobuf:"bytes,2,opt,name=offer_type,json=OfferType,proto3" json:"offer_type,omitempty"`
	PromotionId   string  `protobuf:"bytes,3,opt,name=promotion_id,json=PromotionId,proto3" json:"promotion_id,omitempty"`
	DiscountValue float64 `protobuf:"fixed64,4,opt,name=discount_value,json=DiscountValue,proto3" json:"discount_value,omitempty"`
}

func (x *OrderItemDiscount) Reset() {
	*x = OrderItemDiscount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderItemDiscount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderItemDiscount) ProtoMessage() {}

func (x *OrderItemDiscount) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_pos_order_injection_requested_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderItemDiscount.ProtoReflect.Descriptor instead.
func (*OrderItemDiscount) Descriptor() ([]byte, []int) {
	return file_justeat_pos_order_injection_requested_proto_rawDescGZIP(), []int{14}
}

func (x *OrderItemDiscount) GetOfferId() string {
	if x != nil {
		return x.OfferId
	}
	return ""
}

func (x *OrderItemDiscount) GetOfferType() string {
	if x != nil {
		return x.OfferType
	}
	return ""
}

func (x *OrderItemDiscount) GetPromotionId() string {
	if x != nil {
		return x.PromotionId
	}
	return ""
}

func (x *OrderItemDiscount) GetDiscountValue() float64 {
	if x != nil {
		return x.DiscountValue
	}
	return 0
}

var File_justeat_pos_order_injection_requested_proto protoreflect.FileDescriptor

var file_justeat_pos_order_injection_requested_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2f, 0x70, 0x6f, 0x73, 0x2d, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2d, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6a,
	0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x1a, 0x15, 0x66, 0x6c, 0x79, 0x74, 0x2f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6a,
	0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x02, 0x0a, 0x1a, 0x50, 0x6f, 0x73, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x61, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x52, 0x61, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x3f, 0x82, 0xb5,
	0x18, 0x1d, 0x70, 0x6f, 0x73, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0xa2,
	0xbb, 0x18, 0x1a, 0x50, 0x6f, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x22, 0xb1, 0x05,
	0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x66, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0a, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2a,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6a,
	0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52,
	0x08, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65,
	0x61, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x40,
	0x0a, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x64, 0x6f, 0x77,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61,
	0x74, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x64, 0x6f, 0x77, 0x6e,
	0x52, 0x0e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x64, 0x6f, 0x77, 0x6e,
	0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74,
	0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65,
	0x61, 0x74, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65, 0x73,
	0x52, 0x0d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x33, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x0a, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x73,
	0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x54, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6a, 0x75, 0x73,
	0x74, 0x65, 0x61, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x09, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x22, 0xa4, 0x03, 0x0a, 0x0a, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2c, 0x0a,
	0x12, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x4d, 0x61, 0x73, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x61, 0x73, 0x61, 0x70, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x75, 0x65, 0x41,
	0x73, 0x61, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x5f, 0x66,
	0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x46, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x2e, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x27, 0x0a, 0x0f, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x0b, 0x46, 0x75, 0x6c,
	0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x69,
	0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x67, 0x65, 0x6f, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6a, 0x75, 0x73, 0x74,
	0x65, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x47, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x47, 0x0a, 0x0b,
	0x47, 0x65, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x4c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x4c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x5e, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x27, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x46, 0x65, 0x65, 0x52, 0x04, 0x46, 0x65, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x6c, 0x69, 0x6e,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65,
	0x61, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x05,
	0x4c, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x36, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x46, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4b, 0x0a,
	0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x50, 0x61, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x08, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x22, 0xb8, 0x02, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x79, 0x6e, 0x6f, 0x6e,
	0x79, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x79, 0x6e, 0x6f, 0x6e, 0x79,
	0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x55, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6a, 0x75,
	0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x09, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x0e,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x66, 0x65,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65,
	0x61, 0x74, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x52, 0x04, 0x46, 0x65, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x54, 0x69, 0x70, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x78, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x54, 0x61, 0x78, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x63, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x22, 0x67, 0x0a, 0x0d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x65, 0x5f,
	0x66, 0x6f, 0x72, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12,
	0x2e, 0x0a, 0x13, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6e, 0x6f,
	0x74, 0x65, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x22,
	0xbe, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x97, 0x01, 0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x90, 0x01, 0x0a, 0x0b, 0x63,
	0x6f, 0x6d, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x42, 0x1f, 0x50, 0x6f, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x24, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x79, 0x70, 0x61, 0x79,
	0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6a, 0x75, 0x73, 0x74,
	0x65, 0x61, 0x74, 0xa2, 0x02, 0x03, 0x4a, 0x58, 0x58, 0xaa, 0x02, 0x07, 0x4a, 0x75, 0x73, 0x74,
	0x65, 0x61, 0x74, 0xca, 0x02, 0x07, 0x4a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0xe2, 0x02, 0x13,
	0x4a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x07, 0x4a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_justeat_pos_order_injection_requested_proto_rawDescOnce sync.Once
	file_justeat_pos_order_injection_requested_proto_rawDescData = file_justeat_pos_order_injection_requested_proto_rawDesc
)

func file_justeat_pos_order_injection_requested_proto_rawDescGZIP() []byte {
	file_justeat_pos_order_injection_requested_proto_rawDescOnce.Do(func() {
		file_justeat_pos_order_injection_requested_proto_rawDescData = protoimpl.X.CompressGZIP(file_justeat_pos_order_injection_requested_proto_rawDescData)
	})
	return file_justeat_pos_order_injection_requested_proto_rawDescData
}

var file_justeat_pos_order_injection_requested_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_justeat_pos_order_injection_requested_proto_goTypes = []interface{}{
	(*PosOrderInjectionRequested)(nil), // 0: justeat.PosOrderInjectionRequested
	(*Order)(nil),                      // 1: justeat.Order
	(*Fulfilment)(nil),                 // 2: justeat.Fulfilment
	(*FullAddress)(nil),                // 3: justeat.FullAddress
	(*GeoLocation)(nil),                // 4: justeat.GeoLocation
	(*Payment)(nil),                    // 5: justeat.Payment
	(*PaymentFee)(nil),                 // 6: justeat.PaymentFee
	(*PaymentLine)(nil),                // 7: justeat.PaymentLine
	(*Customer)(nil),                   // 8: justeat.Customer
	(*Item)(nil),                       // 9: justeat.Item
	(*PriceBreakdown)(nil),             // 10: justeat.PriceBreakdown
	(*PriceFee)(nil),                   // 11: justeat.PriceFee
	(*CustomerNotes)(nil),              // 12: justeat.CustomerNotes
	(*Restaurant)(nil),                 // 13: justeat.Restaurant
	(*OrderItemDiscount)(nil),          // 14: justeat.OrderItemDiscount
}
var file_justeat_pos_order_injection_requested_proto_depIdxs = []int32{
	1,  // 0: justeat.PosOrderInjectionRequested.order:type_name -> justeat.Order
	2,  // 1: justeat.Order.fulfilment:type_name -> justeat.Fulfilment
	5,  // 2: justeat.Order.payment:type_name -> justeat.Payment
	8,  // 3: justeat.Order.customer:type_name -> justeat.Customer
	9,  // 4: justeat.Order.items:type_name -> justeat.Item
	10, // 5: justeat.Order.price_breakdown:type_name -> justeat.PriceBreakdown
	12, // 6: justeat.Order.customer_notes:type_name -> justeat.CustomerNotes
	13, // 7: justeat.Order.restaurant:type_name -> justeat.Restaurant
	14, // 8: justeat.Order.discounts:type_name -> justeat.OrderItemDiscount
	3,  // 9: justeat.Fulfilment.address:type_name -> justeat.FullAddress
	4,  // 10: justeat.FullAddress.geo_location:type_name -> justeat.GeoLocation
	6,  // 11: justeat.Payment.fees:type_name -> justeat.PaymentFee
	7,  // 12: justeat.Payment.lines:type_name -> justeat.PaymentLine
	9,  // 13: justeat.Item.items:type_name -> justeat.Item
	14, // 14: justeat.Item.discounts:type_name -> justeat.OrderItemDiscount
	11, // 15: justeat.PriceBreakdown.fees:type_name -> justeat.PriceFee
	3,  // 16: justeat.Restaurant.address:type_name -> justeat.FullAddress
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_justeat_pos_order_injection_requested_proto_init() }
func file_justeat_pos_order_injection_requested_proto_init() {
	if File_justeat_pos_order_injection_requested_proto != nil {
		return
	}
	file_justeat_options_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_justeat_pos_order_injection_requested_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PosOrderInjectionRequested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_pos_order_injection_requested_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_pos_order_injection_requested_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fulfilment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_pos_order_injection_requested_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_pos_order_injection_requested_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_pos_order_injection_requested_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_pos_order_injection_requested_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_pos_order_injection_requested_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_pos_order_injection_requested_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Customer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_pos_order_injection_requested_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_pos_order_injection_requested_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceBreakdown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_pos_order_injection_requested_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_pos_order_injection_requested_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerNotes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_pos_order_injection_requested_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Restaurant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_pos_order_injection_requested_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderItemDiscount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_justeat_pos_order_injection_requested_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_justeat_pos_order_injection_requested_proto_goTypes,
		DependencyIndexes: file_justeat_pos_order_injection_requested_proto_depIdxs,
		MessageInfos:      file_justeat_pos_order_injection_requested_proto_msgTypes,
	}.Build()
	File_justeat_pos_order_injection_requested_proto = out.File
	file_justeat_pos_order_injection_requested_proto_rawDesc = nil
	file_justeat_pos_order_injection_requested_proto_goTypes = nil
	file_justeat_pos_order_injection_requested_proto_depIdxs = nil
}
