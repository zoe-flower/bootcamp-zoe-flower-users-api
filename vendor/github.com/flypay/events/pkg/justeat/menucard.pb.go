// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: justeat/menucard.proto

package justeat

import (
	flyt "github.com/flypay/events/pkg/flyt"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MenuCardType int32

const (
	MenuCardType_NOT_FOR_USE      MenuCardType = 0
	MenuCardType_DELIVERY_LUNCH   MenuCardType = 1
	MenuCardType_DELIVERY_NIGHT   MenuCardType = 2
	MenuCardType_COLLECTION_LUNCH MenuCardType = 3
	MenuCardType_COLLECTION_NIGHT MenuCardType = 4
)

// Enum value maps for MenuCardType.
var (
	MenuCardType_name = map[int32]string{
		0: "NOT_FOR_USE",
		1: "DELIVERY_LUNCH",
		2: "DELIVERY_NIGHT",
		3: "COLLECTION_LUNCH",
		4: "COLLECTION_NIGHT",
	}
	MenuCardType_value = map[string]int32{
		"NOT_FOR_USE":      0,
		"DELIVERY_LUNCH":   1,
		"DELIVERY_NIGHT":   2,
		"COLLECTION_LUNCH": 3,
		"COLLECTION_NIGHT": 4,
	}
)

func (x MenuCardType) Enum() *MenuCardType {
	p := new(MenuCardType)
	*p = x
	return p
}

func (x MenuCardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MenuCardType) Descriptor() protoreflect.EnumDescriptor {
	return file_justeat_menucard_proto_enumTypes[0].Descriptor()
}

func (MenuCardType) Type() protoreflect.EnumType {
	return &file_justeat_menucard_proto_enumTypes[0]
}

func (x MenuCardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MenuCardType.Descriptor instead.
func (MenuCardType) EnumDescriptor() ([]byte, []int) {
	return file_justeat_menucard_proto_rawDescGZIP(), []int{0}
}

// Deprecated: Do not use.
type MenuCardCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Define your proto fields here
	MenuCardId   string       `protobuf:"bytes,1,opt,name=menu_card_id,json=menuCardId,proto3" json:"menu_card_id,omitempty"`
	MenuCardType MenuCardType `protobuf:"varint,2,opt,name=menu_card_type,json=menuCardType,proto3,enum=justeat.MenuCardType" json:"menu_card_type,omitempty"`
	Restaurant   *flyt.Ident  `protobuf:"bytes,3,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
	RestaurantId int32        `protobuf:"varint,4,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	Tenant       string       `protobuf:"bytes,5,opt,name=tenant,proto3" json:"tenant,omitempty"`
}

func (x *MenuCardCreated) Reset() {
	*x = MenuCardCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_menucard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuCardCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuCardCreated) ProtoMessage() {}

func (x *MenuCardCreated) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_menucard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuCardCreated.ProtoReflect.Descriptor instead.
func (*MenuCardCreated) Descriptor() ([]byte, []int) {
	return file_justeat_menucard_proto_rawDescGZIP(), []int{0}
}

func (x *MenuCardCreated) GetMenuCardId() string {
	if x != nil {
		return x.MenuCardId
	}
	return ""
}

func (x *MenuCardCreated) GetMenuCardType() MenuCardType {
	if x != nil {
		return x.MenuCardType
	}
	return MenuCardType_NOT_FOR_USE
}

func (x *MenuCardCreated) GetRestaurant() *flyt.Ident {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

func (x *MenuCardCreated) GetRestaurantId() int32 {
	if x != nil {
		return x.RestaurantId
	}
	return 0
}

func (x *MenuCardCreated) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

// Deprecated: Do not use.
type MenuCardUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Define your proto fields here
	MenuCardId   string       `protobuf:"bytes,1,opt,name=menu_card_id,json=menuCardId,proto3" json:"menu_card_id,omitempty"`
	MenuCardType MenuCardType `protobuf:"varint,2,opt,name=menu_card_type,json=menuCardType,proto3,enum=justeat.MenuCardType" json:"menu_card_type,omitempty"`
	Restaurant   *flyt.Ident  `protobuf:"bytes,3,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
	RestaurantId int32        `protobuf:"varint,4,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	Tenant       string       `protobuf:"bytes,5,opt,name=tenant,proto3" json:"tenant,omitempty"`
}

func (x *MenuCardUpdated) Reset() {
	*x = MenuCardUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_menucard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuCardUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuCardUpdated) ProtoMessage() {}

func (x *MenuCardUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_menucard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuCardUpdated.ProtoReflect.Descriptor instead.
func (*MenuCardUpdated) Descriptor() ([]byte, []int) {
	return file_justeat_menucard_proto_rawDescGZIP(), []int{1}
}

func (x *MenuCardUpdated) GetMenuCardId() string {
	if x != nil {
		return x.MenuCardId
	}
	return ""
}

func (x *MenuCardUpdated) GetMenuCardType() MenuCardType {
	if x != nil {
		return x.MenuCardType
	}
	return MenuCardType_NOT_FOR_USE
}

func (x *MenuCardUpdated) GetRestaurant() *flyt.Ident {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

func (x *MenuCardUpdated) GetRestaurantId() int32 {
	if x != nil {
		return x.RestaurantId
	}
	return 0
}

func (x *MenuCardUpdated) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

// Deprecated: Do not use.
type MenuCardDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Define your proto fields here
	MenuCardId   string       `protobuf:"bytes,1,opt,name=menu_card_id,json=menuCardId,proto3" json:"menu_card_id,omitempty"`
	MenuCardType MenuCardType `protobuf:"varint,2,opt,name=menu_card_type,json=menuCardType,proto3,enum=justeat.MenuCardType" json:"menu_card_type,omitempty"`
	Restaurant   *flyt.Ident  `protobuf:"bytes,3,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
	RestaurantId int32        `protobuf:"varint,4,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	Tenant       string       `protobuf:"bytes,5,opt,name=tenant,proto3" json:"tenant,omitempty"`
}

func (x *MenuCardDeleted) Reset() {
	*x = MenuCardDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_menucard_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuCardDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuCardDeleted) ProtoMessage() {}

func (x *MenuCardDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_menucard_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuCardDeleted.ProtoReflect.Descriptor instead.
func (*MenuCardDeleted) Descriptor() ([]byte, []int) {
	return file_justeat_menucard_proto_rawDescGZIP(), []int{2}
}

func (x *MenuCardDeleted) GetMenuCardId() string {
	if x != nil {
		return x.MenuCardId
	}
	return ""
}

func (x *MenuCardDeleted) GetMenuCardType() MenuCardType {
	if x != nil {
		return x.MenuCardType
	}
	return MenuCardType_NOT_FOR_USE
}

func (x *MenuCardDeleted) GetRestaurant() *flyt.Ident {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

func (x *MenuCardDeleted) GetRestaurantId() int32 {
	if x != nil {
		return x.RestaurantId
	}
	return 0
}

func (x *MenuCardDeleted) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

var File_justeat_menucard_proto protoreflect.FileDescriptor

var file_justeat_menucard_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x63, 0x61,
	0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61,
	0x74, 0x1a, 0x15, 0x66, 0x6c, 0x79, 0x74, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x66, 0x6c, 0x79, 0x74, 0x2f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6a, 0x75, 0x73, 0x74,
	0x65, 0x61, 0x74, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x99, 0x02, 0x0a, 0x0f, 0x4d, 0x65, 0x6e, 0x75, 0x43, 0x61, 0x72, 0x64, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6e,
	0x75, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0e, 0x6d, 0x65, 0x6e, 0x75, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x15, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x43, 0x61,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x6d, 0x65, 0x6e, 0x75, 0x43, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x3a, 0x3d,
	0x18, 0x01, 0x82, 0xb5, 0x18, 0x18, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x6d, 0x65,
	0x6e, 0x75, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0xa2, 0xbb,
	0x18, 0x0f, 0x4d, 0x65, 0x6e, 0x75, 0x43, 0x61, 0x72, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0xaa, 0xbb, 0x18, 0x02, 0x75, 0x6b, 0xaa, 0xbb, 0x18, 0x02, 0x65, 0x73, 0x22, 0x99, 0x02,
	0x0a, 0x0f, 0x4d, 0x65, 0x6e, 0x75, 0x43, 0x61, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6e, 0x75, 0x43, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0e, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6a, 0x75,
	0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0c, 0x6d, 0x65, 0x6e, 0x75, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2b, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x3a, 0x3d, 0x18, 0x01, 0x82, 0xb5,
	0x18, 0x18, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x63, 0x61,
	0x72, 0x64, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0xa2, 0xbb, 0x18, 0x0f, 0x4d, 0x65,
	0x6e, 0x75, 0x43, 0x61, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0xaa, 0xbb, 0x18,
	0x02, 0x75, 0x6b, 0xaa, 0xbb, 0x18, 0x02, 0x65, 0x73, 0x22, 0x99, 0x02, 0x0a, 0x0f, 0x4d, 0x65,
	0x6e, 0x75, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a,
	0x0c, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6e, 0x75, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x3b, 0x0a, 0x0e, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61,
	0x74, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c,
	0x6d, 0x65, 0x6e, 0x75, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x0a,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x3a, 0x3d, 0x18, 0x01, 0x82, 0xb5, 0x18, 0x18, 0x6a, 0x75,
	0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0xa2, 0xbb, 0x18, 0x0f, 0x4d, 0x65, 0x6e, 0x75, 0x43, 0x61,
	0x72, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0xaa, 0xbb, 0x18, 0x02, 0x75, 0x6b, 0xaa,
	0xbb, 0x18, 0x02, 0x65, 0x73, 0x2a, 0x73, 0x0a, 0x0c, 0x4d, 0x65, 0x6e, 0x75, 0x43, 0x61, 0x72,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x52,
	0x5f, 0x55, 0x53, 0x45, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45,
	0x52, 0x59, 0x5f, 0x4c, 0x55, 0x4e, 0x43, 0x48, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x45,
	0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x4e, 0x49, 0x47, 0x48, 0x54, 0x10, 0x02, 0x12, 0x14,
	0x0a, 0x10, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x55, 0x4e,
	0x43, 0x48, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4e, 0x49, 0x47, 0x48, 0x54, 0x10, 0x04, 0x42, 0x7e, 0x0a, 0x0b, 0x63, 0x6f,
	0x6d, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x42, 0x0d, 0x4d, 0x65, 0x6e, 0x75, 0x63,
	0x61, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74,
	0xa2, 0x02, 0x03, 0x4a, 0x58, 0x58, 0xaa, 0x02, 0x07, 0x4a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74,
	0xca, 0x02, 0x07, 0x4a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0xe2, 0x02, 0x13, 0x4a, 0x75, 0x73,
	0x74, 0x65, 0x61, 0x74, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x07, 0x4a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_justeat_menucard_proto_rawDescOnce sync.Once
	file_justeat_menucard_proto_rawDescData = file_justeat_menucard_proto_rawDesc
)

func file_justeat_menucard_proto_rawDescGZIP() []byte {
	file_justeat_menucard_proto_rawDescOnce.Do(func() {
		file_justeat_menucard_proto_rawDescData = protoimpl.X.CompressGZIP(file_justeat_menucard_proto_rawDescData)
	})
	return file_justeat_menucard_proto_rawDescData
}

var file_justeat_menucard_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_justeat_menucard_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_justeat_menucard_proto_goTypes = []interface{}{
	(MenuCardType)(0),       // 0: justeat.MenuCardType
	(*MenuCardCreated)(nil), // 1: justeat.MenuCardCreated
	(*MenuCardUpdated)(nil), // 2: justeat.MenuCardUpdated
	(*MenuCardDeleted)(nil), // 3: justeat.MenuCardDeleted
	(*flyt.Ident)(nil),      // 4: flyt.Ident
}
var file_justeat_menucard_proto_depIdxs = []int32{
	0, // 0: justeat.MenuCardCreated.menu_card_type:type_name -> justeat.MenuCardType
	4, // 1: justeat.MenuCardCreated.restaurant:type_name -> flyt.Ident
	0, // 2: justeat.MenuCardUpdated.menu_card_type:type_name -> justeat.MenuCardType
	4, // 3: justeat.MenuCardUpdated.restaurant:type_name -> flyt.Ident
	0, // 4: justeat.MenuCardDeleted.menu_card_type:type_name -> justeat.MenuCardType
	4, // 5: justeat.MenuCardDeleted.restaurant:type_name -> flyt.Ident
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_justeat_menucard_proto_init() }
func file_justeat_menucard_proto_init() {
	if File_justeat_menucard_proto != nil {
		return
	}
	file_justeat_options_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_justeat_menucard_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuCardCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_menucard_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuCardUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_menucard_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuCardDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_justeat_menucard_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_justeat_menucard_proto_goTypes,
		DependencyIndexes: file_justeat_menucard_proto_depIdxs,
		EnumInfos:         file_justeat_menucard_proto_enumTypes,
		MessageInfos:      file_justeat_menucard_proto_msgTypes,
	}.Build()
	File_justeat_menucard_proto = out.File
	file_justeat_menucard_proto_rawDesc = nil
	file_justeat_menucard_proto_goTypes = nil
	file_justeat_menucard_proto_depIdxs = nil
}
