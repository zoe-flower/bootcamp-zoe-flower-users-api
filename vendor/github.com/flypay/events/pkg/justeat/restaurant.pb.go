// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: justeat/restaurant.proto

package justeat

import (
	flyt "github.com/flypay/events/pkg/flyt"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RestaurantUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Define your proto fields here
	Restaurant          *flyt.Ident          `protobuf:"bytes,1,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
	Name                string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BrandName           string               `protobuf:"bytes,3,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`
	PhoneNumber         string               `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Email               string               `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Timezone            string               `protobuf:"bytes,6,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Address             *Address             `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
	OpeningTimes        []*flyt.OpeningTimes `protobuf:"bytes,8,rep,name=opening_times,json=openingTimes,proto3" json:"opening_times,omitempty"`
	LogoUrl             string               `protobuf:"bytes,9,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	AllergenPhoneNumber string               `protobuf:"bytes,10,opt,name=allergen_phone_number,json=allergenPhoneNumber,proto3" json:"allergen_phone_number,omitempty"`
	AllergenUrl         string               `protobuf:"bytes,11,opt,name=allergen_url,json=allergenUrl,proto3" json:"allergen_url,omitempty"`
}

func (x *RestaurantUpdated) Reset() {
	*x = RestaurantUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantUpdated) ProtoMessage() {}

func (x *RestaurantUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantUpdated.ProtoReflect.Descriptor instead.
func (*RestaurantUpdated) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_proto_rawDescGZIP(), []int{0}
}

func (x *RestaurantUpdated) GetRestaurant() *flyt.Ident {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

func (x *RestaurantUpdated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RestaurantUpdated) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *RestaurantUpdated) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *RestaurantUpdated) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RestaurantUpdated) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *RestaurantUpdated) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *RestaurantUpdated) GetOpeningTimes() []*flyt.OpeningTimes {
	if x != nil {
		return x.OpeningTimes
	}
	return nil
}

func (x *RestaurantUpdated) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *RestaurantUpdated) GetAllergenPhoneNumber() string {
	if x != nil {
		return x.AllergenPhoneNumber
	}
	return ""
}

func (x *RestaurantUpdated) GetAllergenUrl() string {
	if x != nil {
		return x.AllergenUrl
	}
	return ""
}

// Deprecated: Do not use.
type RestaurantPOSConfigUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Define your proto fields here
	Configuration *PosConfiguration `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
}

func (x *RestaurantPOSConfigUpdated) Reset() {
	*x = RestaurantPOSConfigUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantPOSConfigUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantPOSConfigUpdated) ProtoMessage() {}

func (x *RestaurantPOSConfigUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantPOSConfigUpdated.ProtoReflect.Descriptor instead.
func (*RestaurantPOSConfigUpdated) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_proto_rawDescGZIP(), []int{1}
}

func (x *RestaurantPOSConfigUpdated) GetConfiguration() *PosConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

// Deprecated: Do not use.
type RestaurantPOSConfigDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Define your proto fields here
	Configuration *PosConfiguration `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
}

func (x *RestaurantPOSConfigDeleted) Reset() {
	*x = RestaurantPOSConfigDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantPOSConfigDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantPOSConfigDeleted) ProtoMessage() {}

func (x *RestaurantPOSConfigDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantPOSConfigDeleted.ProtoReflect.Descriptor instead.
func (*RestaurantPOSConfigDeleted) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_proto_rawDescGZIP(), []int{2}
}

func (x *RestaurantPOSConfigDeleted) GetConfiguration() *PosConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type PosConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerId            int32  `protobuf:"varint,1,opt,name=partner_id,json=partnerId,proto3" json:"partner_id,omitempty"`
	Tenant               string `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	UseBackupFlow        bool   `protobuf:"varint,3,opt,name=use_backup_flow,json=useBackupFlow,proto3" json:"use_backup_flow,omitempty"`
	UseEarlyPosInjection bool   `protobuf:"varint,4,opt,name=use_early_pos_injection,json=useEarlyPosInjection,proto3" json:"use_early_pos_injection,omitempty"`
	UseMenuSync          bool   `protobuf:"varint,5,opt,name=use_menu_sync,json=useMenuSync,proto3" json:"use_menu_sync,omitempty"`
	UseSuccessesLogging  bool   `protobuf:"varint,6,opt,name=use_successes_logging,json=useSuccessesLogging,proto3" json:"use_successes_logging,omitempty"`
	UseAutoRelease       bool   `protobuf:"varint,7,opt,name=use_auto_release,json=useAutoRelease,proto3" json:"use_auto_release,omitempty"`
	UseFailuresLogging   bool   `protobuf:"varint,8,opt,name=use_failures_logging,json=useFailuresLogging,proto3" json:"use_failures_logging,omitempty"`
	Id                   string `protobuf:"bytes,9,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	RestaurantId         int32  `protobuf:"varint,11,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
}

func (x *PosConfiguration) Reset() {
	*x = PosConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PosConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PosConfiguration) ProtoMessage() {}

func (x *PosConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PosConfiguration.ProtoReflect.Descriptor instead.
func (*PosConfiguration) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_proto_rawDescGZIP(), []int{3}
}

func (x *PosConfiguration) GetPartnerId() int32 {
	if x != nil {
		return x.PartnerId
	}
	return 0
}

func (x *PosConfiguration) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *PosConfiguration) GetUseBackupFlow() bool {
	if x != nil {
		return x.UseBackupFlow
	}
	return false
}

func (x *PosConfiguration) GetUseEarlyPosInjection() bool {
	if x != nil {
		return x.UseEarlyPosInjection
	}
	return false
}

func (x *PosConfiguration) GetUseMenuSync() bool {
	if x != nil {
		return x.UseMenuSync
	}
	return false
}

func (x *PosConfiguration) GetUseSuccessesLogging() bool {
	if x != nil {
		return x.UseSuccessesLogging
	}
	return false
}

func (x *PosConfiguration) GetUseAutoRelease() bool {
	if x != nil {
		return x.UseAutoRelease
	}
	return false
}

func (x *PosConfiguration) GetUseFailuresLogging() bool {
	if x != nil {
		return x.UseFailuresLogging
	}
	return false
}

func (x *PosConfiguration) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PosConfiguration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PosConfiguration) GetRestaurantId() int32 {
	if x != nil {
		return x.RestaurantId
	}
	return 0
}

type PosRestaurantConfigurationUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration *PosRestaurantConfiguration `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
}

func (x *PosRestaurantConfigurationUpdated) Reset() {
	*x = PosRestaurantConfigurationUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PosRestaurantConfigurationUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PosRestaurantConfigurationUpdated) ProtoMessage() {}

func (x *PosRestaurantConfigurationUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PosRestaurantConfigurationUpdated.ProtoReflect.Descriptor instead.
func (*PosRestaurantConfigurationUpdated) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_proto_rawDescGZIP(), []int{4}
}

func (x *PosRestaurantConfigurationUpdated) GetConfiguration() *PosRestaurantConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type PosRestaurantConfigurationDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration *PosRestaurantConfiguration `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
}

func (x *PosRestaurantConfigurationDeleted) Reset() {
	*x = PosRestaurantConfigurationDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PosRestaurantConfigurationDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PosRestaurantConfigurationDeleted) ProtoMessage() {}

func (x *PosRestaurantConfigurationDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PosRestaurantConfigurationDeleted.ProtoReflect.Descriptor instead.
func (*PosRestaurantConfigurationDeleted) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_proto_rawDescGZIP(), []int{5}
}

func (x *PosRestaurantConfigurationDeleted) GetConfiguration() *PosRestaurantConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type PosRestaurantConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerId            int32  `protobuf:"varint,1,opt,name=partner_id,json=partnerId,proto3" json:"partner_id,omitempty"`
	Tenant               string `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	UseBackupFlow        bool   `protobuf:"varint,3,opt,name=use_backup_flow,json=useBackupFlow,proto3" json:"use_backup_flow,omitempty"`
	UseEarlyPosInjection bool   `protobuf:"varint,4,opt,name=use_early_pos_injection,json=useEarlyPosInjection,proto3" json:"use_early_pos_injection,omitempty"`
	UseMenuSync          bool   `protobuf:"varint,5,opt,name=use_menu_sync,json=useMenuSync,proto3" json:"use_menu_sync,omitempty"`
	UseSuccessesLogging  bool   `protobuf:"varint,6,opt,name=use_successes_logging,json=useSuccessesLogging,proto3" json:"use_successes_logging,omitempty"`
	UseAutoRelease       bool   `protobuf:"varint,7,opt,name=use_auto_release,json=useAutoRelease,proto3" json:"use_auto_release,omitempty"`
	UseFailuresLogging   bool   `protobuf:"varint,8,opt,name=use_failures_logging,json=useFailuresLogging,proto3" json:"use_failures_logging,omitempty"`
	Id                   string `protobuf:"bytes,9,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	RestaurantId         int32  `protobuf:"varint,11,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
}

func (x *PosRestaurantConfiguration) Reset() {
	*x = PosRestaurantConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PosRestaurantConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PosRestaurantConfiguration) ProtoMessage() {}

func (x *PosRestaurantConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PosRestaurantConfiguration.ProtoReflect.Descriptor instead.
func (*PosRestaurantConfiguration) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_proto_rawDescGZIP(), []int{6}
}

func (x *PosRestaurantConfiguration) GetPartnerId() int32 {
	if x != nil {
		return x.PartnerId
	}
	return 0
}

func (x *PosRestaurantConfiguration) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *PosRestaurantConfiguration) GetUseBackupFlow() bool {
	if x != nil {
		return x.UseBackupFlow
	}
	return false
}

func (x *PosRestaurantConfiguration) GetUseEarlyPosInjection() bool {
	if x != nil {
		return x.UseEarlyPosInjection
	}
	return false
}

func (x *PosRestaurantConfiguration) GetUseMenuSync() bool {
	if x != nil {
		return x.UseMenuSync
	}
	return false
}

func (x *PosRestaurantConfiguration) GetUseSuccessesLogging() bool {
	if x != nil {
		return x.UseSuccessesLogging
	}
	return false
}

func (x *PosRestaurantConfiguration) GetUseAutoRelease() bool {
	if x != nil {
		return x.UseAutoRelease
	}
	return false
}

func (x *PosRestaurantConfiguration) GetUseFailuresLogging() bool {
	if x != nil {
		return x.UseFailuresLogging
	}
	return false
}

func (x *PosRestaurantConfiguration) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PosRestaurantConfiguration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PosRestaurantConfiguration) GetRestaurantId() int32 {
	if x != nil {
		return x.RestaurantId
	}
	return 0
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstLine string  `protobuf:"bytes,1,opt,name=first_line,json=firstLine,proto3" json:"first_line,omitempty"`
	City      string  `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	Postcode  string  `protobuf:"bytes,3,opt,name=postcode,proto3" json:"postcode,omitempty"`
	Latitude  float64 `protobuf:"fixed64,4,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,5,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_proto_rawDescGZIP(), []int{7}
}

func (x *Address) GetFirstLine() string {
	if x != nil {
		return x.FirstLine
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetPostcode() string {
	if x != nil {
		return x.Postcode
	}
	return ""
}

func (x *Address) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Address) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

// Deprecated: Do not use.
type RestaurantDetailsUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	Restaurant   *flyt.Ident `protobuf:"bytes,1,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
	Details      *Details    `protobuf:"bytes,2,opt,name=details,json=Details,proto3" json:"details,omitempty"`
	RestaurantId string      `protobuf:"bytes,3,opt,name=restaurant_id,json=RestaurantId,proto3" json:"restaurant_id,omitempty"`
	Tenant       string      `protobuf:"bytes,4,opt,name=tenant,json=Tenant,proto3" json:"tenant,omitempty"`
}

func (x *RestaurantDetailsUpdated) Reset() {
	*x = RestaurantDetailsUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantDetailsUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantDetailsUpdated) ProtoMessage() {}

func (x *RestaurantDetailsUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantDetailsUpdated.ProtoReflect.Descriptor instead.
func (*RestaurantDetailsUpdated) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_proto_rawDescGZIP(), []int{8}
}

// Deprecated: Do not use.
func (x *RestaurantDetailsUpdated) GetRestaurant() *flyt.Ident {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

func (x *RestaurantDetailsUpdated) GetDetails() *Details {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *RestaurantDetailsUpdated) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *RestaurantDetailsUpdated) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

type RestaurantDetailsUpdatedV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId     int32    `protobuf:"varint,1,opt,name=restaurant_id,json=RestaurantId,proto3" json:"restaurant_id,omitempty"`
	Tenant           string   `protobuf:"bytes,2,opt,name=tenant,json=Tenant,proto3" json:"tenant,omitempty"`
	Id               string   `protobuf:"bytes,3,opt,name=id,json=Id,proto3" json:"id,omitempty"`
	Timestamp        string   `protobuf:"bytes,4,opt,name=timestamp,json=TimeStamp,proto3" json:"timestamp,omitempty"`
	RaisingComponent string   `protobuf:"bytes,5,opt,name=raising_component,json=RaisingComponent,proto3" json:"raising_component,omitempty"`
	Details          *Details `protobuf:"bytes,6,opt,name=details,json=Details,proto3" json:"details,omitempty"`
}

func (x *RestaurantDetailsUpdatedV2) Reset() {
	*x = RestaurantDetailsUpdatedV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantDetailsUpdatedV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantDetailsUpdatedV2) ProtoMessage() {}

func (x *RestaurantDetailsUpdatedV2) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantDetailsUpdatedV2.ProtoReflect.Descriptor instead.
func (*RestaurantDetailsUpdatedV2) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_proto_rawDescGZIP(), []int{9}
}

func (x *RestaurantDetailsUpdatedV2) GetRestaurantId() int32 {
	if x != nil {
		return x.RestaurantId
	}
	return 0
}

func (x *RestaurantDetailsUpdatedV2) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *RestaurantDetailsUpdatedV2) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RestaurantDetailsUpdatedV2) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *RestaurantDetailsUpdatedV2) GetRaisingComponent() string {
	if x != nil {
		return x.RaisingComponent
	}
	return ""
}

func (x *RestaurantDetailsUpdatedV2) GetDetails() *Details {
	if x != nil {
		return x.Details
	}
	return nil
}

type Details struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description          string         `protobuf:"bytes,1,opt,name=description,json=Description,proto3" json:"description,omitempty"`
	ShortDescription     string         `protobuf:"bytes,2,opt,name=short_description,json=ShortDescription,proto3" json:"short_description,omitempty"`
	InvoiceEmail         string         `protobuf:"bytes,3,opt,name=invoice_email,json=InvoiceEmail,proto3" json:"invoice_email,omitempty"`
	AlcoholLicenseNumber string         `protobuf:"bytes,4,opt,name=alcohol_license_number,json=AlcoholLicenseNumber,proto3" json:"alcohol_license_number,omitempty"`
	HalalStatus          bool           `protobuf:"varint,5,opt,name=halal_status,json=HalalStatus,proto3" json:"halal_status,omitempty"`
	DoubleReceipt        bool           `protobuf:"varint,6,opt,name=double_receipt,json=DoubleReceipt,proto3" json:"double_receipt,omitempty"`
	Tags                 []string       `protobuf:"bytes,7,rep,name=tags,json=Tags,proto3" json:"tags,omitempty"`
	Cuisines             []*CuisineBase `protobuf:"bytes,8,rep,name=cuisines,json=Cuisines,proto3" json:"cuisines,omitempty"`
}

func (x *Details) Reset() {
	*x = Details{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Details) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Details) ProtoMessage() {}

func (x *Details) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Details.ProtoReflect.Descriptor instead.
func (*Details) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_proto_rawDescGZIP(), []int{10}
}

func (x *Details) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Details) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *Details) GetInvoiceEmail() string {
	if x != nil {
		return x.InvoiceEmail
	}
	return ""
}

func (x *Details) GetAlcoholLicenseNumber() string {
	if x != nil {
		return x.AlcoholLicenseNumber
	}
	return ""
}

func (x *Details) GetHalalStatus() bool {
	if x != nil {
		return x.HalalStatus
	}
	return false
}

func (x *Details) GetDoubleReceipt() bool {
	if x != nil {
		return x.DoubleReceipt
	}
	return false
}

func (x *Details) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Details) GetCuisines() []*CuisineBase {
	if x != nil {
		return x.Cuisines
	}
	return nil
}

type CuisineBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,json=Id,proto3" json:"id,omitempty"`
	Rank     int32  `protobuf:"varint,2,opt,name=rank,json=Rank,proto3" json:"rank,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,json=Name,proto3" json:"name,omitempty"`
	SeoName  string `protobuf:"bytes,4,opt,name=seo_name,json=SeoName,proto3" json:"seo_name,omitempty"`
	Language string `protobuf:"bytes,5,opt,name=language,json=Language,proto3" json:"language,omitempty"`
}

func (x *CuisineBase) Reset() {
	*x = CuisineBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CuisineBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CuisineBase) ProtoMessage() {}

func (x *CuisineBase) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CuisineBase.ProtoReflect.Descriptor instead.
func (*CuisineBase) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_proto_rawDescGZIP(), []int{11}
}

func (x *CuisineBase) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CuisineBase) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *CuisineBase) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CuisineBase) GetSeoName() string {
	if x != nil {
		return x.SeoName
	}
	return ""
}

func (x *CuisineBase) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type RestaurantStateChangedV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	Restaurant       *flyt.Ident   `protobuf:"bytes,1,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
	Timestamp        string        `protobuf:"bytes,2,opt,name=timestamp,json=TimeStamp,proto3" json:"timestamp,omitempty"`
	OldState         string        `protobuf:"bytes,3,opt,name=old_state,json=OldState,proto3" json:"old_state,omitempty"`
	Id               string        `protobuf:"bytes,4,opt,name=id,json=Id,proto3" json:"id,omitempty"`
	RaisingComponent string        `protobuf:"bytes,5,opt,name=raising_component,json=RaisingComponent,proto3" json:"raising_component,omitempty"`
	NewState         string        `protobuf:"bytes,6,opt,name=new_state,json=NewState,proto3" json:"new_state,omitempty"`
	StateDetails     *StateDetails `protobuf:"bytes,7,opt,name=state_details,json=StateDetails,proto3" json:"state_details,omitempty"`
	RestaurantId     int64         `protobuf:"varint,8,opt,name=restaurant_id,json=RestaurantId,proto3" json:"restaurant_id,omitempty"`
	Tenant           string        `protobuf:"bytes,9,opt,name=tenant,json=Tenant,proto3" json:"tenant,omitempty"`
}

func (x *RestaurantStateChangedV2) Reset() {
	*x = RestaurantStateChangedV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantStateChangedV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantStateChangedV2) ProtoMessage() {}

func (x *RestaurantStateChangedV2) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantStateChangedV2.ProtoReflect.Descriptor instead.
func (*RestaurantStateChangedV2) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_proto_rawDescGZIP(), []int{12}
}

// Deprecated: Do not use.
func (x *RestaurantStateChangedV2) GetRestaurant() *flyt.Ident {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

func (x *RestaurantStateChangedV2) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *RestaurantStateChangedV2) GetOldState() string {
	if x != nil {
		return x.OldState
	}
	return ""
}

func (x *RestaurantStateChangedV2) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RestaurantStateChangedV2) GetRaisingComponent() string {
	if x != nil {
		return x.RaisingComponent
	}
	return ""
}

func (x *RestaurantStateChangedV2) GetNewState() string {
	if x != nil {
		return x.NewState
	}
	return ""
}

func (x *RestaurantStateChangedV2) GetStateDetails() *StateDetails {
	if x != nil {
		return x.StateDetails
	}
	return nil
}

func (x *RestaurantStateChangedV2) GetRestaurantId() int64 {
	if x != nil {
		return x.RestaurantId
	}
	return 0
}

func (x *RestaurantStateChangedV2) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

type StateDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State           string `protobuf:"bytes,1,opt,name=state,json=State,proto3" json:"state,omitempty"`
	DateStarted     string `protobuf:"bytes,2,opt,name=date_started,json=DateStarted,proto3" json:"date_started,omitempty"`
	DateCreated     string `protobuf:"bytes,3,opt,name=date_created,json=DateCreated,proto3" json:"date_created,omitempty"`
	NewnessDate     string `protobuf:"bytes,4,opt,name=newness_date,json=NewnessDate,proto3" json:"newness_date,omitempty"`
	ConfidenceLevel string `protobuf:"bytes,5,opt,name=confidence_level,json=ConfidenceLevel,proto3" json:"confidence_level,omitempty"`
	TempOfflineType string `protobuf:"bytes,6,opt,name=temp_offline_type,json=TempOfflineType,proto3" json:"temp_offline_type,omitempty"`
	IsOpen          bool   `protobuf:"varint,7,opt,name=is_open,json=IsOpen,proto3" json:"is_open,omitempty"`
	Offline         bool   `protobuf:"varint,8,opt,name=offline,json=Offline,proto3" json:"offline,omitempty"`
	IsNew           bool   `protobuf:"varint,9,opt,name=is_new,json=IsNew,proto3" json:"is_new,omitempty"`
	TempOffline     bool   `protobuf:"varint,10,opt,name=temp_offline,json=TempOffline,proto3" json:"temp_offline,omitempty"`
}

func (x *StateDetails) Reset() {
	*x = StateDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateDetails) ProtoMessage() {}

func (x *StateDetails) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateDetails.ProtoReflect.Descriptor instead.
func (*StateDetails) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_proto_rawDescGZIP(), []int{13}
}

func (x *StateDetails) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *StateDetails) GetDateStarted() string {
	if x != nil {
		return x.DateStarted
	}
	return ""
}

func (x *StateDetails) GetDateCreated() string {
	if x != nil {
		return x.DateCreated
	}
	return ""
}

func (x *StateDetails) GetNewnessDate() string {
	if x != nil {
		return x.NewnessDate
	}
	return ""
}

func (x *StateDetails) GetConfidenceLevel() string {
	if x != nil {
		return x.ConfidenceLevel
	}
	return ""
}

func (x *StateDetails) GetTempOfflineType() string {
	if x != nil {
		return x.TempOfflineType
	}
	return ""
}

func (x *StateDetails) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *StateDetails) GetOffline() bool {
	if x != nil {
		return x.Offline
	}
	return false
}

func (x *StateDetails) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *StateDetails) GetTempOffline() bool {
	if x != nil {
		return x.TempOffline
	}
	return false
}

type GFOConfigUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	Restaurant    *flyt.Ident `protobuf:"bytes,1,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
	OptedIn       bool        `protobuf:"varint,2,opt,name=opted_in,json=OptedIn,proto3" json:"opted_in,omitempty"`
	LastUpdatedAt string      `protobuf:"bytes,3,opt,name=last_updated_at,json=LastUpdatedAt,proto3" json:"last_updated_at,omitempty"`
	RestaurantId  string      `protobuf:"bytes,4,opt,name=restaurant_id,json=RestaurantId,proto3" json:"restaurant_id,omitempty"`
	Tenant        string      `protobuf:"bytes,5,opt,name=tenant,json=Tenant,proto3" json:"tenant,omitempty"`
}

func (x *GFOConfigUpdated) Reset() {
	*x = GFOConfigUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GFOConfigUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GFOConfigUpdated) ProtoMessage() {}

func (x *GFOConfigUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GFOConfigUpdated.ProtoReflect.Descriptor instead.
func (*GFOConfigUpdated) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_proto_rawDescGZIP(), []int{14}
}

// Deprecated: Do not use.
func (x *GFOConfigUpdated) GetRestaurant() *flyt.Ident {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

func (x *GFOConfigUpdated) GetOptedIn() bool {
	if x != nil {
		return x.OptedIn
	}
	return false
}

func (x *GFOConfigUpdated) GetLastUpdatedAt() string {
	if x != nil {
		return x.LastUpdatedAt
	}
	return ""
}

func (x *GFOConfigUpdated) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *GFOConfigUpdated) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

type DeliveryFeeAreasUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant       string `protobuf:"bytes,1,opt,name=tenant,json=Tenant,proto3" json:"tenant,omitempty"`
	RestaurantId string `protobuf:"bytes,2,opt,name=restaurant_id,json=RestaurantId,proto3" json:"restaurant_id,omitempty"`
	S3BucketName string `protobuf:"bytes,3,opt,name=s3_bucket_name,json=S3BucketName,proto3" json:"s3_bucket_name,omitempty"`
	S3Key        string `protobuf:"bytes,4,opt,name=s3_key,json=S3Key,proto3" json:"s3_key,omitempty"`
	Timestamp    string `protobuf:"bytes,5,opt,name=timestamp,json=TimeStamp,proto3" json:"timestamp,omitempty"`
}

func (x *DeliveryFeeAreasUpdated) Reset() {
	*x = DeliveryFeeAreasUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_justeat_restaurant_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryFeeAreasUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryFeeAreasUpdated) ProtoMessage() {}

func (x *DeliveryFeeAreasUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_justeat_restaurant_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryFeeAreasUpdated.ProtoReflect.Descriptor instead.
func (*DeliveryFeeAreasUpdated) Descriptor() ([]byte, []int) {
	return file_justeat_restaurant_proto_rawDescGZIP(), []int{15}
}

func (x *DeliveryFeeAreasUpdated) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *DeliveryFeeAreasUpdated) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *DeliveryFeeAreasUpdated) GetS3BucketName() string {
	if x != nil {
		return x.S3BucketName
	}
	return ""
}

func (x *DeliveryFeeAreasUpdated) GetS3Key() string {
	if x != nil {
		return x.S3Key
	}
	return ""
}

func (x *DeliveryFeeAreasUpdated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

var File_justeat_restaurant_proto protoreflect.FileDescriptor

var file_justeat_restaurant_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6a, 0x75, 0x73, 0x74,
	0x65, 0x61, 0x74, 0x1a, 0x15, 0x66, 0x6c, 0x79, 0x74, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x66, 0x6c, 0x79, 0x74,
	0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x66, 0x6c,
	0x79, 0x74, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2d, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbf, 0x03,
	0x0a, 0x11, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6a, 0x75, 0x73, 0x74,
	0x65, 0x61, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6c,
	0x79, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52,
	0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x67, 0x65, 0x6e, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x67, 0x65,
	0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x3a,
	0x1e, 0x82, 0xb5, 0x18, 0x1a, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22,
	0x8a, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x50, 0x4f,
	0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3f,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e,
	0x50, 0x6f, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a,
	0x2b, 0x18, 0x01, 0x82, 0xb5, 0x18, 0x25, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x8a, 0x01, 0x0a,
	0x1a, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x50, 0x4f, 0x53, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x50, 0x6f, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x2b, 0x18, 0x01,
	0x82, 0xb5, 0x18, 0x25, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0xa5, 0x03, 0x0a, 0x10, 0x50, 0x6f,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x5f, 0x62, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x75, 0x73, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x35, 0x0a,
	0x17, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x5f, 0x70, 0x6f, 0x73, 0x5f, 0x69,
	0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14,
	0x75, 0x73, 0x65, 0x45, 0x61, 0x72, 0x6c, 0x79, 0x50, 0x6f, 0x73, 0x49, 0x6e, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x5f, 0x6d, 0x65, 0x6e, 0x75,
	0x5f, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75, 0x73, 0x65,
	0x4d, 0x65, 0x6e, 0x75, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x32, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x5f,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x75, 0x73, 0x65, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a, 0x10,
	0x75, 0x73, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x5f, 0x66, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x75, 0x73, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x73, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0xcc, 0x01, 0x0a, 0x21, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x49, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x3a, 0x5c, 0x82, 0xb5, 0x18, 0x2c, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e,
	0x70, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0xa2, 0xbb, 0x18, 0x21, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0xaa, 0xbb, 0x18, 0x03, 0x61, 0x6c, 0x6c,
	0x22, 0xcc, 0x01, 0x0a, 0x21, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x49, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x3a, 0x5c, 0x82, 0xb5, 0x18, 0x2c, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x70,
	0x6f, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0xa2, 0xbb, 0x18, 0x21, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0xaa, 0xbb, 0x18, 0x03, 0x61, 0x6c, 0x6c, 0x22,
	0xaf, 0x03, 0x0a, 0x1a, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x5f, 0x62, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x75, 0x73, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x35, 0x0a,
	0x17, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x5f, 0x70, 0x6f, 0x73, 0x5f, 0x69,
	0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14,
	0x75, 0x73, 0x65, 0x45, 0x61, 0x72, 0x6c, 0x79, 0x50, 0x6f, 0x73, 0x49, 0x6e, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x5f, 0x6d, 0x65, 0x6e, 0x75,
	0x5f, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75, 0x73, 0x65,
	0x4d, 0x65, 0x6e, 0x75, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x32, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x5f,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x75, 0x73, 0x65, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a, 0x10,
	0x75, 0x73, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x5f, 0x66, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x75, 0x73, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x73, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x92, 0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0xde, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x3a, 0x28, 0x18,
	0x01, 0x82, 0xb5, 0x18, 0x22, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xd9, 0x02, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x56, 0x32, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x61, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x61,
	0x69, 0x73, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x2a,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x07, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x3a, 0x77, 0x82, 0xb5, 0x18, 0x25,
	0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x76, 0x32, 0xa2, 0xbb, 0x18, 0x1a, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x56, 0x32, 0xaa, 0xbb, 0x18, 0x02, 0x75, 0x6b, 0xaa, 0xbb, 0x18, 0x02, 0x65, 0x73, 0xaa,
	0xbb, 0x18, 0x02, 0x69, 0x65, 0xaa, 0xbb, 0x18, 0x02, 0x69, 0x74, 0xaa, 0xbb, 0x18, 0x02, 0x64,
	0x6b, 0xaa, 0xbb, 0x18, 0x02, 0x6e, 0x6f, 0xaa, 0xbb, 0x18, 0x02, 0x61, 0x75, 0xaa, 0xbb, 0x18,
	0x02, 0x6e, 0x7a, 0x22, 0xc3, 0x02, 0x0a, 0x07, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x6c, 0x63, 0x6f, 0x68, 0x6f, 0x6c, 0x5f, 0x6c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x41, 0x6c, 0x63, 0x6f, 0x68, 0x6f, 0x6c, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x61, 0x6c,
	0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x48, 0x61, 0x6c, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x54, 0x61, 0x67, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x75, 0x69, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6a, 0x75, 0x73, 0x74,
	0x65, 0x61, 0x74, 0x2e, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x08, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x7c, 0x0a, 0x0b, 0x43, 0x75, 0x69,
	0x73, 0x69, 0x6e, 0x65, 0x42, 0x61, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x53, 0x65, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0xcc, 0x03, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x56, 0x32, 0x12, 0x2f, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x2b, 0x0a, 0x11, 0x72, 0x61, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x61, 0x69,
	0x73, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x4e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x3a, 0x71, 0x82, 0xb5, 0x18, 0x21, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x76, 0x32, 0xa2, 0xbb, 0x18, 0x18, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x56, 0x32, 0xaa, 0xbb, 0x18, 0x02, 0x75, 0x6b, 0xaa, 0xbb, 0x18, 0x02,
	0x65, 0x73, 0xaa, 0xbb, 0x18, 0x02, 0x69, 0x65, 0xaa, 0xbb, 0x18, 0x02, 0x69, 0x74, 0xaa, 0xbb,
	0x18, 0x02, 0x64, 0x6b, 0xaa, 0xbb, 0x18, 0x02, 0x6e, 0x6f, 0xaa, 0xbb, 0x18, 0x02, 0x61, 0x75,
	0xaa, 0xbb, 0x18, 0x02, 0x6e, 0x7a, 0x22, 0xd1, 0x02, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x65, 0x77, 0x6e, 0x65,
	0x73, 0x73, 0x44, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x54, 0x65,
	0x6d, 0x70, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x49, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x5f,
	0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x54,
	0x65, 0x6d, 0x70, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0xf7, 0x01, 0x0a, 0x10, 0x47,
	0x46, 0x4f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x2f, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x42, 0x02, 0x18, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x4f, 0x70, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x3a, 0x32, 0x82, 0xb5, 0x18, 0x1a, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x67, 0x66,
	0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0xa2, 0xbb, 0x18, 0x10, 0x67, 0x66, 0x6f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x22, 0xf4, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x46, 0x65, 0x65, 0x41, 0x72, 0x65, 0x61, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x73, 0x33, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x33, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x33, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x33, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x3a, 0x41, 0x82, 0xb5, 0x18, 0x22, 0x6a, 0x75,
	0x73, 0x74, 0x65, 0x61, 0x74, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x66,
	0x65, 0x65, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x73, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0xa2, 0xbb, 0x18, 0x17, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x41,
	0x72, 0x65, 0x61, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x80, 0x01, 0x0a, 0x0b,
	0x63, 0x6f, 0x6d, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x42, 0x0f, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x24,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x79, 0x70, 0x61,
	0x79, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6a, 0x75, 0x73,
	0x74, 0x65, 0x61, 0x74, 0xa2, 0x02, 0x03, 0x4a, 0x58, 0x58, 0xaa, 0x02, 0x07, 0x4a, 0x75, 0x73,
	0x74, 0x65, 0x61, 0x74, 0xca, 0x02, 0x07, 0x4a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0xe2, 0x02,
	0x13, 0x4a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x07, 0x4a, 0x75, 0x73, 0x74, 0x65, 0x61, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_justeat_restaurant_proto_rawDescOnce sync.Once
	file_justeat_restaurant_proto_rawDescData = file_justeat_restaurant_proto_rawDesc
)

func file_justeat_restaurant_proto_rawDescGZIP() []byte {
	file_justeat_restaurant_proto_rawDescOnce.Do(func() {
		file_justeat_restaurant_proto_rawDescData = protoimpl.X.CompressGZIP(file_justeat_restaurant_proto_rawDescData)
	})
	return file_justeat_restaurant_proto_rawDescData
}

var file_justeat_restaurant_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_justeat_restaurant_proto_goTypes = []interface{}{
	(*RestaurantUpdated)(nil),                 // 0: justeat.RestaurantUpdated
	(*RestaurantPOSConfigUpdated)(nil),        // 1: justeat.RestaurantPOSConfigUpdated
	(*RestaurantPOSConfigDeleted)(nil),        // 2: justeat.RestaurantPOSConfigDeleted
	(*PosConfiguration)(nil),                  // 3: justeat.PosConfiguration
	(*PosRestaurantConfigurationUpdated)(nil), // 4: justeat.PosRestaurantConfigurationUpdated
	(*PosRestaurantConfigurationDeleted)(nil), // 5: justeat.PosRestaurantConfigurationDeleted
	(*PosRestaurantConfiguration)(nil),        // 6: justeat.PosRestaurantConfiguration
	(*Address)(nil),                           // 7: justeat.Address
	(*RestaurantDetailsUpdated)(nil),          // 8: justeat.RestaurantDetailsUpdated
	(*RestaurantDetailsUpdatedV2)(nil),        // 9: justeat.RestaurantDetailsUpdatedV2
	(*Details)(nil),                           // 10: justeat.Details
	(*CuisineBase)(nil),                       // 11: justeat.CuisineBase
	(*RestaurantStateChangedV2)(nil),          // 12: justeat.RestaurantStateChangedV2
	(*StateDetails)(nil),                      // 13: justeat.StateDetails
	(*GFOConfigUpdated)(nil),                  // 14: justeat.GFOConfigUpdated
	(*DeliveryFeeAreasUpdated)(nil),           // 15: justeat.DeliveryFeeAreasUpdated
	(*flyt.Ident)(nil),                        // 16: flyt.Ident
	(*flyt.OpeningTimes)(nil),                 // 17: flyt.OpeningTimes
}
var file_justeat_restaurant_proto_depIdxs = []int32{
	16, // 0: justeat.RestaurantUpdated.restaurant:type_name -> flyt.Ident
	7,  // 1: justeat.RestaurantUpdated.address:type_name -> justeat.Address
	17, // 2: justeat.RestaurantUpdated.opening_times:type_name -> flyt.OpeningTimes
	3,  // 3: justeat.RestaurantPOSConfigUpdated.configuration:type_name -> justeat.PosConfiguration
	3,  // 4: justeat.RestaurantPOSConfigDeleted.configuration:type_name -> justeat.PosConfiguration
	6,  // 5: justeat.PosRestaurantConfigurationUpdated.configuration:type_name -> justeat.PosRestaurantConfiguration
	6,  // 6: justeat.PosRestaurantConfigurationDeleted.configuration:type_name -> justeat.PosRestaurantConfiguration
	16, // 7: justeat.RestaurantDetailsUpdated.restaurant:type_name -> flyt.Ident
	10, // 8: justeat.RestaurantDetailsUpdated.details:type_name -> justeat.Details
	10, // 9: justeat.RestaurantDetailsUpdatedV2.details:type_name -> justeat.Details
	11, // 10: justeat.Details.cuisines:type_name -> justeat.CuisineBase
	16, // 11: justeat.RestaurantStateChangedV2.restaurant:type_name -> flyt.Ident
	13, // 12: justeat.RestaurantStateChangedV2.state_details:type_name -> justeat.StateDetails
	16, // 13: justeat.GFOConfigUpdated.restaurant:type_name -> flyt.Ident
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_justeat_restaurant_proto_init() }
func file_justeat_restaurant_proto_init() {
	if File_justeat_restaurant_proto != nil {
		return
	}
	file_justeat_options_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_justeat_restaurant_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestaurantUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestaurantPOSConfigUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestaurantPOSConfigDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PosConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PosRestaurantConfigurationUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PosRestaurantConfigurationDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PosRestaurantConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestaurantDetailsUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestaurantDetailsUpdatedV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Details); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CuisineBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestaurantStateChangedV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GFOConfigUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_justeat_restaurant_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryFeeAreasUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_justeat_restaurant_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_justeat_restaurant_proto_goTypes,
		DependencyIndexes: file_justeat_restaurant_proto_depIdxs,
		MessageInfos:      file_justeat_restaurant_proto_msgTypes,
	}.Build()
	File_justeat_restaurant_proto = out.File
	file_justeat_restaurant_proto_rawDesc = nil
	file_justeat_restaurant_proto_goTypes = nil
	file_justeat_restaurant_proto_depIdxs = nil
}
